import * as Socket from '@superviz/socket-client';
import { Participant } from '../../common/types/participant.types';
export declare class IOC {
    state: Socket.ConnectionState;
    client: Socket.Realtime;
    private stateSubject;
    constructor(participant: Participant);
    /**
     * @function destroy
     * @description Destroys the socket connection
     * @returns {void}
     */
    destroy(): void;
    /**
     * @function onStateChange
     * @description Subscribe to the socket connection state changes
     * @param next {Function}
     * @returns {void}
     */
    onStateChange(next: (state: Socket.ConnectionState) => void): void;
    /**
     * @function subscribeToDefaultEvents
     * @description subscribe to the default socket events
     * @returns {void}
     */
    private subscribeToDefaultEvents;
    /**
     * @function createRoom
     * @description create and join realtime room
     * @param roomName {string}
     * @returns {Room}
     */
    createRoom(roomName: string): Socket.Room;
}
