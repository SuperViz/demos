import * as Socket from '@superviz/socket-client';
import { Group } from '../../common/types/participant.types';
import { Logger, Observable } from '../../common/utils';
import { useStore } from '../../common/utils/use-store';
import { EventBus } from '../../services/event-bus';
import { IOC } from '../../services/io';
import { AblyRealtimeService } from '../../services/realtime';
import { ComponentNames } from '../types';
import { DefaultAttachComponentOptions } from './types';
export declare abstract class BaseComponent extends Observable {
    abstract name: ComponentNames;
    protected abstract logger: Logger;
    protected group: Group;
    protected ioc: IOC;
    protected realtime: AblyRealtimeService;
    protected eventBus: EventBus;
    protected isAttached: boolean;
    protected unsubscribeFrom: Array<(id: unknown) => void>;
    protected useStore: typeof useStore;
    protected room: Socket.Room;
    /**
     * @function attach
     * @description attach component
     * @returns {void}
     */
    attach: (params: DefaultAttachComponentOptions) => void;
    detach: () => void;
    protected abstract destroy(): void;
    protected abstract start(): void;
}
