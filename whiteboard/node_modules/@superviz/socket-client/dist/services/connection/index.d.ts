import type { Socket } from 'socket.io-client';
import { ErrorCallback } from '../../common/types/callbacks.types';
import { ClientState, ConnectionState } from './types';
export declare class ClientConnection {
    private socket;
    private logger;
    private stateObserver;
    state: ClientState;
    constructor(socket: Socket);
    on(next: (state: ConnectionState) => void, error?: ErrorCallback): void;
    off(): void;
    /**
     * @function subscribeToManagerEvents
     * @description Subscribe to the manager events
     * @returns {void}
     */
    private subscribeToManagerEvents;
    /**
     * @function changeState
     * @description Change the state of the connection
     * @returns {void}
     */
    private changeState;
    /** Manager events handlers */
    private onConnect;
    private onDisconnect;
    private onConnectError;
    private onConnectionError;
    private onReconnect;
    private onReconnectError;
    private onReconnectFailed;
    private onReconnecAttempt;
    private onRateLimit;
}
