var ib=Object.create;var Of=Object.defineProperty;var rb=Object.getOwnPropertyDescriptor;var sb=Object.getOwnPropertyNames;var ab=Object.getPrototypeOf,ob=Object.prototype.hasOwnProperty;var Nf=Math.pow;var Ue=(s,t)=>()=>(t||s((t={exports:{}}).exports,t),t.exports);var lb=(s,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of sb(t))!ob.call(s,a)&&a!==e&&Of(s,a,{get:()=>t[a],enumerable:!(i=rb(t,a))||i.enumerable});return s};var Kl=(s,t,e)=>(e=s!=null?ib(ab(s)):{},lb(t||!s||!s.__esModule?Of(e,"default",{value:s,enumerable:!0}):e,s));var Ie=(s,t,e)=>new Promise((i,a)=>{var o=d=>{try{c(e.next(d))}catch(f){a(f)}},u=d=>{try{c(e.throw(d))}catch(f){a(f)}},c=d=>d.done?i(d.value):Promise.resolve(d.value).then(o,u);c((e=e.apply(s,t)).next())});var zf=Ue(($r,Xs)=>{(function(){var s,t="4.17.21",e=200,i="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",a="Expected a function",o="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",c=500,d="__lodash_placeholder__",f=1,p=2,m=4,g=1,y=2,M=1,v=2,_=4,S=8,D=16,P=32,E=64,I=128,N=256,H=512,T=30,O="...",q=800,ft=16,vt=1,et=2,X=3,nt=1/0,lt=9007199254740991,pt=17976931348623157e292,it=0/0,k=4294967295,Y=k-1,gt=k>>>1,ct=[["ary",I],["bind",M],["bindKey",v],["curry",S],["curryRight",D],["flip",H],["partial",P],["partialRight",E],["rearg",N]],mt="[object Arguments]",At="[object Array]",Ht="[object AsyncFunction]",rt="[object Boolean]",re="[object Date]",Vt="[object DOMException]",Bt="[object Error]",St="[object Function]",fe="[object GeneratorFunction]",Ut="[object Map]",Lt="[object Number]",Oe="[object Null]",Me="[object Object]",Ge="[object Promise]",Rn="[object Proxy]",Se="[object RegExp]",$t="[object Set]",en="[object String]",ln="[object Symbol]",L="[object Undefined]",A="[object WeakMap]",Q="[object WeakSet]",ut="[object ArrayBuffer]",dt="[object DataView]",yt="[object Float32Array]",kt="[object Float64Array]",bt="[object Int8Array]",st="[object Int16Array]",It="[object Int32Array]",Ft="[object Uint8Array]",Tt="[object Uint8ClampedArray]",Dt="[object Uint16Array]",Pt="[object Uint32Array]",se=/\b__p \+= '';/g,_e=/\b(__p \+=) '' \+/g,De=/(__e\(.*?\)|\b__t\)) \+\n'';/g,z=/&(?:amp|lt|gt|quot|#39);/g,$=/[&<>"']/g,ht=RegExp(z.source),Mt=RegExp($.source),Ct=/<%-([\s\S]+?)%>/g,ae=/<%([\s\S]+?)%>/g,Pe=/<%=([\s\S]+?)%>/g,qe=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,fi=/^\w*$/,ve=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,_n=/[\\^$.*+?()[\]{}|]/g,cn=RegExp(_n.source),Or=/^\s+/,Uo=/\s/,Bo=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,ko=/\{\n\/\* \[wrapped with (.+)\] \*/,C=/,? & /,G=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,K=/[()=,{}\[\]\/\s]/,V=/\\(\\)?/g,j=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,Rt=/\w*$/,Wt=/^[-+]0x[0-9a-f]+$/i,Zt=/^0b[01]+$/i,Xt=/^\[object .+?Constructor\]$/,oe=/^0o[0-7]+$/i,jt=/^(?:0|[1-9]\d*)$/,ne=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,me=/($^)/,di=/['\n\r\u2028\u2029\\]/g,qn="\\ud800-\\udfff",Ni="\\u0300-\\u036f",In="\\ufe20-\\ufe2f",le="\\u20d0-\\u20ff",pi=Ni+In+le,Ae="\\u2700-\\u27bf",nn="a-z\\xdf-\\xf6\\xf8-\\xff",ri="\\xac\\xb1\\xd7\\xf7",sr="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",Ps="\\u2000-\\u206f",Je=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",si="A-Z\\xc0-\\xd6\\xd8-\\xde",Nr="\\ufe0e\\ufe0f",Ke=ri+sr+Ps+Je,ar="['\u2019]",Vo="["+qn+"]",Ls="["+Ke+"]",aa="["+pi+"]",gu="\\d+",rm="["+Ae+"]",_u="["+nn+"]",vu="[^"+qn+Ke+gu+Ae+nn+si+"]",Wo="\\ud83c[\\udffb-\\udfff]",sm="(?:"+aa+"|"+Wo+")",xu="[^"+qn+"]",Ho="(?:\\ud83c[\\udde6-\\uddff]){2}",Go="[\\ud800-\\udbff][\\udc00-\\udfff]",zr="["+si+"]",yu="\\u200d",bu="(?:"+_u+"|"+vu+")",am="(?:"+zr+"|"+vu+")",Mu="(?:"+ar+"(?:d|ll|m|re|s|t|ve))?",wu="(?:"+ar+"(?:D|LL|M|RE|S|T|VE))?",Su=sm+"?",Au="["+Nr+"]?",om="(?:"+yu+"(?:"+[xu,Ho,Go].join("|")+")"+Au+Su+")*",lm="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",cm="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Tu=Au+Su+om,um="(?:"+[rm,Ho,Go].join("|")+")"+Tu,hm="(?:"+[xu+aa+"?",aa,Ho,Go,Vo].join("|")+")",fm=RegExp(ar,"g"),dm=RegExp(aa,"g"),qo=RegExp(Wo+"(?="+Wo+")|"+hm+Tu,"g"),pm=RegExp([zr+"?"+_u+"+"+Mu+"(?="+[Ls,zr,"$"].join("|")+")",am+"+"+wu+"(?="+[Ls,zr+bu,"$"].join("|")+")",zr+"?"+bu+"+"+Mu,zr+"+"+wu,cm,lm,gu,um].join("|"),"g"),mm=RegExp("["+yu+qn+pi+Nr+"]"),gm=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,_m=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],vm=-1,ye={};ye[yt]=ye[kt]=ye[bt]=ye[st]=ye[It]=ye[Ft]=ye[Tt]=ye[Dt]=ye[Pt]=!0,ye[mt]=ye[At]=ye[ut]=ye[rt]=ye[dt]=ye[re]=ye[Bt]=ye[St]=ye[Ut]=ye[Lt]=ye[Me]=ye[Se]=ye[$t]=ye[en]=ye[A]=!1;var xe={};xe[mt]=xe[At]=xe[ut]=xe[dt]=xe[rt]=xe[re]=xe[yt]=xe[kt]=xe[bt]=xe[st]=xe[It]=xe[Ut]=xe[Lt]=xe[Me]=xe[Se]=xe[$t]=xe[en]=xe[ln]=xe[Ft]=xe[Tt]=xe[Dt]=xe[Pt]=!0,xe[Bt]=xe[St]=xe[A]=!1;var xm={\u00C0:"A",\u00C1:"A",\u00C2:"A",\u00C3:"A",\u00C4:"A",\u00C5:"A",\u00E0:"a",\u00E1:"a",\u00E2:"a",\u00E3:"a",\u00E4:"a",\u00E5:"a",\u00C7:"C",\u00E7:"c",\u00D0:"D",\u00F0:"d",\u00C8:"E",\u00C9:"E",\u00CA:"E",\u00CB:"E",\u00E8:"e",\u00E9:"e",\u00EA:"e",\u00EB:"e",\u00CC:"I",\u00CD:"I",\u00CE:"I",\u00CF:"I",\u00EC:"i",\u00ED:"i",\u00EE:"i",\u00EF:"i",\u00D1:"N",\u00F1:"n",\u00D2:"O",\u00D3:"O",\u00D4:"O",\u00D5:"O",\u00D6:"O",\u00D8:"O",\u00F2:"o",\u00F3:"o",\u00F4:"o",\u00F5:"o",\u00F6:"o",\u00F8:"o",\u00D9:"U",\u00DA:"U",\u00DB:"U",\u00DC:"U",\u00F9:"u",\u00FA:"u",\u00FB:"u",\u00FC:"u",\u00DD:"Y",\u00FD:"y",\u00FF:"y",\u00C6:"Ae",\u00E6:"ae",\u00DE:"Th",\u00FE:"th",\u00DF:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010A:"C",\u010C:"C",\u0107:"c",\u0109:"c",\u010B:"c",\u010D:"c",\u010E:"D",\u0110:"D",\u010F:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011A:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011B:"e",\u011C:"G",\u011E:"G",\u0120:"G",\u0122:"G",\u011D:"g",\u011F:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012A:"I",\u012C:"I",\u012E:"I",\u0130:"I",\u0129:"i",\u012B:"i",\u012D:"i",\u012F:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013B:"L",\u013D:"L",\u013F:"L",\u0141:"L",\u013A:"l",\u013C:"l",\u013E:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014A:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014B:"n",\u014C:"O",\u014E:"O",\u0150:"O",\u014D:"o",\u014F:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015A:"S",\u015C:"S",\u015E:"S",\u0160:"S",\u015B:"s",\u015D:"s",\u015F:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016A:"U",\u016C:"U",\u016E:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016B:"u",\u016D:"u",\u016F:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017B:"Z",\u017D:"Z",\u017A:"z",\u017C:"z",\u017E:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017F:"s"},ym={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},bm={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Mm={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},wm=parseFloat,Sm=parseInt,Eu=typeof global=="object"&&global&&global.Object===Object&&global,Am=typeof self=="object"&&self&&self.Object===Object&&self,Xe=Eu||Am||Function("return this")(),Xo=typeof $r=="object"&&$r&&!$r.nodeType&&$r,or=Xo&&typeof Xs=="object"&&Xs&&!Xs.nodeType&&Xs,Cu=or&&or.exports===Xo,Yo=Cu&&Eu.process,Dn=function(){try{var U=or&&or.require&&or.require("util").types;return U||Yo&&Yo.binding&&Yo.binding("util")}catch(J){}}(),Pu=Dn&&Dn.isArrayBuffer,Lu=Dn&&Dn.isDate,Ru=Dn&&Dn.isMap,Iu=Dn&&Dn.isRegExp,Du=Dn&&Dn.isSet,Fu=Dn&&Dn.isTypedArray;function vn(U,J,Z){switch(Z.length){case 0:return U.call(J);case 1:return U.call(J,Z[0]);case 2:return U.call(J,Z[0],Z[1]);case 3:return U.call(J,Z[0],Z[1],Z[2])}return U.apply(J,Z)}function Tm(U,J,Z,wt){for(var Gt=-1,ce=U==null?0:U.length;++Gt<ce;){var Ne=U[Gt];J(wt,Ne,Z(Ne),U)}return wt}function Fn(U,J){for(var Z=-1,wt=U==null?0:U.length;++Z<wt&&J(U[Z],Z,U)!==!1;);return U}function Em(U,J){for(var Z=U==null?0:U.length;Z--&&J(U[Z],Z,U)!==!1;);return U}function Ou(U,J){for(var Z=-1,wt=U==null?0:U.length;++Z<wt;)if(!J(U[Z],Z,U))return!1;return!0}function zi(U,J){for(var Z=-1,wt=U==null?0:U.length,Gt=0,ce=[];++Z<wt;){var Ne=U[Z];J(Ne,Z,U)&&(ce[Gt++]=Ne)}return ce}function oa(U,J){var Z=U==null?0:U.length;return!!Z&&Ur(U,J,0)>-1}function Zo(U,J,Z){for(var wt=-1,Gt=U==null?0:U.length;++wt<Gt;)if(Z(J,U[wt]))return!0;return!1}function we(U,J){for(var Z=-1,wt=U==null?0:U.length,Gt=Array(wt);++Z<wt;)Gt[Z]=J(U[Z],Z,U);return Gt}function Ui(U,J){for(var Z=-1,wt=J.length,Gt=U.length;++Z<wt;)U[Gt+Z]=J[Z];return U}function Jo(U,J,Z,wt){var Gt=-1,ce=U==null?0:U.length;for(wt&&ce&&(Z=U[++Gt]);++Gt<ce;)Z=J(Z,U[Gt],Gt,U);return Z}function Cm(U,J,Z,wt){var Gt=U==null?0:U.length;for(wt&&Gt&&(Z=U[--Gt]);Gt--;)Z=J(Z,U[Gt],Gt,U);return Z}function $o(U,J){for(var Z=-1,wt=U==null?0:U.length;++Z<wt;)if(J(U[Z],Z,U))return!0;return!1}var Pm=Ko("length");function Lm(U){return U.split("")}function Rm(U){return U.match(G)||[]}function Nu(U,J,Z){var wt;return Z(U,function(Gt,ce,Ne){if(J(Gt,ce,Ne))return wt=ce,!1}),wt}function la(U,J,Z,wt){for(var Gt=U.length,ce=Z+(wt?1:-1);wt?ce--:++ce<Gt;)if(J(U[ce],ce,U))return ce;return-1}function Ur(U,J,Z){return J===J?Hm(U,J,Z):la(U,zu,Z)}function Im(U,J,Z,wt){for(var Gt=Z-1,ce=U.length;++Gt<ce;)if(wt(U[Gt],J))return Gt;return-1}function zu(U){return U!==U}function Uu(U,J){var Z=U==null?0:U.length;return Z?jo(U,J)/Z:it}function Ko(U){return function(J){return J==null?s:J[U]}}function Qo(U){return function(J){return U==null?s:U[J]}}function Bu(U,J,Z,wt,Gt){return Gt(U,function(ce,Ne,ge){Z=wt?(wt=!1,ce):J(Z,ce,Ne,ge)}),Z}function Dm(U,J){var Z=U.length;for(U.sort(J);Z--;)U[Z]=U[Z].value;return U}function jo(U,J){for(var Z,wt=-1,Gt=U.length;++wt<Gt;){var ce=J(U[wt]);ce!==s&&(Z=Z===s?ce:Z+ce)}return Z}function tl(U,J){for(var Z=-1,wt=Array(U);++Z<U;)wt[Z]=J(Z);return wt}function Fm(U,J){return we(J,function(Z){return[Z,U[Z]]})}function ku(U){return U&&U.slice(0,Gu(U)+1).replace(Or,"")}function xn(U){return function(J){return U(J)}}function el(U,J){return we(J,function(Z){return U[Z]})}function Rs(U,J){return U.has(J)}function Vu(U,J){for(var Z=-1,wt=U.length;++Z<wt&&Ur(J,U[Z],0)>-1;);return Z}function Wu(U,J){for(var Z=U.length;Z--&&Ur(J,U[Z],0)>-1;);return Z}function Om(U,J){for(var Z=U.length,wt=0;Z--;)U[Z]===J&&++wt;return wt}var Nm=Qo(xm),zm=Qo(ym);function Um(U){return"\\"+Mm[U]}function Bm(U,J){return U==null?s:U[J]}function Br(U){return mm.test(U)}function km(U){return gm.test(U)}function Vm(U){for(var J,Z=[];!(J=U.next()).done;)Z.push(J.value);return Z}function nl(U){var J=-1,Z=Array(U.size);return U.forEach(function(wt,Gt){Z[++J]=[Gt,wt]}),Z}function Hu(U,J){return function(Z){return U(J(Z))}}function Bi(U,J){for(var Z=-1,wt=U.length,Gt=0,ce=[];++Z<wt;){var Ne=U[Z];(Ne===J||Ne===d)&&(U[Z]=d,ce[Gt++]=Z)}return ce}function ca(U){var J=-1,Z=Array(U.size);return U.forEach(function(wt){Z[++J]=wt}),Z}function Wm(U){var J=-1,Z=Array(U.size);return U.forEach(function(wt){Z[++J]=[wt,wt]}),Z}function Hm(U,J,Z){for(var wt=Z-1,Gt=U.length;++wt<Gt;)if(U[wt]===J)return wt;return-1}function Gm(U,J,Z){for(var wt=Z+1;wt--;)if(U[wt]===J)return wt;return wt}function kr(U){return Br(U)?Xm(U):Pm(U)}function Xn(U){return Br(U)?Ym(U):Lm(U)}function Gu(U){for(var J=U.length;J--&&Uo.test(U.charAt(J)););return J}var qm=Qo(bm);function Xm(U){for(var J=qo.lastIndex=0;qo.test(U);)++J;return J}function Ym(U){return U.match(qo)||[]}function Zm(U){return U.match(pm)||[]}var Jm=function U(J){J=J==null?Xe:ki.defaults(Xe.Object(),J,ki.pick(Xe,_m));var Z=J.Array,wt=J.Date,Gt=J.Error,ce=J.Function,Ne=J.Math,ge=J.Object,il=J.RegExp,$m=J.String,On=J.TypeError,ua=Z.prototype,Km=ce.prototype,Vr=ge.prototype,ha=J["__core-js_shared__"],fa=Km.toString,de=Vr.hasOwnProperty,Qm=0,qu=function(){var n=/[^.]+$/.exec(ha&&ha.keys&&ha.keys.IE_PROTO||"");return n?"Symbol(src)_1."+n:""}(),da=Vr.toString,jm=fa.call(ge),tg=Xe._,eg=il("^"+fa.call(de).replace(_n,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),pa=Cu?J.Buffer:s,Vi=J.Symbol,ma=J.Uint8Array,Xu=pa?pa.allocUnsafe:s,ga=Hu(ge.getPrototypeOf,ge),Yu=ge.create,Zu=Vr.propertyIsEnumerable,_a=ua.splice,Ju=Vi?Vi.isConcatSpreadable:s,Is=Vi?Vi.iterator:s,lr=Vi?Vi.toStringTag:s,va=function(){try{var n=dr(ge,"defineProperty");return n({},"",{}),n}catch(r){}}(),ng=J.clearTimeout!==Xe.clearTimeout&&J.clearTimeout,ig=wt&&wt.now!==Xe.Date.now&&wt.now,rg=J.setTimeout!==Xe.setTimeout&&J.setTimeout,xa=Ne.ceil,ya=Ne.floor,rl=ge.getOwnPropertySymbols,sg=pa?pa.isBuffer:s,$u=J.isFinite,ag=ua.join,og=Hu(ge.keys,ge),ze=Ne.max,Qe=Ne.min,lg=wt.now,cg=J.parseInt,Ku=Ne.random,ug=ua.reverse,sl=dr(J,"DataView"),Ds=dr(J,"Map"),al=dr(J,"Promise"),Wr=dr(J,"Set"),Fs=dr(J,"WeakMap"),Os=dr(ge,"create"),ba=Fs&&new Fs,Hr={},hg=pr(sl),fg=pr(Ds),dg=pr(al),pg=pr(Wr),mg=pr(Fs),Ma=Vi?Vi.prototype:s,Ns=Ma?Ma.valueOf:s,Qu=Ma?Ma.toString:s;function b(n){if(Ee(n)&&!qt(n)&&!(n instanceof ee)){if(n instanceof Nn)return n;if(de.call(n,"__wrapped__"))return jh(n)}return new Nn(n)}var Gr=function(){function n(){}return function(r){if(!Te(r))return{};if(Yu)return Yu(r);n.prototype=r;var l=new n;return n.prototype=s,l}}();function wa(){}function Nn(n,r){this.__wrapped__=n,this.__actions__=[],this.__chain__=!!r,this.__index__=0,this.__values__=s}b.templateSettings={escape:Ct,evaluate:ae,interpolate:Pe,variable:"",imports:{_:b}},b.prototype=wa.prototype,b.prototype.constructor=b,Nn.prototype=Gr(wa.prototype),Nn.prototype.constructor=Nn;function ee(n){this.__wrapped__=n,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=k,this.__views__=[]}function gg(){var n=new ee(this.__wrapped__);return n.__actions__=un(this.__actions__),n.__dir__=this.__dir__,n.__filtered__=this.__filtered__,n.__iteratees__=un(this.__iteratees__),n.__takeCount__=this.__takeCount__,n.__views__=un(this.__views__),n}function _g(){if(this.__filtered__){var n=new ee(this);n.__dir__=-1,n.__filtered__=!0}else n=this.clone(),n.__dir__*=-1;return n}function vg(){var n=this.__wrapped__.value(),r=this.__dir__,l=qt(n),h=r<0,x=l?n.length:0,w=L0(0,x,this.__views__),R=w.start,F=w.end,B=F-R,tt=h?F:R-1,at=this.__iteratees__,ot=at.length,xt=0,Et=Qe(B,this.__takeCount__);if(!l||!h&&x==B&&Et==B)return Mh(n,this.__actions__);var Nt=[];t:for(;B--&&xt<Et;){tt+=r;for(var Jt=-1,zt=n[tt];++Jt<ot;){var te=at[Jt],ie=te.iteratee,Mn=te.type,an=ie(zt);if(Mn==et)zt=an;else if(!an){if(Mn==vt)continue t;break t}}Nt[xt++]=zt}return Nt}ee.prototype=Gr(wa.prototype),ee.prototype.constructor=ee;function cr(n){var r=-1,l=n==null?0:n.length;for(this.clear();++r<l;){var h=n[r];this.set(h[0],h[1])}}function xg(){this.__data__=Os?Os(null):{},this.size=0}function yg(n){var r=this.has(n)&&delete this.__data__[n];return this.size-=r?1:0,r}function bg(n){var r=this.__data__;if(Os){var l=r[n];return l===u?s:l}return de.call(r,n)?r[n]:s}function Mg(n){var r=this.__data__;return Os?r[n]!==s:de.call(r,n)}function wg(n,r){var l=this.__data__;return this.size+=this.has(n)?0:1,l[n]=Os&&r===s?u:r,this}cr.prototype.clear=xg,cr.prototype.delete=yg,cr.prototype.get=bg,cr.prototype.has=Mg,cr.prototype.set=wg;function mi(n){var r=-1,l=n==null?0:n.length;for(this.clear();++r<l;){var h=n[r];this.set(h[0],h[1])}}function Sg(){this.__data__=[],this.size=0}function Ag(n){var r=this.__data__,l=Sa(r,n);if(l<0)return!1;var h=r.length-1;return l==h?r.pop():_a.call(r,l,1),--this.size,!0}function Tg(n){var r=this.__data__,l=Sa(r,n);return l<0?s:r[l][1]}function Eg(n){return Sa(this.__data__,n)>-1}function Cg(n,r){var l=this.__data__,h=Sa(l,n);return h<0?(++this.size,l.push([n,r])):l[h][1]=r,this}mi.prototype.clear=Sg,mi.prototype.delete=Ag,mi.prototype.get=Tg,mi.prototype.has=Eg,mi.prototype.set=Cg;function gi(n){var r=-1,l=n==null?0:n.length;for(this.clear();++r<l;){var h=n[r];this.set(h[0],h[1])}}function Pg(){this.size=0,this.__data__={hash:new cr,map:new(Ds||mi),string:new cr}}function Lg(n){var r=Na(this,n).delete(n);return this.size-=r?1:0,r}function Rg(n){return Na(this,n).get(n)}function Ig(n){return Na(this,n).has(n)}function Dg(n,r){var l=Na(this,n),h=l.size;return l.set(n,r),this.size+=l.size==h?0:1,this}gi.prototype.clear=Pg,gi.prototype.delete=Lg,gi.prototype.get=Rg,gi.prototype.has=Ig,gi.prototype.set=Dg;function ur(n){var r=-1,l=n==null?0:n.length;for(this.__data__=new gi;++r<l;)this.add(n[r])}function Fg(n){return this.__data__.set(n,u),this}function Og(n){return this.__data__.has(n)}ur.prototype.add=ur.prototype.push=Fg,ur.prototype.has=Og;function Yn(n){var r=this.__data__=new mi(n);this.size=r.size}function Ng(){this.__data__=new mi,this.size=0}function zg(n){var r=this.__data__,l=r.delete(n);return this.size=r.size,l}function Ug(n){return this.__data__.get(n)}function Bg(n){return this.__data__.has(n)}function kg(n,r){var l=this.__data__;if(l instanceof mi){var h=l.__data__;if(!Ds||h.length<e-1)return h.push([n,r]),this.size=++l.size,this;l=this.__data__=new gi(h)}return l.set(n,r),this.size=l.size,this}Yn.prototype.clear=Ng,Yn.prototype.delete=zg,Yn.prototype.get=Ug,Yn.prototype.has=Bg,Yn.prototype.set=kg;function ju(n,r){var l=qt(n),h=!l&&mr(n),x=!l&&!h&&Xi(n),w=!l&&!h&&!x&&Zr(n),R=l||h||x||w,F=R?tl(n.length,$m):[],B=F.length;for(var tt in n)(r||de.call(n,tt))&&!(R&&(tt=="length"||x&&(tt=="offset"||tt=="parent")||w&&(tt=="buffer"||tt=="byteLength"||tt=="byteOffset")||yi(tt,B)))&&F.push(tt);return F}function th(n){var r=n.length;return r?n[_l(0,r-1)]:s}function Vg(n,r){return za(un(n),hr(r,0,n.length))}function Wg(n){return za(un(n))}function ol(n,r,l){(l!==s&&!Zn(n[r],l)||l===s&&!(r in n))&&_i(n,r,l)}function zs(n,r,l){var h=n[r];(!(de.call(n,r)&&Zn(h,l))||l===s&&!(r in n))&&_i(n,r,l)}function Sa(n,r){for(var l=n.length;l--;)if(Zn(n[l][0],r))return l;return-1}function Hg(n,r,l,h){return Wi(n,function(x,w,R){r(h,x,l(x),R)}),h}function eh(n,r){return n&&oi(r,Ye(r),n)}function Gg(n,r){return n&&oi(r,fn(r),n)}function _i(n,r,l){r=="__proto__"&&va?va(n,r,{configurable:!0,enumerable:!0,value:l,writable:!0}):n[r]=l}function ll(n,r){for(var l=-1,h=r.length,x=Z(h),w=n==null;++l<h;)x[l]=w?s:Wl(n,r[l]);return x}function hr(n,r,l){return n===n&&(l!==s&&(n=n<=l?n:l),r!==s&&(n=n>=r?n:r)),n}function zn(n,r,l,h,x,w){var R,F=r&f,B=r&p,tt=r&m;if(l&&(R=x?l(n,h,x,w):l(n)),R!==s)return R;if(!Te(n))return n;var at=qt(n);if(at){if(R=I0(n),!F)return un(n,R)}else{var ot=je(n),xt=ot==St||ot==fe;if(Xi(n))return Ah(n,F);if(ot==Me||ot==mt||xt&&!x){if(R=B||xt?{}:Gh(n),!F)return B?b0(n,Gg(R,n)):y0(n,eh(R,n))}else{if(!xe[ot])return x?n:{};R=D0(n,ot,F)}}w||(w=new Yn);var Et=w.get(n);if(Et)return Et;w.set(n,R),yf(n)?n.forEach(function(zt){R.add(zn(zt,r,l,zt,n,w))}):vf(n)&&n.forEach(function(zt,te){R.set(te,zn(zt,r,l,te,n,w))});var Nt=tt?B?Cl:El:B?fn:Ye,Jt=at?s:Nt(n);return Fn(Jt||n,function(zt,te){Jt&&(te=zt,zt=n[te]),zs(R,te,zn(zt,r,l,te,n,w))}),R}function qg(n){var r=Ye(n);return function(l){return nh(l,n,r)}}function nh(n,r,l){var h=l.length;if(n==null)return!h;for(n=ge(n);h--;){var x=l[h],w=r[x],R=n[x];if(R===s&&!(x in n)||!w(R))return!1}return!0}function ih(n,r,l){if(typeof n!="function")throw new On(a);return Gs(function(){n.apply(s,l)},r)}function Us(n,r,l,h){var x=-1,w=oa,R=!0,F=n.length,B=[],tt=r.length;if(!F)return B;l&&(r=we(r,xn(l))),h?(w=Zo,R=!1):r.length>=e&&(w=Rs,R=!1,r=new ur(r));t:for(;++x<F;){var at=n[x],ot=l==null?at:l(at);if(at=h||at!==0?at:0,R&&ot===ot){for(var xt=tt;xt--;)if(r[xt]===ot)continue t;B.push(at)}else w(r,ot,h)||B.push(at)}return B}var Wi=Lh(ai),rh=Lh(ul,!0);function Xg(n,r){var l=!0;return Wi(n,function(h,x,w){return l=!!r(h,x,w),l}),l}function Aa(n,r,l){for(var h=-1,x=n.length;++h<x;){var w=n[h],R=r(w);if(R!=null&&(F===s?R===R&&!bn(R):l(R,F)))var F=R,B=w}return B}function Yg(n,r,l,h){var x=n.length;for(l=Yt(l),l<0&&(l=-l>x?0:x+l),h=h===s||h>x?x:Yt(h),h<0&&(h+=x),h=l>h?0:Mf(h);l<h;)n[l++]=r;return n}function sh(n,r){var l=[];return Wi(n,function(h,x,w){r(h,x,w)&&l.push(h)}),l}function $e(n,r,l,h,x){var w=-1,R=n.length;for(l||(l=O0),x||(x=[]);++w<R;){var F=n[w];r>0&&l(F)?r>1?$e(F,r-1,l,h,x):Ui(x,F):h||(x[x.length]=F)}return x}var cl=Rh(),ah=Rh(!0);function ai(n,r){return n&&cl(n,r,Ye)}function ul(n,r){return n&&ah(n,r,Ye)}function Ta(n,r){return zi(r,function(l){return bi(n[l])})}function fr(n,r){r=Gi(r,n);for(var l=0,h=r.length;n!=null&&l<h;)n=n[li(r[l++])];return l&&l==h?n:s}function oh(n,r,l){var h=r(n);return qt(n)?h:Ui(h,l(n))}function rn(n){return n==null?n===s?L:Oe:lr&&lr in ge(n)?P0(n):W0(n)}function hl(n,r){return n>r}function Zg(n,r){return n!=null&&de.call(n,r)}function Jg(n,r){return n!=null&&r in ge(n)}function $g(n,r,l){return n>=Qe(r,l)&&n<ze(r,l)}function fl(n,r,l){for(var h=l?Zo:oa,x=n[0].length,w=n.length,R=w,F=Z(w),B=1/0,tt=[];R--;){var at=n[R];R&&r&&(at=we(at,xn(r))),B=Qe(at.length,B),F[R]=!l&&(r||x>=120&&at.length>=120)?new ur(R&&at):s}at=n[0];var ot=-1,xt=F[0];t:for(;++ot<x&&tt.length<B;){var Et=at[ot],Nt=r?r(Et):Et;if(Et=l||Et!==0?Et:0,!(xt?Rs(xt,Nt):h(tt,Nt,l))){for(R=w;--R;){var Jt=F[R];if(!(Jt?Rs(Jt,Nt):h(n[R],Nt,l)))continue t}xt&&xt.push(Nt),tt.push(Et)}}return tt}function Kg(n,r,l,h){return ai(n,function(x,w,R){r(h,l(x),w,R)}),h}function Bs(n,r,l){r=Gi(r,n),n=Zh(n,r);var h=n==null?n:n[li(Bn(r))];return h==null?s:vn(h,n,l)}function lh(n){return Ee(n)&&rn(n)==mt}function Qg(n){return Ee(n)&&rn(n)==ut}function jg(n){return Ee(n)&&rn(n)==re}function ks(n,r,l,h,x){return n===r?!0:n==null||r==null||!Ee(n)&&!Ee(r)?n!==n&&r!==r:t0(n,r,l,h,ks,x)}function t0(n,r,l,h,x,w){var R=qt(n),F=qt(r),B=R?At:je(n),tt=F?At:je(r);B=B==mt?Me:B,tt=tt==mt?Me:tt;var at=B==Me,ot=tt==Me,xt=B==tt;if(xt&&Xi(n)){if(!Xi(r))return!1;R=!0,at=!1}if(xt&&!at)return w||(w=new Yn),R||Zr(n)?Vh(n,r,l,h,x,w):E0(n,r,B,l,h,x,w);if(!(l&g)){var Et=at&&de.call(n,"__wrapped__"),Nt=ot&&de.call(r,"__wrapped__");if(Et||Nt){var Jt=Et?n.value():n,zt=Nt?r.value():r;return w||(w=new Yn),x(Jt,zt,l,h,w)}}return xt?(w||(w=new Yn),C0(n,r,l,h,x,w)):!1}function e0(n){return Ee(n)&&je(n)==Ut}function dl(n,r,l,h){var x=l.length,w=x,R=!h;if(n==null)return!w;for(n=ge(n);x--;){var F=l[x];if(R&&F[2]?F[1]!==n[F[0]]:!(F[0]in n))return!1}for(;++x<w;){F=l[x];var B=F[0],tt=n[B],at=F[1];if(R&&F[2]){if(tt===s&&!(B in n))return!1}else{var ot=new Yn;if(h)var xt=h(tt,at,B,n,r,ot);if(!(xt===s?ks(at,tt,g|y,h,ot):xt))return!1}}return!0}function ch(n){if(!Te(n)||z0(n))return!1;var r=bi(n)?eg:Xt;return r.test(pr(n))}function n0(n){return Ee(n)&&rn(n)==Se}function i0(n){return Ee(n)&&je(n)==$t}function r0(n){return Ee(n)&&Ha(n.length)&&!!ye[rn(n)]}function uh(n){return typeof n=="function"?n:n==null?dn:typeof n=="object"?qt(n)?dh(n[0],n[1]):fh(n):Df(n)}function pl(n){if(!Hs(n))return og(n);var r=[];for(var l in ge(n))de.call(n,l)&&l!="constructor"&&r.push(l);return r}function s0(n){if(!Te(n))return V0(n);var r=Hs(n),l=[];for(var h in n)h=="constructor"&&(r||!de.call(n,h))||l.push(h);return l}function ml(n,r){return n<r}function hh(n,r){var l=-1,h=hn(n)?Z(n.length):[];return Wi(n,function(x,w,R){h[++l]=r(x,w,R)}),h}function fh(n){var r=Ll(n);return r.length==1&&r[0][2]?Xh(r[0][0],r[0][1]):function(l){return l===n||dl(l,n,r)}}function dh(n,r){return Il(n)&&qh(r)?Xh(li(n),r):function(l){var h=Wl(l,n);return h===s&&h===r?Hl(l,n):ks(r,h,g|y)}}function Ea(n,r,l,h,x){n!==r&&cl(r,function(w,R){if(x||(x=new Yn),Te(w))a0(n,r,R,l,Ea,h,x);else{var F=h?h(Fl(n,R),w,R+"",n,r,x):s;F===s&&(F=w),ol(n,R,F)}},fn)}function a0(n,r,l,h,x,w,R){var F=Fl(n,l),B=Fl(r,l),tt=R.get(B);if(tt){ol(n,l,tt);return}var at=w?w(F,B,l+"",n,r,R):s,ot=at===s;if(ot){var xt=qt(B),Et=!xt&&Xi(B),Nt=!xt&&!Et&&Zr(B);at=B,xt||Et||Nt?qt(F)?at=F:Le(F)?at=un(F):Et?(ot=!1,at=Ah(B,!0)):Nt?(ot=!1,at=Th(B,!0)):at=[]:qs(B)||mr(B)?(at=F,mr(F)?at=wf(F):(!Te(F)||bi(F))&&(at=Gh(B))):ot=!1}ot&&(R.set(B,at),x(at,B,h,w,R),R.delete(B)),ol(n,l,at)}function ph(n,r){var l=n.length;if(!!l)return r+=r<0?l:0,yi(r,l)?n[r]:s}function mh(n,r,l){r.length?r=we(r,function(w){return qt(w)?function(R){return fr(R,w.length===1?w[0]:w)}:w}):r=[dn];var h=-1;r=we(r,xn(Ot()));var x=hh(n,function(w,R,F){var B=we(r,function(tt){return tt(w)});return{criteria:B,index:++h,value:w}});return Dm(x,function(w,R){return x0(w,R,l)})}function o0(n,r){return gh(n,r,function(l,h){return Hl(n,h)})}function gh(n,r,l){for(var h=-1,x=r.length,w={};++h<x;){var R=r[h],F=fr(n,R);l(F,R)&&Vs(w,Gi(R,n),F)}return w}function l0(n){return function(r){return fr(r,n)}}function gl(n,r,l,h){var x=h?Im:Ur,w=-1,R=r.length,F=n;for(n===r&&(r=un(r)),l&&(F=we(n,xn(l)));++w<R;)for(var B=0,tt=r[w],at=l?l(tt):tt;(B=x(F,at,B,h))>-1;)F!==n&&_a.call(F,B,1),_a.call(n,B,1);return n}function _h(n,r){for(var l=n?r.length:0,h=l-1;l--;){var x=r[l];if(l==h||x!==w){var w=x;yi(x)?_a.call(n,x,1):yl(n,x)}}return n}function _l(n,r){return n+ya(Ku()*(r-n+1))}function c0(n,r,l,h){for(var x=-1,w=ze(xa((r-n)/(l||1)),0),R=Z(w);w--;)R[h?w:++x]=n,n+=l;return R}function vl(n,r){var l="";if(!n||r<1||r>lt)return l;do r%2&&(l+=n),r=ya(r/2),r&&(n+=n);while(r);return l}function Kt(n,r){return Ol(Yh(n,r,dn),n+"")}function u0(n){return th(Jr(n))}function h0(n,r){var l=Jr(n);return za(l,hr(r,0,l.length))}function Vs(n,r,l,h){if(!Te(n))return n;r=Gi(r,n);for(var x=-1,w=r.length,R=w-1,F=n;F!=null&&++x<w;){var B=li(r[x]),tt=l;if(B==="__proto__"||B==="constructor"||B==="prototype")return n;if(x!=R){var at=F[B];tt=h?h(at,B,F):s,tt===s&&(tt=Te(at)?at:yi(r[x+1])?[]:{})}zs(F,B,tt),F=F[B]}return n}var vh=ba?function(n,r){return ba.set(n,r),n}:dn,f0=va?function(n,r){return va(n,"toString",{configurable:!0,enumerable:!1,value:ql(r),writable:!0})}:dn;function d0(n){return za(Jr(n))}function Un(n,r,l){var h=-1,x=n.length;r<0&&(r=-r>x?0:x+r),l=l>x?x:l,l<0&&(l+=x),x=r>l?0:l-r>>>0,r>>>=0;for(var w=Z(x);++h<x;)w[h]=n[h+r];return w}function p0(n,r){var l;return Wi(n,function(h,x,w){return l=r(h,x,w),!l}),!!l}function Ca(n,r,l){var h=0,x=n==null?h:n.length;if(typeof r=="number"&&r===r&&x<=gt){for(;h<x;){var w=h+x>>>1,R=n[w];R!==null&&!bn(R)&&(l?R<=r:R<r)?h=w+1:x=w}return x}return xl(n,r,dn,l)}function xl(n,r,l,h){var x=0,w=n==null?0:n.length;if(w===0)return 0;r=l(r);for(var R=r!==r,F=r===null,B=bn(r),tt=r===s;x<w;){var at=ya((x+w)/2),ot=l(n[at]),xt=ot!==s,Et=ot===null,Nt=ot===ot,Jt=bn(ot);if(R)var zt=h||Nt;else tt?zt=Nt&&(h||xt):F?zt=Nt&&xt&&(h||!Et):B?zt=Nt&&xt&&!Et&&(h||!Jt):Et||Jt?zt=!1:zt=h?ot<=r:ot<r;zt?x=at+1:w=at}return Qe(w,Y)}function xh(n,r){for(var l=-1,h=n.length,x=0,w=[];++l<h;){var R=n[l],F=r?r(R):R;if(!l||!Zn(F,B)){var B=F;w[x++]=R===0?0:R}}return w}function yh(n){return typeof n=="number"?n:bn(n)?it:+n}function yn(n){if(typeof n=="string")return n;if(qt(n))return we(n,yn)+"";if(bn(n))return Qu?Qu.call(n):"";var r=n+"";return r=="0"&&1/n==-nt?"-0":r}function Hi(n,r,l){var h=-1,x=oa,w=n.length,R=!0,F=[],B=F;if(l)R=!1,x=Zo;else if(w>=e){var tt=r?null:A0(n);if(tt)return ca(tt);R=!1,x=Rs,B=new ur}else B=r?[]:F;t:for(;++h<w;){var at=n[h],ot=r?r(at):at;if(at=l||at!==0?at:0,R&&ot===ot){for(var xt=B.length;xt--;)if(B[xt]===ot)continue t;r&&B.push(ot),F.push(at)}else x(B,ot,l)||(B!==F&&B.push(ot),F.push(at))}return F}function yl(n,r){return r=Gi(r,n),n=Zh(n,r),n==null||delete n[li(Bn(r))]}function bh(n,r,l,h){return Vs(n,r,l(fr(n,r)),h)}function Pa(n,r,l,h){for(var x=n.length,w=h?x:-1;(h?w--:++w<x)&&r(n[w],w,n););return l?Un(n,h?0:w,h?w+1:x):Un(n,h?w+1:0,h?x:w)}function Mh(n,r){var l=n;return l instanceof ee&&(l=l.value()),Jo(r,function(h,x){return x.func.apply(x.thisArg,Ui([h],x.args))},l)}function bl(n,r,l){var h=n.length;if(h<2)return h?Hi(n[0]):[];for(var x=-1,w=Z(h);++x<h;)for(var R=n[x],F=-1;++F<h;)F!=x&&(w[x]=Us(w[x]||R,n[F],r,l));return Hi($e(w,1),r,l)}function wh(n,r,l){for(var h=-1,x=n.length,w=r.length,R={};++h<x;){var F=h<w?r[h]:s;l(R,n[h],F)}return R}function Ml(n){return Le(n)?n:[]}function wl(n){return typeof n=="function"?n:dn}function Gi(n,r){return qt(n)?n:Il(n,r)?[n]:Qh(ue(n))}var m0=Kt;function qi(n,r,l){var h=n.length;return l=l===s?h:l,!r&&l>=h?n:Un(n,r,l)}var Sh=ng||function(n){return Xe.clearTimeout(n)};function Ah(n,r){if(r)return n.slice();var l=n.length,h=Xu?Xu(l):new n.constructor(l);return n.copy(h),h}function Sl(n){var r=new n.constructor(n.byteLength);return new ma(r).set(new ma(n)),r}function g0(n,r){var l=r?Sl(n.buffer):n.buffer;return new n.constructor(l,n.byteOffset,n.byteLength)}function _0(n){var r=new n.constructor(n.source,Rt.exec(n));return r.lastIndex=n.lastIndex,r}function v0(n){return Ns?ge(Ns.call(n)):{}}function Th(n,r){var l=r?Sl(n.buffer):n.buffer;return new n.constructor(l,n.byteOffset,n.length)}function Eh(n,r){if(n!==r){var l=n!==s,h=n===null,x=n===n,w=bn(n),R=r!==s,F=r===null,B=r===r,tt=bn(r);if(!F&&!tt&&!w&&n>r||w&&R&&B&&!F&&!tt||h&&R&&B||!l&&B||!x)return 1;if(!h&&!w&&!tt&&n<r||tt&&l&&x&&!h&&!w||F&&l&&x||!R&&x||!B)return-1}return 0}function x0(n,r,l){for(var h=-1,x=n.criteria,w=r.criteria,R=x.length,F=l.length;++h<R;){var B=Eh(x[h],w[h]);if(B){if(h>=F)return B;var tt=l[h];return B*(tt=="desc"?-1:1)}}return n.index-r.index}function Ch(n,r,l,h){for(var x=-1,w=n.length,R=l.length,F=-1,B=r.length,tt=ze(w-R,0),at=Z(B+tt),ot=!h;++F<B;)at[F]=r[F];for(;++x<R;)(ot||x<w)&&(at[l[x]]=n[x]);for(;tt--;)at[F++]=n[x++];return at}function Ph(n,r,l,h){for(var x=-1,w=n.length,R=-1,F=l.length,B=-1,tt=r.length,at=ze(w-F,0),ot=Z(at+tt),xt=!h;++x<at;)ot[x]=n[x];for(var Et=x;++B<tt;)ot[Et+B]=r[B];for(;++R<F;)(xt||x<w)&&(ot[Et+l[R]]=n[x++]);return ot}function un(n,r){var l=-1,h=n.length;for(r||(r=Z(h));++l<h;)r[l]=n[l];return r}function oi(n,r,l,h){var x=!l;l||(l={});for(var w=-1,R=r.length;++w<R;){var F=r[w],B=h?h(l[F],n[F],F,l,n):s;B===s&&(B=n[F]),x?_i(l,F,B):zs(l,F,B)}return l}function y0(n,r){return oi(n,Rl(n),r)}function b0(n,r){return oi(n,Wh(n),r)}function La(n,r){return function(l,h){var x=qt(l)?Tm:Hg,w=r?r():{};return x(l,n,Ot(h,2),w)}}function qr(n){return Kt(function(r,l){var h=-1,x=l.length,w=x>1?l[x-1]:s,R=x>2?l[2]:s;for(w=n.length>3&&typeof w=="function"?(x--,w):s,R&&sn(l[0],l[1],R)&&(w=x<3?s:w,x=1),r=ge(r);++h<x;){var F=l[h];F&&n(r,F,h,w)}return r})}function Lh(n,r){return function(l,h){if(l==null)return l;if(!hn(l))return n(l,h);for(var x=l.length,w=r?x:-1,R=ge(l);(r?w--:++w<x)&&h(R[w],w,R)!==!1;);return l}}function Rh(n){return function(r,l,h){for(var x=-1,w=ge(r),R=h(r),F=R.length;F--;){var B=R[n?F:++x];if(l(w[B],B,w)===!1)break}return r}}function M0(n,r,l){var h=r&M,x=Ws(n);function w(){var R=this&&this!==Xe&&this instanceof w?x:n;return R.apply(h?l:this,arguments)}return w}function Ih(n){return function(r){r=ue(r);var l=Br(r)?Xn(r):s,h=l?l[0]:r.charAt(0),x=l?qi(l,1).join(""):r.slice(1);return h[n]()+x}}function Xr(n){return function(r){return Jo(Rf(Lf(r).replace(fm,"")),n,"")}}function Ws(n){return function(){var r=arguments;switch(r.length){case 0:return new n;case 1:return new n(r[0]);case 2:return new n(r[0],r[1]);case 3:return new n(r[0],r[1],r[2]);case 4:return new n(r[0],r[1],r[2],r[3]);case 5:return new n(r[0],r[1],r[2],r[3],r[4]);case 6:return new n(r[0],r[1],r[2],r[3],r[4],r[5]);case 7:return new n(r[0],r[1],r[2],r[3],r[4],r[5],r[6])}var l=Gr(n.prototype),h=n.apply(l,r);return Te(h)?h:l}}function w0(n,r,l){var h=Ws(n);function x(){for(var w=arguments.length,R=Z(w),F=w,B=Yr(x);F--;)R[F]=arguments[F];var tt=w<3&&R[0]!==B&&R[w-1]!==B?[]:Bi(R,B);if(w-=tt.length,w<l)return zh(n,r,Ra,x.placeholder,s,R,tt,s,s,l-w);var at=this&&this!==Xe&&this instanceof x?h:n;return vn(at,this,R)}return x}function Dh(n){return function(r,l,h){var x=ge(r);if(!hn(r)){var w=Ot(l,3);r=Ye(r),l=function(F){return w(x[F],F,x)}}var R=n(r,l,h);return R>-1?x[w?r[R]:R]:s}}function Fh(n){return xi(function(r){var l=r.length,h=l,x=Nn.prototype.thru;for(n&&r.reverse();h--;){var w=r[h];if(typeof w!="function")throw new On(a);if(x&&!R&&Oa(w)=="wrapper")var R=new Nn([],!0)}for(h=R?h:l;++h<l;){w=r[h];var F=Oa(w),B=F=="wrapper"?Pl(w):s;B&&Dl(B[0])&&B[1]==(I|S|P|N)&&!B[4].length&&B[9]==1?R=R[Oa(B[0])].apply(R,B[3]):R=w.length==1&&Dl(w)?R[F]():R.thru(w)}return function(){var tt=arguments,at=tt[0];if(R&&tt.length==1&&qt(at))return R.plant(at).value();for(var ot=0,xt=l?r[ot].apply(this,tt):at;++ot<l;)xt=r[ot].call(this,xt);return xt}})}function Ra(n,r,l,h,x,w,R,F,B,tt){var at=r&I,ot=r&M,xt=r&v,Et=r&(S|D),Nt=r&H,Jt=xt?s:Ws(n);function zt(){for(var te=arguments.length,ie=Z(te),Mn=te;Mn--;)ie[Mn]=arguments[Mn];if(Et)var an=Yr(zt),wn=Om(ie,an);if(h&&(ie=Ch(ie,h,x,Et)),w&&(ie=Ph(ie,w,R,Et)),te-=wn,Et&&te<tt){var Re=Bi(ie,an);return zh(n,r,Ra,zt.placeholder,l,ie,Re,F,B,tt-te)}var Jn=ot?l:this,wi=xt?Jn[n]:n;return te=ie.length,F?ie=H0(ie,F):Nt&&te>1&&ie.reverse(),at&&B<te&&(ie.length=B),this&&this!==Xe&&this instanceof zt&&(wi=Jt||Ws(wi)),wi.apply(Jn,ie)}return zt}function Oh(n,r){return function(l,h){return Kg(l,n,r(h),{})}}function Ia(n,r){return function(l,h){var x;if(l===s&&h===s)return r;if(l!==s&&(x=l),h!==s){if(x===s)return h;typeof l=="string"||typeof h=="string"?(l=yn(l),h=yn(h)):(l=yh(l),h=yh(h)),x=n(l,h)}return x}}function Al(n){return xi(function(r){return r=we(r,xn(Ot())),Kt(function(l){var h=this;return n(r,function(x){return vn(x,h,l)})})})}function Da(n,r){r=r===s?" ":yn(r);var l=r.length;if(l<2)return l?vl(r,n):r;var h=vl(r,xa(n/kr(r)));return Br(r)?qi(Xn(h),0,n).join(""):h.slice(0,n)}function S0(n,r,l,h){var x=r&M,w=Ws(n);function R(){for(var F=-1,B=arguments.length,tt=-1,at=h.length,ot=Z(at+B),xt=this&&this!==Xe&&this instanceof R?w:n;++tt<at;)ot[tt]=h[tt];for(;B--;)ot[tt++]=arguments[++F];return vn(xt,x?l:this,ot)}return R}function Nh(n){return function(r,l,h){return h&&typeof h!="number"&&sn(r,l,h)&&(l=h=s),r=Mi(r),l===s?(l=r,r=0):l=Mi(l),h=h===s?r<l?1:-1:Mi(h),c0(r,l,h,n)}}function Fa(n){return function(r,l){return typeof r=="string"&&typeof l=="string"||(r=kn(r),l=kn(l)),n(r,l)}}function zh(n,r,l,h,x,w,R,F,B,tt){var at=r&S,ot=at?R:s,xt=at?s:R,Et=at?w:s,Nt=at?s:w;r|=at?P:E,r&=~(at?E:P),r&_||(r&=~(M|v));var Jt=[n,r,x,Et,ot,Nt,xt,F,B,tt],zt=l.apply(s,Jt);return Dl(n)&&Jh(zt,Jt),zt.placeholder=h,$h(zt,n,r)}function Tl(n){var r=Ne[n];return function(l,h){if(l=kn(l),h=h==null?0:Qe(Yt(h),292),h&&$u(l)){var x=(ue(l)+"e").split("e"),w=r(x[0]+"e"+(+x[1]+h));return x=(ue(w)+"e").split("e"),+(x[0]+"e"+(+x[1]-h))}return r(l)}}var A0=Wr&&1/ca(new Wr([,-0]))[1]==nt?function(n){return new Wr(n)}:Zl;function Uh(n){return function(r){var l=je(r);return l==Ut?nl(r):l==$t?Wm(r):Fm(r,n(r))}}function vi(n,r,l,h,x,w,R,F){var B=r&v;if(!B&&typeof n!="function")throw new On(a);var tt=h?h.length:0;if(tt||(r&=~(P|E),h=x=s),R=R===s?R:ze(Yt(R),0),F=F===s?F:Yt(F),tt-=x?x.length:0,r&E){var at=h,ot=x;h=x=s}var xt=B?s:Pl(n),Et=[n,r,l,h,x,at,ot,w,R,F];if(xt&&k0(Et,xt),n=Et[0],r=Et[1],l=Et[2],h=Et[3],x=Et[4],F=Et[9]=Et[9]===s?B?0:n.length:ze(Et[9]-tt,0),!F&&r&(S|D)&&(r&=~(S|D)),!r||r==M)var Nt=M0(n,r,l);else r==S||r==D?Nt=w0(n,r,F):(r==P||r==(M|P))&&!x.length?Nt=S0(n,r,l,h):Nt=Ra.apply(s,Et);var Jt=xt?vh:Jh;return $h(Jt(Nt,Et),n,r)}function Bh(n,r,l,h){return n===s||Zn(n,Vr[l])&&!de.call(h,l)?r:n}function kh(n,r,l,h,x,w){return Te(n)&&Te(r)&&(w.set(r,n),Ea(n,r,s,kh,w),w.delete(r)),n}function T0(n){return qs(n)?s:n}function Vh(n,r,l,h,x,w){var R=l&g,F=n.length,B=r.length;if(F!=B&&!(R&&B>F))return!1;var tt=w.get(n),at=w.get(r);if(tt&&at)return tt==r&&at==n;var ot=-1,xt=!0,Et=l&y?new ur:s;for(w.set(n,r),w.set(r,n);++ot<F;){var Nt=n[ot],Jt=r[ot];if(h)var zt=R?h(Jt,Nt,ot,r,n,w):h(Nt,Jt,ot,n,r,w);if(zt!==s){if(zt)continue;xt=!1;break}if(Et){if(!$o(r,function(te,ie){if(!Rs(Et,ie)&&(Nt===te||x(Nt,te,l,h,w)))return Et.push(ie)})){xt=!1;break}}else if(!(Nt===Jt||x(Nt,Jt,l,h,w))){xt=!1;break}}return w.delete(n),w.delete(r),xt}function E0(n,r,l,h,x,w,R){switch(l){case dt:if(n.byteLength!=r.byteLength||n.byteOffset!=r.byteOffset)return!1;n=n.buffer,r=r.buffer;case ut:return!(n.byteLength!=r.byteLength||!w(new ma(n),new ma(r)));case rt:case re:case Lt:return Zn(+n,+r);case Bt:return n.name==r.name&&n.message==r.message;case Se:case en:return n==r+"";case Ut:var F=nl;case $t:var B=h&g;if(F||(F=ca),n.size!=r.size&&!B)return!1;var tt=R.get(n);if(tt)return tt==r;h|=y,R.set(n,r);var at=Vh(F(n),F(r),h,x,w,R);return R.delete(n),at;case ln:if(Ns)return Ns.call(n)==Ns.call(r)}return!1}function C0(n,r,l,h,x,w){var R=l&g,F=El(n),B=F.length,tt=El(r),at=tt.length;if(B!=at&&!R)return!1;for(var ot=B;ot--;){var xt=F[ot];if(!(R?xt in r:de.call(r,xt)))return!1}var Et=w.get(n),Nt=w.get(r);if(Et&&Nt)return Et==r&&Nt==n;var Jt=!0;w.set(n,r),w.set(r,n);for(var zt=R;++ot<B;){xt=F[ot];var te=n[xt],ie=r[xt];if(h)var Mn=R?h(ie,te,xt,r,n,w):h(te,ie,xt,n,r,w);if(!(Mn===s?te===ie||x(te,ie,l,h,w):Mn)){Jt=!1;break}zt||(zt=xt=="constructor")}if(Jt&&!zt){var an=n.constructor,wn=r.constructor;an!=wn&&"constructor"in n&&"constructor"in r&&!(typeof an=="function"&&an instanceof an&&typeof wn=="function"&&wn instanceof wn)&&(Jt=!1)}return w.delete(n),w.delete(r),Jt}function xi(n){return Ol(Yh(n,s,nf),n+"")}function El(n){return oh(n,Ye,Rl)}function Cl(n){return oh(n,fn,Wh)}var Pl=ba?function(n){return ba.get(n)}:Zl;function Oa(n){for(var r=n.name+"",l=Hr[r],h=de.call(Hr,r)?l.length:0;h--;){var x=l[h],w=x.func;if(w==null||w==n)return x.name}return r}function Yr(n){var r=de.call(b,"placeholder")?b:n;return r.placeholder}function Ot(){var n=b.iteratee||Xl;return n=n===Xl?uh:n,arguments.length?n(arguments[0],arguments[1]):n}function Na(n,r){var l=n.__data__;return N0(r)?l[typeof r=="string"?"string":"hash"]:l.map}function Ll(n){for(var r=Ye(n),l=r.length;l--;){var h=r[l],x=n[h];r[l]=[h,x,qh(x)]}return r}function dr(n,r){var l=Bm(n,r);return ch(l)?l:s}function P0(n){var r=de.call(n,lr),l=n[lr];try{n[lr]=s;var h=!0}catch(w){}var x=da.call(n);return h&&(r?n[lr]=l:delete n[lr]),x}var Rl=rl?function(n){return n==null?[]:(n=ge(n),zi(rl(n),function(r){return Zu.call(n,r)}))}:Jl,Wh=rl?function(n){for(var r=[];n;)Ui(r,Rl(n)),n=ga(n);return r}:Jl,je=rn;(sl&&je(new sl(new ArrayBuffer(1)))!=dt||Ds&&je(new Ds)!=Ut||al&&je(al.resolve())!=Ge||Wr&&je(new Wr)!=$t||Fs&&je(new Fs)!=A)&&(je=function(n){var r=rn(n),l=r==Me?n.constructor:s,h=l?pr(l):"";if(h)switch(h){case hg:return dt;case fg:return Ut;case dg:return Ge;case pg:return $t;case mg:return A}return r});function L0(n,r,l){for(var h=-1,x=l.length;++h<x;){var w=l[h],R=w.size;switch(w.type){case"drop":n+=R;break;case"dropRight":r-=R;break;case"take":r=Qe(r,n+R);break;case"takeRight":n=ze(n,r-R);break}}return{start:n,end:r}}function R0(n){var r=n.match(ko);return r?r[1].split(C):[]}function Hh(n,r,l){r=Gi(r,n);for(var h=-1,x=r.length,w=!1;++h<x;){var R=li(r[h]);if(!(w=n!=null&&l(n,R)))break;n=n[R]}return w||++h!=x?w:(x=n==null?0:n.length,!!x&&Ha(x)&&yi(R,x)&&(qt(n)||mr(n)))}function I0(n){var r=n.length,l=new n.constructor(r);return r&&typeof n[0]=="string"&&de.call(n,"index")&&(l.index=n.index,l.input=n.input),l}function Gh(n){return typeof n.constructor=="function"&&!Hs(n)?Gr(ga(n)):{}}function D0(n,r,l){var h=n.constructor;switch(r){case ut:return Sl(n);case rt:case re:return new h(+n);case dt:return g0(n,l);case yt:case kt:case bt:case st:case It:case Ft:case Tt:case Dt:case Pt:return Th(n,l);case Ut:return new h;case Lt:case en:return new h(n);case Se:return _0(n);case $t:return new h;case ln:return v0(n)}}function F0(n,r){var l=r.length;if(!l)return n;var h=l-1;return r[h]=(l>1?"& ":"")+r[h],r=r.join(l>2?", ":" "),n.replace(Bo,`{
/* [wrapped with `+r+`] */
`)}function O0(n){return qt(n)||mr(n)||!!(Ju&&n&&n[Ju])}function yi(n,r){var l=typeof n;return r=r==null?lt:r,!!r&&(l=="number"||l!="symbol"&&jt.test(n))&&n>-1&&n%1==0&&n<r}function sn(n,r,l){if(!Te(l))return!1;var h=typeof r;return(h=="number"?hn(l)&&yi(r,l.length):h=="string"&&r in l)?Zn(l[r],n):!1}function Il(n,r){if(qt(n))return!1;var l=typeof n;return l=="number"||l=="symbol"||l=="boolean"||n==null||bn(n)?!0:fi.test(n)||!qe.test(n)||r!=null&&n in ge(r)}function N0(n){var r=typeof n;return r=="string"||r=="number"||r=="symbol"||r=="boolean"?n!=="__proto__":n===null}function Dl(n){var r=Oa(n),l=b[r];if(typeof l!="function"||!(r in ee.prototype))return!1;if(n===l)return!0;var h=Pl(l);return!!h&&n===h[0]}function z0(n){return!!qu&&qu in n}var U0=ha?bi:$l;function Hs(n){var r=n&&n.constructor,l=typeof r=="function"&&r.prototype||Vr;return n===l}function qh(n){return n===n&&!Te(n)}function Xh(n,r){return function(l){return l==null?!1:l[n]===r&&(r!==s||n in ge(l))}}function B0(n){var r=Va(n,function(h){return l.size===c&&l.clear(),h}),l=r.cache;return r}function k0(n,r){var l=n[1],h=r[1],x=l|h,w=x<(M|v|I),R=h==I&&l==S||h==I&&l==N&&n[7].length<=r[8]||h==(I|N)&&r[7].length<=r[8]&&l==S;if(!(w||R))return n;h&M&&(n[2]=r[2],x|=l&M?0:_);var F=r[3];if(F){var B=n[3];n[3]=B?Ch(B,F,r[4]):F,n[4]=B?Bi(n[3],d):r[4]}return F=r[5],F&&(B=n[5],n[5]=B?Ph(B,F,r[6]):F,n[6]=B?Bi(n[5],d):r[6]),F=r[7],F&&(n[7]=F),h&I&&(n[8]=n[8]==null?r[8]:Qe(n[8],r[8])),n[9]==null&&(n[9]=r[9]),n[0]=r[0],n[1]=x,n}function V0(n){var r=[];if(n!=null)for(var l in ge(n))r.push(l);return r}function W0(n){return da.call(n)}function Yh(n,r,l){return r=ze(r===s?n.length-1:r,0),function(){for(var h=arguments,x=-1,w=ze(h.length-r,0),R=Z(w);++x<w;)R[x]=h[r+x];x=-1;for(var F=Z(r+1);++x<r;)F[x]=h[x];return F[r]=l(R),vn(n,this,F)}}function Zh(n,r){return r.length<2?n:fr(n,Un(r,0,-1))}function H0(n,r){for(var l=n.length,h=Qe(r.length,l),x=un(n);h--;){var w=r[h];n[h]=yi(w,l)?x[w]:s}return n}function Fl(n,r){if(!(r==="constructor"&&typeof n[r]=="function")&&r!="__proto__")return n[r]}var Jh=Kh(vh),Gs=rg||function(n,r){return Xe.setTimeout(n,r)},Ol=Kh(f0);function $h(n,r,l){var h=r+"";return Ol(n,F0(h,G0(R0(h),l)))}function Kh(n){var r=0,l=0;return function(){var h=lg(),x=ft-(h-l);if(l=h,x>0){if(++r>=q)return arguments[0]}else r=0;return n.apply(s,arguments)}}function za(n,r){var l=-1,h=n.length,x=h-1;for(r=r===s?h:r;++l<r;){var w=_l(l,x),R=n[w];n[w]=n[l],n[l]=R}return n.length=r,n}var Qh=B0(function(n){var r=[];return n.charCodeAt(0)===46&&r.push(""),n.replace(ve,function(l,h,x,w){r.push(x?w.replace(V,"$1"):h||l)}),r});function li(n){if(typeof n=="string"||bn(n))return n;var r=n+"";return r=="0"&&1/n==-nt?"-0":r}function pr(n){if(n!=null){try{return fa.call(n)}catch(r){}try{return n+""}catch(r){}}return""}function G0(n,r){return Fn(ct,function(l){var h="_."+l[0];r&l[1]&&!oa(n,h)&&n.push(h)}),n.sort()}function jh(n){if(n instanceof ee)return n.clone();var r=new Nn(n.__wrapped__,n.__chain__);return r.__actions__=un(n.__actions__),r.__index__=n.__index__,r.__values__=n.__values__,r}function q0(n,r,l){(l?sn(n,r,l):r===s)?r=1:r=ze(Yt(r),0);var h=n==null?0:n.length;if(!h||r<1)return[];for(var x=0,w=0,R=Z(xa(h/r));x<h;)R[w++]=Un(n,x,x+=r);return R}function X0(n){for(var r=-1,l=n==null?0:n.length,h=0,x=[];++r<l;){var w=n[r];w&&(x[h++]=w)}return x}function Y0(){var n=arguments.length;if(!n)return[];for(var r=Z(n-1),l=arguments[0],h=n;h--;)r[h-1]=arguments[h];return Ui(qt(l)?un(l):[l],$e(r,1))}var Z0=Kt(function(n,r){return Le(n)?Us(n,$e(r,1,Le,!0)):[]}),J0=Kt(function(n,r){var l=Bn(r);return Le(l)&&(l=s),Le(n)?Us(n,$e(r,1,Le,!0),Ot(l,2)):[]}),$0=Kt(function(n,r){var l=Bn(r);return Le(l)&&(l=s),Le(n)?Us(n,$e(r,1,Le,!0),s,l):[]});function K0(n,r,l){var h=n==null?0:n.length;return h?(r=l||r===s?1:Yt(r),Un(n,r<0?0:r,h)):[]}function Q0(n,r,l){var h=n==null?0:n.length;return h?(r=l||r===s?1:Yt(r),r=h-r,Un(n,0,r<0?0:r)):[]}function j0(n,r){return n&&n.length?Pa(n,Ot(r,3),!0,!0):[]}function t_(n,r){return n&&n.length?Pa(n,Ot(r,3),!0):[]}function e_(n,r,l,h){var x=n==null?0:n.length;return x?(l&&typeof l!="number"&&sn(n,r,l)&&(l=0,h=x),Yg(n,r,l,h)):[]}function tf(n,r,l){var h=n==null?0:n.length;if(!h)return-1;var x=l==null?0:Yt(l);return x<0&&(x=ze(h+x,0)),la(n,Ot(r,3),x)}function ef(n,r,l){var h=n==null?0:n.length;if(!h)return-1;var x=h-1;return l!==s&&(x=Yt(l),x=l<0?ze(h+x,0):Qe(x,h-1)),la(n,Ot(r,3),x,!0)}function nf(n){var r=n==null?0:n.length;return r?$e(n,1):[]}function n_(n){var r=n==null?0:n.length;return r?$e(n,nt):[]}function i_(n,r){var l=n==null?0:n.length;return l?(r=r===s?1:Yt(r),$e(n,r)):[]}function r_(n){for(var r=-1,l=n==null?0:n.length,h={};++r<l;){var x=n[r];h[x[0]]=x[1]}return h}function rf(n){return n&&n.length?n[0]:s}function s_(n,r,l){var h=n==null?0:n.length;if(!h)return-1;var x=l==null?0:Yt(l);return x<0&&(x=ze(h+x,0)),Ur(n,r,x)}function a_(n){var r=n==null?0:n.length;return r?Un(n,0,-1):[]}var o_=Kt(function(n){var r=we(n,Ml);return r.length&&r[0]===n[0]?fl(r):[]}),l_=Kt(function(n){var r=Bn(n),l=we(n,Ml);return r===Bn(l)?r=s:l.pop(),l.length&&l[0]===n[0]?fl(l,Ot(r,2)):[]}),c_=Kt(function(n){var r=Bn(n),l=we(n,Ml);return r=typeof r=="function"?r:s,r&&l.pop(),l.length&&l[0]===n[0]?fl(l,s,r):[]});function u_(n,r){return n==null?"":ag.call(n,r)}function Bn(n){var r=n==null?0:n.length;return r?n[r-1]:s}function h_(n,r,l){var h=n==null?0:n.length;if(!h)return-1;var x=h;return l!==s&&(x=Yt(l),x=x<0?ze(h+x,0):Qe(x,h-1)),r===r?Gm(n,r,x):la(n,zu,x,!0)}function f_(n,r){return n&&n.length?ph(n,Yt(r)):s}var d_=Kt(sf);function sf(n,r){return n&&n.length&&r&&r.length?gl(n,r):n}function p_(n,r,l){return n&&n.length&&r&&r.length?gl(n,r,Ot(l,2)):n}function m_(n,r,l){return n&&n.length&&r&&r.length?gl(n,r,s,l):n}var g_=xi(function(n,r){var l=n==null?0:n.length,h=ll(n,r);return _h(n,we(r,function(x){return yi(x,l)?+x:x}).sort(Eh)),h});function __(n,r){var l=[];if(!(n&&n.length))return l;var h=-1,x=[],w=n.length;for(r=Ot(r,3);++h<w;){var R=n[h];r(R,h,n)&&(l.push(R),x.push(h))}return _h(n,x),l}function Nl(n){return n==null?n:ug.call(n)}function v_(n,r,l){var h=n==null?0:n.length;return h?(l&&typeof l!="number"&&sn(n,r,l)?(r=0,l=h):(r=r==null?0:Yt(r),l=l===s?h:Yt(l)),Un(n,r,l)):[]}function x_(n,r){return Ca(n,r)}function y_(n,r,l){return xl(n,r,Ot(l,2))}function b_(n,r){var l=n==null?0:n.length;if(l){var h=Ca(n,r);if(h<l&&Zn(n[h],r))return h}return-1}function M_(n,r){return Ca(n,r,!0)}function w_(n,r,l){return xl(n,r,Ot(l,2),!0)}function S_(n,r){var l=n==null?0:n.length;if(l){var h=Ca(n,r,!0)-1;if(Zn(n[h],r))return h}return-1}function A_(n){return n&&n.length?xh(n):[]}function T_(n,r){return n&&n.length?xh(n,Ot(r,2)):[]}function E_(n){var r=n==null?0:n.length;return r?Un(n,1,r):[]}function C_(n,r,l){return n&&n.length?(r=l||r===s?1:Yt(r),Un(n,0,r<0?0:r)):[]}function P_(n,r,l){var h=n==null?0:n.length;return h?(r=l||r===s?1:Yt(r),r=h-r,Un(n,r<0?0:r,h)):[]}function L_(n,r){return n&&n.length?Pa(n,Ot(r,3),!1,!0):[]}function R_(n,r){return n&&n.length?Pa(n,Ot(r,3)):[]}var I_=Kt(function(n){return Hi($e(n,1,Le,!0))}),D_=Kt(function(n){var r=Bn(n);return Le(r)&&(r=s),Hi($e(n,1,Le,!0),Ot(r,2))}),F_=Kt(function(n){var r=Bn(n);return r=typeof r=="function"?r:s,Hi($e(n,1,Le,!0),s,r)});function O_(n){return n&&n.length?Hi(n):[]}function N_(n,r){return n&&n.length?Hi(n,Ot(r,2)):[]}function z_(n,r){return r=typeof r=="function"?r:s,n&&n.length?Hi(n,s,r):[]}function zl(n){if(!(n&&n.length))return[];var r=0;return n=zi(n,function(l){if(Le(l))return r=ze(l.length,r),!0}),tl(r,function(l){return we(n,Ko(l))})}function af(n,r){if(!(n&&n.length))return[];var l=zl(n);return r==null?l:we(l,function(h){return vn(r,s,h)})}var U_=Kt(function(n,r){return Le(n)?Us(n,r):[]}),B_=Kt(function(n){return bl(zi(n,Le))}),k_=Kt(function(n){var r=Bn(n);return Le(r)&&(r=s),bl(zi(n,Le),Ot(r,2))}),V_=Kt(function(n){var r=Bn(n);return r=typeof r=="function"?r:s,bl(zi(n,Le),s,r)}),W_=Kt(zl);function H_(n,r){return wh(n||[],r||[],zs)}function G_(n,r){return wh(n||[],r||[],Vs)}var q_=Kt(function(n){var r=n.length,l=r>1?n[r-1]:s;return l=typeof l=="function"?(n.pop(),l):s,af(n,l)});function of(n){var r=b(n);return r.__chain__=!0,r}function X_(n,r){return r(n),n}function Ua(n,r){return r(n)}var Y_=xi(function(n){var r=n.length,l=r?n[0]:0,h=this.__wrapped__,x=function(w){return ll(w,n)};return r>1||this.__actions__.length||!(h instanceof ee)||!yi(l)?this.thru(x):(h=h.slice(l,+l+(r?1:0)),h.__actions__.push({func:Ua,args:[x],thisArg:s}),new Nn(h,this.__chain__).thru(function(w){return r&&!w.length&&w.push(s),w}))});function Z_(){return of(this)}function J_(){return new Nn(this.value(),this.__chain__)}function $_(){this.__values__===s&&(this.__values__=bf(this.value()));var n=this.__index__>=this.__values__.length,r=n?s:this.__values__[this.__index__++];return{done:n,value:r}}function K_(){return this}function Q_(n){for(var r,l=this;l instanceof wa;){var h=jh(l);h.__index__=0,h.__values__=s,r?x.__wrapped__=h:r=h;var x=h;l=l.__wrapped__}return x.__wrapped__=n,r}function j_(){var n=this.__wrapped__;if(n instanceof ee){var r=n;return this.__actions__.length&&(r=new ee(this)),r=r.reverse(),r.__actions__.push({func:Ua,args:[Nl],thisArg:s}),new Nn(r,this.__chain__)}return this.thru(Nl)}function tv(){return Mh(this.__wrapped__,this.__actions__)}var ev=La(function(n,r,l){de.call(n,l)?++n[l]:_i(n,l,1)});function nv(n,r,l){var h=qt(n)?Ou:Xg;return l&&sn(n,r,l)&&(r=s),h(n,Ot(r,3))}function iv(n,r){var l=qt(n)?zi:sh;return l(n,Ot(r,3))}var rv=Dh(tf),sv=Dh(ef);function av(n,r){return $e(Ba(n,r),1)}function ov(n,r){return $e(Ba(n,r),nt)}function lv(n,r,l){return l=l===s?1:Yt(l),$e(Ba(n,r),l)}function lf(n,r){var l=qt(n)?Fn:Wi;return l(n,Ot(r,3))}function cf(n,r){var l=qt(n)?Em:rh;return l(n,Ot(r,3))}var cv=La(function(n,r,l){de.call(n,l)?n[l].push(r):_i(n,l,[r])});function uv(n,r,l,h){n=hn(n)?n:Jr(n),l=l&&!h?Yt(l):0;var x=n.length;return l<0&&(l=ze(x+l,0)),Ga(n)?l<=x&&n.indexOf(r,l)>-1:!!x&&Ur(n,r,l)>-1}var hv=Kt(function(n,r,l){var h=-1,x=typeof r=="function",w=hn(n)?Z(n.length):[];return Wi(n,function(R){w[++h]=x?vn(r,R,l):Bs(R,r,l)}),w}),fv=La(function(n,r,l){_i(n,l,r)});function Ba(n,r){var l=qt(n)?we:hh;return l(n,Ot(r,3))}function dv(n,r,l,h){return n==null?[]:(qt(r)||(r=r==null?[]:[r]),l=h?s:l,qt(l)||(l=l==null?[]:[l]),mh(n,r,l))}var pv=La(function(n,r,l){n[l?0:1].push(r)},function(){return[[],[]]});function mv(n,r,l){var h=qt(n)?Jo:Bu,x=arguments.length<3;return h(n,Ot(r,4),l,x,Wi)}function gv(n,r,l){var h=qt(n)?Cm:Bu,x=arguments.length<3;return h(n,Ot(r,4),l,x,rh)}function _v(n,r){var l=qt(n)?zi:sh;return l(n,Wa(Ot(r,3)))}function vv(n){var r=qt(n)?th:u0;return r(n)}function xv(n,r,l){(l?sn(n,r,l):r===s)?r=1:r=Yt(r);var h=qt(n)?Vg:h0;return h(n,r)}function yv(n){var r=qt(n)?Wg:d0;return r(n)}function bv(n){if(n==null)return 0;if(hn(n))return Ga(n)?kr(n):n.length;var r=je(n);return r==Ut||r==$t?n.size:pl(n).length}function Mv(n,r,l){var h=qt(n)?$o:p0;return l&&sn(n,r,l)&&(r=s),h(n,Ot(r,3))}var wv=Kt(function(n,r){if(n==null)return[];var l=r.length;return l>1&&sn(n,r[0],r[1])?r=[]:l>2&&sn(r[0],r[1],r[2])&&(r=[r[0]]),mh(n,$e(r,1),[])}),ka=ig||function(){return Xe.Date.now()};function Sv(n,r){if(typeof r!="function")throw new On(a);return n=Yt(n),function(){if(--n<1)return r.apply(this,arguments)}}function uf(n,r,l){return r=l?s:r,r=n&&r==null?n.length:r,vi(n,I,s,s,s,s,r)}function hf(n,r){var l;if(typeof r!="function")throw new On(a);return n=Yt(n),function(){return--n>0&&(l=r.apply(this,arguments)),n<=1&&(r=s),l}}var Ul=Kt(function(n,r,l){var h=M;if(l.length){var x=Bi(l,Yr(Ul));h|=P}return vi(n,h,r,l,x)}),ff=Kt(function(n,r,l){var h=M|v;if(l.length){var x=Bi(l,Yr(ff));h|=P}return vi(r,h,n,l,x)});function df(n,r,l){r=l?s:r;var h=vi(n,S,s,s,s,s,s,r);return h.placeholder=df.placeholder,h}function pf(n,r,l){r=l?s:r;var h=vi(n,D,s,s,s,s,s,r);return h.placeholder=pf.placeholder,h}function mf(n,r,l){var h,x,w,R,F,B,tt=0,at=!1,ot=!1,xt=!0;if(typeof n!="function")throw new On(a);r=kn(r)||0,Te(l)&&(at=!!l.leading,ot="maxWait"in l,w=ot?ze(kn(l.maxWait)||0,r):w,xt="trailing"in l?!!l.trailing:xt);function Et(Re){var Jn=h,wi=x;return h=x=s,tt=Re,R=n.apply(wi,Jn),R}function Nt(Re){return tt=Re,F=Gs(te,r),at?Et(Re):R}function Jt(Re){var Jn=Re-B,wi=Re-tt,Ff=r-Jn;return ot?Qe(Ff,w-wi):Ff}function zt(Re){var Jn=Re-B,wi=Re-tt;return B===s||Jn>=r||Jn<0||ot&&wi>=w}function te(){var Re=ka();if(zt(Re))return ie(Re);F=Gs(te,Jt(Re))}function ie(Re){return F=s,xt&&h?Et(Re):(h=x=s,R)}function Mn(){F!==s&&Sh(F),tt=0,h=B=x=F=s}function an(){return F===s?R:ie(ka())}function wn(){var Re=ka(),Jn=zt(Re);if(h=arguments,x=this,B=Re,Jn){if(F===s)return Nt(B);if(ot)return Sh(F),F=Gs(te,r),Et(B)}return F===s&&(F=Gs(te,r)),R}return wn.cancel=Mn,wn.flush=an,wn}var Av=Kt(function(n,r){return ih(n,1,r)}),Tv=Kt(function(n,r,l){return ih(n,kn(r)||0,l)});function Ev(n){return vi(n,H)}function Va(n,r){if(typeof n!="function"||r!=null&&typeof r!="function")throw new On(a);var l=function(){var h=arguments,x=r?r.apply(this,h):h[0],w=l.cache;if(w.has(x))return w.get(x);var R=n.apply(this,h);return l.cache=w.set(x,R)||w,R};return l.cache=new(Va.Cache||gi),l}Va.Cache=gi;function Wa(n){if(typeof n!="function")throw new On(a);return function(){var r=arguments;switch(r.length){case 0:return!n.call(this);case 1:return!n.call(this,r[0]);case 2:return!n.call(this,r[0],r[1]);case 3:return!n.call(this,r[0],r[1],r[2])}return!n.apply(this,r)}}function Cv(n){return hf(2,n)}var Pv=m0(function(n,r){r=r.length==1&&qt(r[0])?we(r[0],xn(Ot())):we($e(r,1),xn(Ot()));var l=r.length;return Kt(function(h){for(var x=-1,w=Qe(h.length,l);++x<w;)h[x]=r[x].call(this,h[x]);return vn(n,this,h)})}),Bl=Kt(function(n,r){var l=Bi(r,Yr(Bl));return vi(n,P,s,r,l)}),gf=Kt(function(n,r){var l=Bi(r,Yr(gf));return vi(n,E,s,r,l)}),Lv=xi(function(n,r){return vi(n,N,s,s,s,r)});function Rv(n,r){if(typeof n!="function")throw new On(a);return r=r===s?r:Yt(r),Kt(n,r)}function Iv(n,r){if(typeof n!="function")throw new On(a);return r=r==null?0:ze(Yt(r),0),Kt(function(l){var h=l[r],x=qi(l,0,r);return h&&Ui(x,h),vn(n,this,x)})}function Dv(n,r,l){var h=!0,x=!0;if(typeof n!="function")throw new On(a);return Te(l)&&(h="leading"in l?!!l.leading:h,x="trailing"in l?!!l.trailing:x),mf(n,r,{leading:h,maxWait:r,trailing:x})}function Fv(n){return uf(n,1)}function Ov(n,r){return Bl(wl(r),n)}function Nv(){if(!arguments.length)return[];var n=arguments[0];return qt(n)?n:[n]}function zv(n){return zn(n,m)}function Uv(n,r){return r=typeof r=="function"?r:s,zn(n,m,r)}function Bv(n){return zn(n,f|m)}function kv(n,r){return r=typeof r=="function"?r:s,zn(n,f|m,r)}function Vv(n,r){return r==null||nh(n,r,Ye(r))}function Zn(n,r){return n===r||n!==n&&r!==r}var Wv=Fa(hl),Hv=Fa(function(n,r){return n>=r}),mr=lh(function(){return arguments}())?lh:function(n){return Ee(n)&&de.call(n,"callee")&&!Zu.call(n,"callee")},qt=Z.isArray,Gv=Pu?xn(Pu):Qg;function hn(n){return n!=null&&Ha(n.length)&&!bi(n)}function Le(n){return Ee(n)&&hn(n)}function qv(n){return n===!0||n===!1||Ee(n)&&rn(n)==rt}var Xi=sg||$l,Xv=Lu?xn(Lu):jg;function Yv(n){return Ee(n)&&n.nodeType===1&&!qs(n)}function Zv(n){if(n==null)return!0;if(hn(n)&&(qt(n)||typeof n=="string"||typeof n.splice=="function"||Xi(n)||Zr(n)||mr(n)))return!n.length;var r=je(n);if(r==Ut||r==$t)return!n.size;if(Hs(n))return!pl(n).length;for(var l in n)if(de.call(n,l))return!1;return!0}function Jv(n,r){return ks(n,r)}function $v(n,r,l){l=typeof l=="function"?l:s;var h=l?l(n,r):s;return h===s?ks(n,r,s,l):!!h}function kl(n){if(!Ee(n))return!1;var r=rn(n);return r==Bt||r==Vt||typeof n.message=="string"&&typeof n.name=="string"&&!qs(n)}function Kv(n){return typeof n=="number"&&$u(n)}function bi(n){if(!Te(n))return!1;var r=rn(n);return r==St||r==fe||r==Ht||r==Rn}function _f(n){return typeof n=="number"&&n==Yt(n)}function Ha(n){return typeof n=="number"&&n>-1&&n%1==0&&n<=lt}function Te(n){var r=typeof n;return n!=null&&(r=="object"||r=="function")}function Ee(n){return n!=null&&typeof n=="object"}var vf=Ru?xn(Ru):e0;function Qv(n,r){return n===r||dl(n,r,Ll(r))}function jv(n,r,l){return l=typeof l=="function"?l:s,dl(n,r,Ll(r),l)}function tx(n){return xf(n)&&n!=+n}function ex(n){if(U0(n))throw new Gt(i);return ch(n)}function nx(n){return n===null}function ix(n){return n==null}function xf(n){return typeof n=="number"||Ee(n)&&rn(n)==Lt}function qs(n){if(!Ee(n)||rn(n)!=Me)return!1;var r=ga(n);if(r===null)return!0;var l=de.call(r,"constructor")&&r.constructor;return typeof l=="function"&&l instanceof l&&fa.call(l)==jm}var Vl=Iu?xn(Iu):n0;function rx(n){return _f(n)&&n>=-lt&&n<=lt}var yf=Du?xn(Du):i0;function Ga(n){return typeof n=="string"||!qt(n)&&Ee(n)&&rn(n)==en}function bn(n){return typeof n=="symbol"||Ee(n)&&rn(n)==ln}var Zr=Fu?xn(Fu):r0;function sx(n){return n===s}function ax(n){return Ee(n)&&je(n)==A}function ox(n){return Ee(n)&&rn(n)==Q}var lx=Fa(ml),cx=Fa(function(n,r){return n<=r});function bf(n){if(!n)return[];if(hn(n))return Ga(n)?Xn(n):un(n);if(Is&&n[Is])return Vm(n[Is]());var r=je(n),l=r==Ut?nl:r==$t?ca:Jr;return l(n)}function Mi(n){if(!n)return n===0?n:0;if(n=kn(n),n===nt||n===-nt){var r=n<0?-1:1;return r*pt}return n===n?n:0}function Yt(n){var r=Mi(n),l=r%1;return r===r?l?r-l:r:0}function Mf(n){return n?hr(Yt(n),0,k):0}function kn(n){if(typeof n=="number")return n;if(bn(n))return it;if(Te(n)){var r=typeof n.valueOf=="function"?n.valueOf():n;n=Te(r)?r+"":r}if(typeof n!="string")return n===0?n:+n;n=ku(n);var l=Zt.test(n);return l||oe.test(n)?Sm(n.slice(2),l?2:8):Wt.test(n)?it:+n}function wf(n){return oi(n,fn(n))}function ux(n){return n?hr(Yt(n),-lt,lt):n===0?n:0}function ue(n){return n==null?"":yn(n)}var hx=qr(function(n,r){if(Hs(r)||hn(r)){oi(r,Ye(r),n);return}for(var l in r)de.call(r,l)&&zs(n,l,r[l])}),Sf=qr(function(n,r){oi(r,fn(r),n)}),qa=qr(function(n,r,l,h){oi(r,fn(r),n,h)}),fx=qr(function(n,r,l,h){oi(r,Ye(r),n,h)}),dx=xi(ll);function px(n,r){var l=Gr(n);return r==null?l:eh(l,r)}var mx=Kt(function(n,r){n=ge(n);var l=-1,h=r.length,x=h>2?r[2]:s;for(x&&sn(r[0],r[1],x)&&(h=1);++l<h;)for(var w=r[l],R=fn(w),F=-1,B=R.length;++F<B;){var tt=R[F],at=n[tt];(at===s||Zn(at,Vr[tt])&&!de.call(n,tt))&&(n[tt]=w[tt])}return n}),gx=Kt(function(n){return n.push(s,kh),vn(Af,s,n)});function _x(n,r){return Nu(n,Ot(r,3),ai)}function vx(n,r){return Nu(n,Ot(r,3),ul)}function xx(n,r){return n==null?n:cl(n,Ot(r,3),fn)}function yx(n,r){return n==null?n:ah(n,Ot(r,3),fn)}function bx(n,r){return n&&ai(n,Ot(r,3))}function Mx(n,r){return n&&ul(n,Ot(r,3))}function wx(n){return n==null?[]:Ta(n,Ye(n))}function Sx(n){return n==null?[]:Ta(n,fn(n))}function Wl(n,r,l){var h=n==null?s:fr(n,r);return h===s?l:h}function Ax(n,r){return n!=null&&Hh(n,r,Zg)}function Hl(n,r){return n!=null&&Hh(n,r,Jg)}var Tx=Oh(function(n,r,l){r!=null&&typeof r.toString!="function"&&(r=da.call(r)),n[r]=l},ql(dn)),Ex=Oh(function(n,r,l){r!=null&&typeof r.toString!="function"&&(r=da.call(r)),de.call(n,r)?n[r].push(l):n[r]=[l]},Ot),Cx=Kt(Bs);function Ye(n){return hn(n)?ju(n):pl(n)}function fn(n){return hn(n)?ju(n,!0):s0(n)}function Px(n,r){var l={};return r=Ot(r,3),ai(n,function(h,x,w){_i(l,r(h,x,w),h)}),l}function Lx(n,r){var l={};return r=Ot(r,3),ai(n,function(h,x,w){_i(l,x,r(h,x,w))}),l}var Rx=qr(function(n,r,l){Ea(n,r,l)}),Af=qr(function(n,r,l,h){Ea(n,r,l,h)}),Ix=xi(function(n,r){var l={};if(n==null)return l;var h=!1;r=we(r,function(w){return w=Gi(w,n),h||(h=w.length>1),w}),oi(n,Cl(n),l),h&&(l=zn(l,f|p|m,T0));for(var x=r.length;x--;)yl(l,r[x]);return l});function Dx(n,r){return Tf(n,Wa(Ot(r)))}var Fx=xi(function(n,r){return n==null?{}:o0(n,r)});function Tf(n,r){if(n==null)return{};var l=we(Cl(n),function(h){return[h]});return r=Ot(r),gh(n,l,function(h,x){return r(h,x[0])})}function Ox(n,r,l){r=Gi(r,n);var h=-1,x=r.length;for(x||(x=1,n=s);++h<x;){var w=n==null?s:n[li(r[h])];w===s&&(h=x,w=l),n=bi(w)?w.call(n):w}return n}function Nx(n,r,l){return n==null?n:Vs(n,r,l)}function zx(n,r,l,h){return h=typeof h=="function"?h:s,n==null?n:Vs(n,r,l,h)}var Ef=Uh(Ye),Cf=Uh(fn);function Ux(n,r,l){var h=qt(n),x=h||Xi(n)||Zr(n);if(r=Ot(r,4),l==null){var w=n&&n.constructor;x?l=h?new w:[]:Te(n)?l=bi(w)?Gr(ga(n)):{}:l={}}return(x?Fn:ai)(n,function(R,F,B){return r(l,R,F,B)}),l}function Bx(n,r){return n==null?!0:yl(n,r)}function kx(n,r,l){return n==null?n:bh(n,r,wl(l))}function Vx(n,r,l,h){return h=typeof h=="function"?h:s,n==null?n:bh(n,r,wl(l),h)}function Jr(n){return n==null?[]:el(n,Ye(n))}function Wx(n){return n==null?[]:el(n,fn(n))}function Hx(n,r,l){return l===s&&(l=r,r=s),l!==s&&(l=kn(l),l=l===l?l:0),r!==s&&(r=kn(r),r=r===r?r:0),hr(kn(n),r,l)}function Gx(n,r,l){return r=Mi(r),l===s?(l=r,r=0):l=Mi(l),n=kn(n),$g(n,r,l)}function qx(n,r,l){if(l&&typeof l!="boolean"&&sn(n,r,l)&&(r=l=s),l===s&&(typeof r=="boolean"?(l=r,r=s):typeof n=="boolean"&&(l=n,n=s)),n===s&&r===s?(n=0,r=1):(n=Mi(n),r===s?(r=n,n=0):r=Mi(r)),n>r){var h=n;n=r,r=h}if(l||n%1||r%1){var x=Ku();return Qe(n+x*(r-n+wm("1e-"+((x+"").length-1))),r)}return _l(n,r)}var Xx=Xr(function(n,r,l){return r=r.toLowerCase(),n+(l?Pf(r):r)});function Pf(n){return Gl(ue(n).toLowerCase())}function Lf(n){return n=ue(n),n&&n.replace(ne,Nm).replace(dm,"")}function Yx(n,r,l){n=ue(n),r=yn(r);var h=n.length;l=l===s?h:hr(Yt(l),0,h);var x=l;return l-=r.length,l>=0&&n.slice(l,x)==r}function Zx(n){return n=ue(n),n&&Mt.test(n)?n.replace($,zm):n}function Jx(n){return n=ue(n),n&&cn.test(n)?n.replace(_n,"\\$&"):n}var $x=Xr(function(n,r,l){return n+(l?"-":"")+r.toLowerCase()}),Kx=Xr(function(n,r,l){return n+(l?" ":"")+r.toLowerCase()}),Qx=Ih("toLowerCase");function jx(n,r,l){n=ue(n),r=Yt(r);var h=r?kr(n):0;if(!r||h>=r)return n;var x=(r-h)/2;return Da(ya(x),l)+n+Da(xa(x),l)}function ty(n,r,l){n=ue(n),r=Yt(r);var h=r?kr(n):0;return r&&h<r?n+Da(r-h,l):n}function ey(n,r,l){n=ue(n),r=Yt(r);var h=r?kr(n):0;return r&&h<r?Da(r-h,l)+n:n}function ny(n,r,l){return l||r==null?r=0:r&&(r=+r),cg(ue(n).replace(Or,""),r||0)}function iy(n,r,l){return(l?sn(n,r,l):r===s)?r=1:r=Yt(r),vl(ue(n),r)}function ry(){var n=arguments,r=ue(n[0]);return n.length<3?r:r.replace(n[1],n[2])}var sy=Xr(function(n,r,l){return n+(l?"_":"")+r.toLowerCase()});function ay(n,r,l){return l&&typeof l!="number"&&sn(n,r,l)&&(r=l=s),l=l===s?k:l>>>0,l?(n=ue(n),n&&(typeof r=="string"||r!=null&&!Vl(r))&&(r=yn(r),!r&&Br(n))?qi(Xn(n),0,l):n.split(r,l)):[]}var oy=Xr(function(n,r,l){return n+(l?" ":"")+Gl(r)});function ly(n,r,l){return n=ue(n),l=l==null?0:hr(Yt(l),0,n.length),r=yn(r),n.slice(l,l+r.length)==r}function cy(n,r,l){var h=b.templateSettings;l&&sn(n,r,l)&&(r=s),n=ue(n),r=qa({},r,h,Bh);var x=qa({},r.imports,h.imports,Bh),w=Ye(x),R=el(x,w),F,B,tt=0,at=r.interpolate||me,ot="__p += '",xt=il((r.escape||me).source+"|"+at.source+"|"+(at===Pe?j:me).source+"|"+(r.evaluate||me).source+"|$","g"),Et="//# sourceURL="+(de.call(r,"sourceURL")?(r.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++vm+"]")+`
`;n.replace(xt,function(zt,te,ie,Mn,an,wn){return ie||(ie=Mn),ot+=n.slice(tt,wn).replace(di,Um),te&&(F=!0,ot+=`' +
__e(`+te+`) +
'`),an&&(B=!0,ot+=`';
`+an+`;
__p += '`),ie&&(ot+=`' +
((__t = (`+ie+`)) == null ? '' : __t) +
'`),tt=wn+zt.length,zt}),ot+=`';
`;var Nt=de.call(r,"variable")&&r.variable;if(!Nt)ot=`with (obj) {
`+ot+`
}
`;else if(K.test(Nt))throw new Gt(o);ot=(B?ot.replace(se,""):ot).replace(_e,"$1").replace(De,"$1;"),ot="function("+(Nt||"obj")+`) {
`+(Nt?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(F?", __e = _.escape":"")+(B?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+ot+`return __p
}`;var Jt=If(function(){return ce(w,Et+"return "+ot).apply(s,R)});if(Jt.source=ot,kl(Jt))throw Jt;return Jt}function uy(n){return ue(n).toLowerCase()}function hy(n){return ue(n).toUpperCase()}function fy(n,r,l){if(n=ue(n),n&&(l||r===s))return ku(n);if(!n||!(r=yn(r)))return n;var h=Xn(n),x=Xn(r),w=Vu(h,x),R=Wu(h,x)+1;return qi(h,w,R).join("")}function dy(n,r,l){if(n=ue(n),n&&(l||r===s))return n.slice(0,Gu(n)+1);if(!n||!(r=yn(r)))return n;var h=Xn(n),x=Wu(h,Xn(r))+1;return qi(h,0,x).join("")}function py(n,r,l){if(n=ue(n),n&&(l||r===s))return n.replace(Or,"");if(!n||!(r=yn(r)))return n;var h=Xn(n),x=Vu(h,Xn(r));return qi(h,x).join("")}function my(n,r){var l=T,h=O;if(Te(r)){var x="separator"in r?r.separator:x;l="length"in r?Yt(r.length):l,h="omission"in r?yn(r.omission):h}n=ue(n);var w=n.length;if(Br(n)){var R=Xn(n);w=R.length}if(l>=w)return n;var F=l-kr(h);if(F<1)return h;var B=R?qi(R,0,F).join(""):n.slice(0,F);if(x===s)return B+h;if(R&&(F+=B.length-F),Vl(x)){if(n.slice(F).search(x)){var tt,at=B;for(x.global||(x=il(x.source,ue(Rt.exec(x))+"g")),x.lastIndex=0;tt=x.exec(at);)var ot=tt.index;B=B.slice(0,ot===s?F:ot)}}else if(n.indexOf(yn(x),F)!=F){var xt=B.lastIndexOf(x);xt>-1&&(B=B.slice(0,xt))}return B+h}function gy(n){return n=ue(n),n&&ht.test(n)?n.replace(z,qm):n}var _y=Xr(function(n,r,l){return n+(l?" ":"")+r.toUpperCase()}),Gl=Ih("toUpperCase");function Rf(n,r,l){return n=ue(n),r=l?s:r,r===s?km(n)?Zm(n):Rm(n):n.match(r)||[]}var If=Kt(function(n,r){try{return vn(n,s,r)}catch(l){return kl(l)?l:new Gt(l)}}),vy=xi(function(n,r){return Fn(r,function(l){l=li(l),_i(n,l,Ul(n[l],n))}),n});function xy(n){var r=n==null?0:n.length,l=Ot();return n=r?we(n,function(h){if(typeof h[1]!="function")throw new On(a);return[l(h[0]),h[1]]}):[],Kt(function(h){for(var x=-1;++x<r;){var w=n[x];if(vn(w[0],this,h))return vn(w[1],this,h)}})}function yy(n){return qg(zn(n,f))}function ql(n){return function(){return n}}function by(n,r){return n==null||n!==n?r:n}var My=Fh(),wy=Fh(!0);function dn(n){return n}function Xl(n){return uh(typeof n=="function"?n:zn(n,f))}function Sy(n){return fh(zn(n,f))}function Ay(n,r){return dh(n,zn(r,f))}var Ty=Kt(function(n,r){return function(l){return Bs(l,n,r)}}),Ey=Kt(function(n,r){return function(l){return Bs(n,l,r)}});function Yl(n,r,l){var h=Ye(r),x=Ta(r,h);l==null&&!(Te(r)&&(x.length||!h.length))&&(l=r,r=n,n=this,x=Ta(r,Ye(r)));var w=!(Te(l)&&"chain"in l)||!!l.chain,R=bi(n);return Fn(x,function(F){var B=r[F];n[F]=B,R&&(n.prototype[F]=function(){var tt=this.__chain__;if(w||tt){var at=n(this.__wrapped__),ot=at.__actions__=un(this.__actions__);return ot.push({func:B,args:arguments,thisArg:n}),at.__chain__=tt,at}return B.apply(n,Ui([this.value()],arguments))})}),n}function Cy(){return Xe._===this&&(Xe._=tg),this}function Zl(){}function Py(n){return n=Yt(n),Kt(function(r){return ph(r,n)})}var Ly=Al(we),Ry=Al(Ou),Iy=Al($o);function Df(n){return Il(n)?Ko(li(n)):l0(n)}function Dy(n){return function(r){return n==null?s:fr(n,r)}}var Fy=Nh(),Oy=Nh(!0);function Jl(){return[]}function $l(){return!1}function Ny(){return{}}function zy(){return""}function Uy(){return!0}function By(n,r){if(n=Yt(n),n<1||n>lt)return[];var l=k,h=Qe(n,k);r=Ot(r),n-=k;for(var x=tl(h,r);++l<n;)r(l);return x}function ky(n){return qt(n)?we(n,li):bn(n)?[n]:un(Qh(ue(n)))}function Vy(n){var r=++Qm;return ue(n)+r}var Wy=Ia(function(n,r){return n+r},0),Hy=Tl("ceil"),Gy=Ia(function(n,r){return n/r},1),qy=Tl("floor");function Xy(n){return n&&n.length?Aa(n,dn,hl):s}function Yy(n,r){return n&&n.length?Aa(n,Ot(r,2),hl):s}function Zy(n){return Uu(n,dn)}function Jy(n,r){return Uu(n,Ot(r,2))}function $y(n){return n&&n.length?Aa(n,dn,ml):s}function Ky(n,r){return n&&n.length?Aa(n,Ot(r,2),ml):s}var Qy=Ia(function(n,r){return n*r},1),jy=Tl("round"),tb=Ia(function(n,r){return n-r},0);function eb(n){return n&&n.length?jo(n,dn):0}function nb(n,r){return n&&n.length?jo(n,Ot(r,2)):0}return b.after=Sv,b.ary=uf,b.assign=hx,b.assignIn=Sf,b.assignInWith=qa,b.assignWith=fx,b.at=dx,b.before=hf,b.bind=Ul,b.bindAll=vy,b.bindKey=ff,b.castArray=Nv,b.chain=of,b.chunk=q0,b.compact=X0,b.concat=Y0,b.cond=xy,b.conforms=yy,b.constant=ql,b.countBy=ev,b.create=px,b.curry=df,b.curryRight=pf,b.debounce=mf,b.defaults=mx,b.defaultsDeep=gx,b.defer=Av,b.delay=Tv,b.difference=Z0,b.differenceBy=J0,b.differenceWith=$0,b.drop=K0,b.dropRight=Q0,b.dropRightWhile=j0,b.dropWhile=t_,b.fill=e_,b.filter=iv,b.flatMap=av,b.flatMapDeep=ov,b.flatMapDepth=lv,b.flatten=nf,b.flattenDeep=n_,b.flattenDepth=i_,b.flip=Ev,b.flow=My,b.flowRight=wy,b.fromPairs=r_,b.functions=wx,b.functionsIn=Sx,b.groupBy=cv,b.initial=a_,b.intersection=o_,b.intersectionBy=l_,b.intersectionWith=c_,b.invert=Tx,b.invertBy=Ex,b.invokeMap=hv,b.iteratee=Xl,b.keyBy=fv,b.keys=Ye,b.keysIn=fn,b.map=Ba,b.mapKeys=Px,b.mapValues=Lx,b.matches=Sy,b.matchesProperty=Ay,b.memoize=Va,b.merge=Rx,b.mergeWith=Af,b.method=Ty,b.methodOf=Ey,b.mixin=Yl,b.negate=Wa,b.nthArg=Py,b.omit=Ix,b.omitBy=Dx,b.once=Cv,b.orderBy=dv,b.over=Ly,b.overArgs=Pv,b.overEvery=Ry,b.overSome=Iy,b.partial=Bl,b.partialRight=gf,b.partition=pv,b.pick=Fx,b.pickBy=Tf,b.property=Df,b.propertyOf=Dy,b.pull=d_,b.pullAll=sf,b.pullAllBy=p_,b.pullAllWith=m_,b.pullAt=g_,b.range=Fy,b.rangeRight=Oy,b.rearg=Lv,b.reject=_v,b.remove=__,b.rest=Rv,b.reverse=Nl,b.sampleSize=xv,b.set=Nx,b.setWith=zx,b.shuffle=yv,b.slice=v_,b.sortBy=wv,b.sortedUniq=A_,b.sortedUniqBy=T_,b.split=ay,b.spread=Iv,b.tail=E_,b.take=C_,b.takeRight=P_,b.takeRightWhile=L_,b.takeWhile=R_,b.tap=X_,b.throttle=Dv,b.thru=Ua,b.toArray=bf,b.toPairs=Ef,b.toPairsIn=Cf,b.toPath=ky,b.toPlainObject=wf,b.transform=Ux,b.unary=Fv,b.union=I_,b.unionBy=D_,b.unionWith=F_,b.uniq=O_,b.uniqBy=N_,b.uniqWith=z_,b.unset=Bx,b.unzip=zl,b.unzipWith=af,b.update=kx,b.updateWith=Vx,b.values=Jr,b.valuesIn=Wx,b.without=U_,b.words=Rf,b.wrap=Ov,b.xor=B_,b.xorBy=k_,b.xorWith=V_,b.zip=W_,b.zipObject=H_,b.zipObjectDeep=G_,b.zipWith=q_,b.entries=Ef,b.entriesIn=Cf,b.extend=Sf,b.extendWith=qa,Yl(b,b),b.add=Wy,b.attempt=If,b.camelCase=Xx,b.capitalize=Pf,b.ceil=Hy,b.clamp=Hx,b.clone=zv,b.cloneDeep=Bv,b.cloneDeepWith=kv,b.cloneWith=Uv,b.conformsTo=Vv,b.deburr=Lf,b.defaultTo=by,b.divide=Gy,b.endsWith=Yx,b.eq=Zn,b.escape=Zx,b.escapeRegExp=Jx,b.every=nv,b.find=rv,b.findIndex=tf,b.findKey=_x,b.findLast=sv,b.findLastIndex=ef,b.findLastKey=vx,b.floor=qy,b.forEach=lf,b.forEachRight=cf,b.forIn=xx,b.forInRight=yx,b.forOwn=bx,b.forOwnRight=Mx,b.get=Wl,b.gt=Wv,b.gte=Hv,b.has=Ax,b.hasIn=Hl,b.head=rf,b.identity=dn,b.includes=uv,b.indexOf=s_,b.inRange=Gx,b.invoke=Cx,b.isArguments=mr,b.isArray=qt,b.isArrayBuffer=Gv,b.isArrayLike=hn,b.isArrayLikeObject=Le,b.isBoolean=qv,b.isBuffer=Xi,b.isDate=Xv,b.isElement=Yv,b.isEmpty=Zv,b.isEqual=Jv,b.isEqualWith=$v,b.isError=kl,b.isFinite=Kv,b.isFunction=bi,b.isInteger=_f,b.isLength=Ha,b.isMap=vf,b.isMatch=Qv,b.isMatchWith=jv,b.isNaN=tx,b.isNative=ex,b.isNil=ix,b.isNull=nx,b.isNumber=xf,b.isObject=Te,b.isObjectLike=Ee,b.isPlainObject=qs,b.isRegExp=Vl,b.isSafeInteger=rx,b.isSet=yf,b.isString=Ga,b.isSymbol=bn,b.isTypedArray=Zr,b.isUndefined=sx,b.isWeakMap=ax,b.isWeakSet=ox,b.join=u_,b.kebabCase=$x,b.last=Bn,b.lastIndexOf=h_,b.lowerCase=Kx,b.lowerFirst=Qx,b.lt=lx,b.lte=cx,b.max=Xy,b.maxBy=Yy,b.mean=Zy,b.meanBy=Jy,b.min=$y,b.minBy=Ky,b.stubArray=Jl,b.stubFalse=$l,b.stubObject=Ny,b.stubString=zy,b.stubTrue=Uy,b.multiply=Qy,b.nth=f_,b.noConflict=Cy,b.noop=Zl,b.now=ka,b.pad=jx,b.padEnd=ty,b.padStart=ey,b.parseInt=ny,b.random=qx,b.reduce=mv,b.reduceRight=gv,b.repeat=iy,b.replace=ry,b.result=Ox,b.round=jy,b.runInContext=U,b.sample=vv,b.size=bv,b.snakeCase=sy,b.some=Mv,b.sortedIndex=x_,b.sortedIndexBy=y_,b.sortedIndexOf=b_,b.sortedLastIndex=M_,b.sortedLastIndexBy=w_,b.sortedLastIndexOf=S_,b.startCase=oy,b.startsWith=ly,b.subtract=tb,b.sum=eb,b.sumBy=nb,b.template=cy,b.times=By,b.toFinite=Mi,b.toInteger=Yt,b.toLength=Mf,b.toLower=uy,b.toNumber=kn,b.toSafeInteger=ux,b.toString=ue,b.toUpper=hy,b.trim=fy,b.trimEnd=dy,b.trimStart=py,b.truncate=my,b.unescape=gy,b.uniqueId=Vy,b.upperCase=_y,b.upperFirst=Gl,b.each=lf,b.eachRight=cf,b.first=rf,Yl(b,function(){var n={};return ai(b,function(r,l){de.call(b.prototype,l)||(n[l]=r)}),n}(),{chain:!1}),b.VERSION=t,Fn(["bind","bindKey","curry","curryRight","partial","partialRight"],function(n){b[n].placeholder=b}),Fn(["drop","take"],function(n,r){ee.prototype[n]=function(l){l=l===s?1:ze(Yt(l),0);var h=this.__filtered__&&!r?new ee(this):this.clone();return h.__filtered__?h.__takeCount__=Qe(l,h.__takeCount__):h.__views__.push({size:Qe(l,k),type:n+(h.__dir__<0?"Right":"")}),h},ee.prototype[n+"Right"]=function(l){return this.reverse()[n](l).reverse()}}),Fn(["filter","map","takeWhile"],function(n,r){var l=r+1,h=l==vt||l==X;ee.prototype[n]=function(x){var w=this.clone();return w.__iteratees__.push({iteratee:Ot(x,3),type:l}),w.__filtered__=w.__filtered__||h,w}}),Fn(["head","last"],function(n,r){var l="take"+(r?"Right":"");ee.prototype[n]=function(){return this[l](1).value()[0]}}),Fn(["initial","tail"],function(n,r){var l="drop"+(r?"":"Right");ee.prototype[n]=function(){return this.__filtered__?new ee(this):this[l](1)}}),ee.prototype.compact=function(){return this.filter(dn)},ee.prototype.find=function(n){return this.filter(n).head()},ee.prototype.findLast=function(n){return this.reverse().find(n)},ee.prototype.invokeMap=Kt(function(n,r){return typeof n=="function"?new ee(this):this.map(function(l){return Bs(l,n,r)})}),ee.prototype.reject=function(n){return this.filter(Wa(Ot(n)))},ee.prototype.slice=function(n,r){n=Yt(n);var l=this;return l.__filtered__&&(n>0||r<0)?new ee(l):(n<0?l=l.takeRight(-n):n&&(l=l.drop(n)),r!==s&&(r=Yt(r),l=r<0?l.dropRight(-r):l.take(r-n)),l)},ee.prototype.takeRightWhile=function(n){return this.reverse().takeWhile(n).reverse()},ee.prototype.toArray=function(){return this.take(k)},ai(ee.prototype,function(n,r){var l=/^(?:filter|find|map|reject)|While$/.test(r),h=/^(?:head|last)$/.test(r),x=b[h?"take"+(r=="last"?"Right":""):r],w=h||/^find/.test(r);!x||(b.prototype[r]=function(){var R=this.__wrapped__,F=h?[1]:arguments,B=R instanceof ee,tt=F[0],at=B||qt(R),ot=function(te){var ie=x.apply(b,Ui([te],F));return h&&xt?ie[0]:ie};at&&l&&typeof tt=="function"&&tt.length!=1&&(B=at=!1);var xt=this.__chain__,Et=!!this.__actions__.length,Nt=w&&!xt,Jt=B&&!Et;if(!w&&at){R=Jt?R:new ee(this);var zt=n.apply(R,F);return zt.__actions__.push({func:Ua,args:[ot],thisArg:s}),new Nn(zt,xt)}return Nt&&Jt?n.apply(this,F):(zt=this.thru(ot),Nt?h?zt.value()[0]:zt.value():zt)})}),Fn(["pop","push","shift","sort","splice","unshift"],function(n){var r=ua[n],l=/^(?:push|sort|unshift)$/.test(n)?"tap":"thru",h=/^(?:pop|shift)$/.test(n);b.prototype[n]=function(){var x=arguments;if(h&&!this.__chain__){var w=this.value();return r.apply(qt(w)?w:[],x)}return this[l](function(R){return r.apply(qt(R)?R:[],x)})}}),ai(ee.prototype,function(n,r){var l=b[r];if(l){var h=l.name+"";de.call(Hr,h)||(Hr[h]=[]),Hr[h].push({name:r,func:l})}}),Hr[Ra(s,v).name]=[{name:"wrapper",func:s}],ee.prototype.clone=gg,ee.prototype.reverse=_g,ee.prototype.value=vg,b.prototype.at=Y_,b.prototype.chain=Z_,b.prototype.commit=J_,b.prototype.next=$_,b.prototype.plant=Q_,b.prototype.reverse=j_,b.prototype.toJSON=b.prototype.valueOf=b.prototype.value=tv,b.prototype.first=b.prototype.head,Is&&(b.prototype[Is]=K_),b},ki=Jm();typeof define=="function"&&typeof define.amd=="object"&&define.amd?(Xe._=ki,define(function(){return ki})):or?((or.exports=ki)._=ki,Xo._=ki):Xe._=ki}).call($r)});var fp=Ue((pE,hp)=>{var As=1e3,Ts=As*60,Es=Ts*60,Fr=Es*24,tT=Fr*7,eT=Fr*365.25;hp.exports=function(s,t){t=t||{};var e=typeof s;if(e==="string"&&s.length>0)return nT(s);if(e==="number"&&isFinite(s))return t.long?rT(s):iT(s);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(s))};function nT(s){if(s=String(s),!(s.length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(s);if(!!t){var e=parseFloat(t[1]),i=(t[2]||"ms").toLowerCase();switch(i){case"years":case"year":case"yrs":case"yr":case"y":return e*eT;case"weeks":case"week":case"w":return e*tT;case"days":case"day":case"d":return e*Fr;case"hours":case"hour":case"hrs":case"hr":case"h":return e*Es;case"minutes":case"minute":case"mins":case"min":case"m":return e*Ts;case"seconds":case"second":case"secs":case"sec":case"s":return e*As;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return e;default:return}}}}function iT(s){var t=Math.abs(s);return t>=Fr?Math.round(s/Fr)+"d":t>=Es?Math.round(s/Es)+"h":t>=Ts?Math.round(s/Ts)+"m":t>=As?Math.round(s/As)+"s":s+"ms"}function rT(s){var t=Math.abs(s);return t>=Fr?Io(s,t,Fr,"day"):t>=Es?Io(s,t,Es,"hour"):t>=Ts?Io(s,t,Ts,"minute"):t>=As?Io(s,t,As,"second"):s+" ms"}function Io(s,t,e,i){var a=t>=e*1.5;return Math.round(s/e)+" "+i+(a?"s":"")}});var pp=Ue((mE,dp)=>{function sT(s){e.debug=e,e.default=e,e.coerce=d,e.disable=o,e.enable=a,e.enabled=u,e.humanize=fp(),e.destroy=f,Object.keys(s).forEach(p=>{e[p]=s[p]}),e.names=[],e.skips=[],e.formatters={};function t(p){let m=0;for(let g=0;g<p.length;g++)m=(m<<5)-m+p.charCodeAt(g),m|=0;return e.colors[Math.abs(m)%e.colors.length]}e.selectColor=t;function e(p){let m,g=null,y,M;function v(..._){if(!v.enabled)return;let S=v,D=Number(new Date),P=D-(m||D);S.diff=P,S.prev=m,S.curr=D,m=D,_[0]=e.coerce(_[0]),typeof _[0]!="string"&&_.unshift("%O");let E=0;_[0]=_[0].replace(/%([a-zA-Z%])/g,(N,H)=>{if(N==="%%")return"%";E++;let T=e.formatters[H];if(typeof T=="function"){let O=_[E];N=T.call(S,O),_.splice(E,1),E--}return N}),e.formatArgs.call(S,_),(S.log||e.log).apply(S,_)}return v.namespace=p,v.useColors=e.useColors(),v.color=e.selectColor(p),v.extend=i,v.destroy=e.destroy,Object.defineProperty(v,"enabled",{enumerable:!0,configurable:!1,get:()=>g!==null?g:(y!==e.namespaces&&(y=e.namespaces,M=e.enabled(p)),M),set:_=>{g=_}}),typeof e.init=="function"&&e.init(v),v}function i(p,m){let g=e(this.namespace+(typeof m=="undefined"?":":m)+p);return g.log=this.log,g}function a(p){e.save(p),e.namespaces=p,e.names=[],e.skips=[];let m,g=(typeof p=="string"?p:"").split(/[\s,]+/),y=g.length;for(m=0;m<y;m++)!g[m]||(p=g[m].replace(/\*/g,".*?"),p[0]==="-"?e.skips.push(new RegExp("^"+p.slice(1)+"$")):e.names.push(new RegExp("^"+p+"$")))}function o(){let p=[...e.names.map(c),...e.skips.map(c).map(m=>"-"+m)].join(",");return e.enable(""),p}function u(p){if(p[p.length-1]==="*")return!0;let m,g;for(m=0,g=e.skips.length;m<g;m++)if(e.skips[m].test(p))return!1;for(m=0,g=e.names.length;m<g;m++)if(e.names[m].test(p))return!0;return!1}function c(p){return p.toString().substring(2,p.toString().length-2).replace(/\.\*\?$/,"*")}function d(p){return p instanceof Error?p.stack||p.message:p}function f(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return e.enable(e.load()),e}dp.exports=sT});var mp=Ue((Ln,Do)=>{Ln.formatArgs=oT;Ln.save=lT;Ln.load=cT;Ln.useColors=aT;Ln.storage=uT();Ln.destroy=(()=>{let s=!1;return()=>{s||(s=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})();Ln.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function aT(){return typeof window!="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs)?!0:typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)?!1:typeof document!="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||typeof navigator!="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function oT(s){if(s[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+s[0]+(this.useColors?"%c ":" ")+"+"+Do.exports.humanize(this.diff),!this.useColors)return;let t="color: "+this.color;s.splice(1,0,t,"color: inherit");let e=0,i=0;s[0].replace(/%[a-zA-Z%]/g,a=>{a!=="%%"&&(e++,a==="%c"&&(i=e))}),s.splice(i,0,t)}Ln.log=console.debug||console.log||(()=>{});function lT(s){try{s?Ln.storage.setItem("debug",s):Ln.storage.removeItem("debug")}catch(t){}}function cT(){let s;try{s=Ln.storage.getItem("debug")}catch(t){}return!s&&typeof process!="undefined"&&"env"in process&&(s=process.env.DEBUG),s}function uT(){try{return localStorage}catch(s){}}Do.exports=pp()(Ln);var{formatters:hT}=Do.exports;hT.j=function(s){try{return JSON.stringify(s)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}});var Oo=Ue((WE,Mp)=>{function _T(s){var t=typeof s;return s!=null&&(t=="object"||t=="function")}Mp.exports=_T});var Sp=Ue((HE,wp)=>{var vT=typeof global=="object"&&global&&global.Object===Object&&global;wp.exports=vT});var fu=Ue((GE,Ap)=>{var xT=Sp(),yT=typeof self=="object"&&self&&self.Object===Object&&self,bT=xT||yT||Function("return this")();Ap.exports=bT});var Ep=Ue((qE,Tp)=>{var MT=fu(),wT=function(){return MT.Date.now()};Tp.exports=wT});var Pp=Ue((XE,Cp)=>{var ST=/\s/;function AT(s){for(var t=s.length;t--&&ST.test(s.charAt(t)););return t}Cp.exports=AT});var Rp=Ue((YE,Lp)=>{var TT=Pp(),ET=/^\s+/;function CT(s){return s&&s.slice(0,TT(s)+1).replace(ET,"")}Lp.exports=CT});var du=Ue((ZE,Ip)=>{var PT=fu(),LT=PT.Symbol;Ip.exports=LT});var Np=Ue((JE,Op)=>{var Dp=du(),Fp=Object.prototype,RT=Fp.hasOwnProperty,IT=Fp.toString,sa=Dp?Dp.toStringTag:void 0;function DT(s){var t=RT.call(s,sa),e=s[sa];try{s[sa]=void 0;var i=!0}catch(o){}var a=IT.call(s);return i&&(t?s[sa]=e:delete s[sa]),a}Op.exports=DT});var Up=Ue(($E,zp)=>{var FT=Object.prototype,OT=FT.toString;function NT(s){return OT.call(s)}zp.exports=NT});var Wp=Ue((KE,Vp)=>{var Bp=du(),zT=Np(),UT=Up(),BT="[object Null]",kT="[object Undefined]",kp=Bp?Bp.toStringTag:void 0;function VT(s){return s==null?s===void 0?kT:BT:kp&&kp in Object(s)?zT(s):UT(s)}Vp.exports=VT});var Gp=Ue((QE,Hp)=>{function WT(s){return s!=null&&typeof s=="object"}Hp.exports=WT});var Xp=Ue((jE,qp)=>{var HT=Wp(),GT=Gp(),qT="[object Symbol]";function XT(s){return typeof s=="symbol"||GT(s)&&HT(s)==qT}qp.exports=XT});var $p=Ue((t3,Jp)=>{var YT=Rp(),Yp=Oo(),ZT=Xp(),Zp=0/0,JT=/^[-+]0x[0-9a-f]+$/i,$T=/^0b[01]+$/i,KT=/^0o[0-7]+$/i,QT=parseInt;function jT(s){if(typeof s=="number")return s;if(ZT(s))return Zp;if(Yp(s)){var t=typeof s.valueOf=="function"?s.valueOf():s;s=Yp(t)?t+"":t}if(typeof s!="string")return s===0?s:+s;s=YT(s);var e=$T.test(s);return e||KT.test(s)?QT(s.slice(2),e?2:8):JT.test(s)?Zp:+s}Jp.exports=jT});var jp=Ue((e3,Qp)=>{var tE=Oo(),pu=Ep(),Kp=$p(),eE="Expected a function",nE=Math.max,iE=Math.min;function rE(s,t,e){var i,a,o,u,c,d,f=0,p=!1,m=!1,g=!0;if(typeof s!="function")throw new TypeError(eE);t=Kp(t)||0,tE(e)&&(p=!!e.leading,m="maxWait"in e,o=m?nE(Kp(e.maxWait)||0,t):o,g="trailing"in e?!!e.trailing:g);function y(N){var H=i,T=a;return i=a=void 0,f=N,u=s.apply(T,H),u}function M(N){return f=N,c=setTimeout(S,t),p?y(N):u}function v(N){var H=N-d,T=N-f,O=t-H;return m?iE(O,o-T):O}function _(N){var H=N-d,T=N-f;return d===void 0||H>=t||H<0||m&&T>=o}function S(){var N=pu();if(_(N))return D(N);c=setTimeout(S,v(N))}function D(N){return c=void 0,g&&i?y(N):(i=a=void 0,u)}function P(){c!==void 0&&clearTimeout(c),f=0,i=d=a=c=void 0}function E(){return c===void 0?u:D(pu())}function I(){var N=pu(),H=_(N);if(i=arguments,a=this,d=N,H){if(c===void 0)return M(d);if(m)return clearTimeout(c),c=setTimeout(S,t),y(d)}return c===void 0&&(c=setTimeout(S,t)),u}return I.cancel=P,I.flush=E,I}Qp.exports=rE});var em=Ue((n3,tm)=>{var sE=jp(),aE=Oo(),oE="Expected a function";function lE(s,t,e){var i=!0,a=!0;if(typeof s!="function")throw new TypeError(oE);return aE(e)&&(i="leading"in e?!!e.leading:i,a="trailing"in e?!!e.trailing:a),sE(s,t,{leading:i,maxWait:t,trailing:a})}tm.exports=lE});var bp=Kl(zf());var lu="146";var cb=0,Uf=1,ub=2;var Kd=1,hb=2,Ks=3,_s=0,Hn=1,er=2,nr=0,ps=1,Bf=2,kf=3,Vf=4,fb=5,hs=100,db=101,pb=102,Wf=103,Hf=104,mb=200,gb=201,_b=202,vb=203,Qd=204,jd=205,xb=206,yb=207,bb=208,Mb=209,wb=210,Sb=0,Ab=1,Tb=2,Lc=3,Eb=4,Cb=5,Pb=6,Lb=7,tp=0,Rb=1,Ib=2,Ri=0,Db=1,Fb=2,Ob=3,Nb=4,zb=5,ep=300,vs=301,xs=302,Rc=303,Ic=304,Po=306,Dc=1e3,ti=1001,Fc=1002,pn=1003,Gf=1004;var qf=1005;var Wn=1006,Ub=1007;var Lo=1008;var Tr=1009,Bb=1010,kb=1011,np=1012,Vb=1013,br=1014,Mr=1015,ta=1016,Wb=1017,Hb=1018,ms=1020,Gb=1021,qb=1022,ei=1023,Xb=1024,Yb=1025,Sr=1026,ys=1027,Zb=1028,Jb=1029,$b=1030,Kb=1031,Qb=1033,Ql=33776,jl=33777,tc=33778,ec=33779,Xf=35840,Yf=35841,Zf=35842,Jf=35843,jb=36196,$f=37492,Kf=37496,Qf=37808,jf=37809,td=37810,ed=37811,nd=37812,id=37813,rd=37814,sd=37815,ad=37816,od=37817,ld=37818,cd=37819,ud=37820,hd=37821,fd=36492;var mo=2300,go=2301,nc=2302,dd=2400,pd=2401,md=2402;var Er=3e3,Ce=3001,tM=3200,eM=3201,nM=0,iM=1;var Pi="srgb",wr="srgb-linear";var ic=7680;var rM=519,gd=35044;var _d="300 es",Oc=1035,ir=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});let i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;let i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;let a=this._listeners[t];if(a!==void 0){let o=a.indexOf(e);o!==-1&&a.splice(o,1)}}dispatchEvent(t){if(this._listeners===void 0)return;let i=this._listeners[t.type];if(i!==void 0){t.target=this;let a=i.slice(0);for(let o=0,u=a.length;o<u;o++)a[o].call(this,t);t.target=null}}},tn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];var rc=Math.PI/180,vd=180/Math.PI;function ra(){let s=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(tn[s&255]+tn[s>>8&255]+tn[s>>16&255]+tn[s>>24&255]+"-"+tn[t&255]+tn[t>>8&255]+"-"+tn[t>>16&15|64]+tn[t>>24&255]+"-"+tn[e&63|128]+tn[e>>8&255]+"-"+tn[e>>16&255]+tn[e>>24&255]+tn[i&255]+tn[i>>8&255]+tn[i>>16&255]+tn[i>>24&255]).toLowerCase()}function En(s,t,e){return Math.max(t,Math.min(e,s))}function sM(s,t){return(s%t+t)%t}function sc(s,t,e){return(1-e)*s+e*t}function xd(s){return(s&s-1)===0&&s!==0}function Nc(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function Xa(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function Sn(s,t){switch(t.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}var pe=class{constructor(t=0,e=0){pe.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){let e=this.x,i=this.y,a=t.elements;return this.x=a[0]*e+a[3]*i+a[6],this.y=a[1]*e+a[4]*i+a[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){let i=Math.cos(e),a=Math.sin(e),o=this.x-t.x,u=this.y-t.y;return this.x=o*i-u*a+t.x,this.y=o*a+u*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},mn=class{constructor(){mn.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(t,e,i,a,o,u,c,d,f){let p=this.elements;return p[0]=t,p[1]=a,p[2]=c,p[3]=e,p[4]=o,p[5]=d,p[6]=i,p[7]=u,p[8]=f,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){let e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){let e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let i=t.elements,a=e.elements,o=this.elements,u=i[0],c=i[3],d=i[6],f=i[1],p=i[4],m=i[7],g=i[2],y=i[5],M=i[8],v=a[0],_=a[3],S=a[6],D=a[1],P=a[4],E=a[7],I=a[2],N=a[5],H=a[8];return o[0]=u*v+c*D+d*I,o[3]=u*_+c*P+d*N,o[6]=u*S+c*E+d*H,o[1]=f*v+p*D+m*I,o[4]=f*_+p*P+m*N,o[7]=f*S+p*E+m*H,o[2]=g*v+y*D+M*I,o[5]=g*_+y*P+M*N,o[8]=g*S+y*E+M*H,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){let t=this.elements,e=t[0],i=t[1],a=t[2],o=t[3],u=t[4],c=t[5],d=t[6],f=t[7],p=t[8];return e*u*p-e*c*f-i*o*p+i*c*d+a*o*f-a*u*d}invert(){let t=this.elements,e=t[0],i=t[1],a=t[2],o=t[3],u=t[4],c=t[5],d=t[6],f=t[7],p=t[8],m=p*u-c*f,g=c*d-p*o,y=f*o-u*d,M=e*m+i*g+a*y;if(M===0)return this.set(0,0,0,0,0,0,0,0,0);let v=1/M;return t[0]=m*v,t[1]=(a*f-p*i)*v,t[2]=(c*i-a*u)*v,t[3]=g*v,t[4]=(p*e-a*d)*v,t[5]=(a*o-c*e)*v,t[6]=y*v,t[7]=(i*d-f*e)*v,t[8]=(u*e-i*o)*v,this}transpose(){let t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){let e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,a,o,u,c){let d=Math.cos(o),f=Math.sin(o);return this.set(i*d,i*f,-i*(d*u+f*c)+u+t,-a*f,a*d,-a*(-f*u+d*c)+c+e,0,0,1),this}scale(t,e){let i=this.elements;return i[0]*=t,i[3]*=t,i[6]*=t,i[1]*=e,i[4]*=e,i[7]*=e,this}rotate(t){let e=Math.cos(t),i=Math.sin(t),a=this.elements,o=a[0],u=a[3],c=a[6],d=a[1],f=a[4],p=a[7];return a[0]=e*o+i*d,a[3]=e*u+i*f,a[6]=e*c+i*p,a[1]=-i*o+e*d,a[4]=-i*u+e*f,a[7]=-i*c+e*p,this}translate(t,e){let i=this.elements;return i[0]+=t*i[2],i[3]+=t*i[5],i[6]+=t*i[8],i[1]+=e*i[2],i[4]+=e*i[5],i[7]+=e*i[8],this}equals(t){let e=this.elements,i=t.elements;for(let a=0;a<9;a++)if(e[a]!==i[a])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){let i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}};function ip(s){for(let t=s.length-1;t>=0;--t)if(s[t]>=65535)return!0;return!1}function _o(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function Ar(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function po(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}var ac={[Pi]:{[wr]:Ar},[wr]:{[Pi]:po}},$n={legacyMode:!0,get workingColorSpace(){return wr},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,t,e){if(this.legacyMode||t===e||!t||!e)return s;if(ac[t]&&ac[t][e]!==void 0){let i=ac[t][e];return s.r=i(s.r),s.g=i(s.g),s.b=i(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,t){return this.convert(s,this.workingColorSpace,t)},toWorkingColorSpace:function(s,t){return this.convert(s,t,this.workingColorSpace)}},rp={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Be={r:0,g:0,b:0},Kn={h:0,s:0,l:0},Ya={h:0,s:0,l:0};function oc(s,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?s+(t-s)*6*e:e<1/2?t:e<2/3?s+(t-s)*6*(2/3-e):s}function Za(s,t){return t.r=s.r,t.g=s.g,t.b=s.b,t}var be=class{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,e===void 0&&i===void 0?this.set(t):this.setRGB(t,e,i)}set(t){return t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Pi){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,$n.toWorkingColorSpace(this,e),this}setRGB(t,e,i,a=wr){return this.r=t,this.g=e,this.b=i,$n.toWorkingColorSpace(this,a),this}setHSL(t,e,i,a=wr){if(t=sM(t,1),e=En(e,0,1),i=En(i,0,1),e===0)this.r=this.g=this.b=i;else{let o=i<=.5?i*(1+e):i+e-i*e,u=2*i-o;this.r=oc(u,o,t+1/3),this.g=oc(u,o,t),this.b=oc(u,o,t-1/3)}return $n.toWorkingColorSpace(this,a),this}setStyle(t,e=Pi){function i(o){o!==void 0&&parseFloat(o)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let a;if(a=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let o,u=a[1],c=a[2];switch(u){case"rgb":case"rgba":if(o=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(o[1],10))/255,this.g=Math.min(255,parseInt(o[2],10))/255,this.b=Math.min(255,parseInt(o[3],10))/255,$n.toWorkingColorSpace(this,e),i(o[4]),this;if(o=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(o[1],10))/100,this.g=Math.min(100,parseInt(o[2],10))/100,this.b=Math.min(100,parseInt(o[3],10))/100,$n.toWorkingColorSpace(this,e),i(o[4]),this;break;case"hsl":case"hsla":if(o=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){let d=parseFloat(o[1])/360,f=parseFloat(o[2])/100,p=parseFloat(o[3])/100;return i(o[4]),this.setHSL(d,f,p,e)}break}}else if(a=/^\#([A-Fa-f\d]+)$/.exec(t)){let o=a[1],u=o.length;if(u===3)return this.r=parseInt(o.charAt(0)+o.charAt(0),16)/255,this.g=parseInt(o.charAt(1)+o.charAt(1),16)/255,this.b=parseInt(o.charAt(2)+o.charAt(2),16)/255,$n.toWorkingColorSpace(this,e),this;if(u===6)return this.r=parseInt(o.charAt(0)+o.charAt(1),16)/255,this.g=parseInt(o.charAt(2)+o.charAt(3),16)/255,this.b=parseInt(o.charAt(4)+o.charAt(5),16)/255,$n.toWorkingColorSpace(this,e),this}return t&&t.length>0?this.setColorName(t,e):this}setColorName(t,e=Pi){let i=rp[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ar(t.r),this.g=Ar(t.g),this.b=Ar(t.b),this}copyLinearToSRGB(t){return this.r=po(t.r),this.g=po(t.g),this.b=po(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Pi){return $n.fromWorkingColorSpace(Za(this,Be),t),En(Be.r*255,0,255)<<16^En(Be.g*255,0,255)<<8^En(Be.b*255,0,255)<<0}getHexString(t=Pi){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=wr){$n.fromWorkingColorSpace(Za(this,Be),e);let i=Be.r,a=Be.g,o=Be.b,u=Math.max(i,a,o),c=Math.min(i,a,o),d,f,p=(c+u)/2;if(c===u)d=0,f=0;else{let m=u-c;switch(f=p<=.5?m/(u+c):m/(2-u-c),u){case i:d=(a-o)/m+(a<o?6:0);break;case a:d=(o-i)/m+2;break;case o:d=(i-a)/m+4;break}d/=6}return t.h=d,t.s=f,t.l=p,t}getRGB(t,e=wr){return $n.fromWorkingColorSpace(Za(this,Be),e),t.r=Be.r,t.g=Be.g,t.b=Be.b,t}getStyle(t=Pi){return $n.fromWorkingColorSpace(Za(this,Be),t),t!==Pi?`color(${t} ${Be.r} ${Be.g} ${Be.b})`:`rgb(${Be.r*255|0},${Be.g*255|0},${Be.b*255|0})`}offsetHSL(t,e,i){return this.getHSL(Kn),Kn.h+=t,Kn.s+=e,Kn.l+=i,this.setHSL(Kn.h,Kn.s,Kn.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Kn),t.getHSL(Ya);let i=sc(Kn.h,Ya.h,e),a=sc(Kn.s,Ya.s,e),o=sc(Kn.l,Ya.l,e);return this.setHSL(i,a,o),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};be.NAMES=rp;var Kr,vo=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement=="undefined")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Kr===void 0&&(Kr=_o("canvas")),Kr.width=t.width,Kr.height=t.height;let i=Kr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Kr}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement!="undefined"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&t instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&t instanceof ImageBitmap){let e=_o("canvas");e.width=t.width,e.height=t.height;let i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);let a=i.getImageData(0,0,t.width,t.height),o=a.data;for(let u=0;u<o.length;u++)o[u]=Ar(o[u]/255)*255;return i.putImageData(a,0,0),e}else if(t.data){let e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(Ar(e[i]/255)*255):e[i]=Ar(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},xo=class{constructor(t=null){this.isSource=!0,this.uuid=ra(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){let e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];let i={uuid:this.uuid,url:""},a=this.data;if(a!==null){let o;if(Array.isArray(a)){o=[];for(let u=0,c=a.length;u<c;u++)a[u].isDataTexture?o.push(lc(a[u].image)):o.push(lc(a[u]))}else o=lc(a);i.url=o}return e||(t.images[this.uuid]=i),i}};function lc(s){return typeof HTMLImageElement!="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&s instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&s instanceof ImageBitmap?vo.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}var aM=0,Pn=class extends ir{constructor(t=Pn.DEFAULT_IMAGE,e=Pn.DEFAULT_MAPPING,i=ti,a=ti,o=Wn,u=Lo,c=ei,d=Tr,f=1,p=Er){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:aM++}),this.uuid=ra(),this.name="",this.source=new xo(t),this.mipmaps=[],this.mapping=e,this.wrapS=i,this.wrapT=a,this.magFilter=o,this.minFilter=u,this.anisotropy=f,this.format=c,this.internalFormat=null,this.type=d,this.offset=new pe(0,0),this.repeat=new pe(1,1),this.center=new pe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new mn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=p,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){let e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];let i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==ep)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Dc:t.x=t.x-Math.floor(t.x);break;case ti:t.x=t.x<0?0:1;break;case Fc:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Dc:t.y=t.y-Math.floor(t.y);break;case ti:t.y=t.y<0?0:1;break;case Fc:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}};Pn.DEFAULT_IMAGE=null;Pn.DEFAULT_MAPPING=ep;var ke=class{constructor(t=0,e=0,i=0,a=1){ke.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=a}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,a){return this.x=t,this.y=e,this.z=i,this.w=a,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){let e=this.x,i=this.y,a=this.z,o=this.w,u=t.elements;return this.x=u[0]*e+u[4]*i+u[8]*a+u[12]*o,this.y=u[1]*e+u[5]*i+u[9]*a+u[13]*o,this.z=u[2]*e+u[6]*i+u[10]*a+u[14]*o,this.w=u[3]*e+u[7]*i+u[11]*a+u[15]*o,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);let e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,a,o,d=t.elements,f=d[0],p=d[4],m=d[8],g=d[1],y=d[5],M=d[9],v=d[2],_=d[6],S=d[10];if(Math.abs(p-g)<.01&&Math.abs(m-v)<.01&&Math.abs(M-_)<.01){if(Math.abs(p+g)<.1&&Math.abs(m+v)<.1&&Math.abs(M+_)<.1&&Math.abs(f+y+S-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;let P=(f+1)/2,E=(y+1)/2,I=(S+1)/2,N=(p+g)/4,H=(m+v)/4,T=(M+_)/4;return P>E&&P>I?P<.01?(i=0,a=.707106781,o=.707106781):(i=Math.sqrt(P),a=N/i,o=H/i):E>I?E<.01?(i=.707106781,a=0,o=.707106781):(a=Math.sqrt(E),i=N/a,o=T/a):I<.01?(i=.707106781,a=.707106781,o=0):(o=Math.sqrt(I),i=H/o,a=T/o),this.set(i,a,o,e),this}let D=Math.sqrt((_-M)*(_-M)+(m-v)*(m-v)+(g-p)*(g-p));return Math.abs(D)<.001&&(D=1),this.x=(_-M)/D,this.y=(m-v)/D,this.z=(g-p)/D,this.w=Math.acos((f+y+S-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}},Di=class extends ir{constructor(t=1,e=1,i={}){super(),this.isWebGLRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new ke(0,0,t,e),this.scissorTest=!1,this.viewport=new ke(0,0,t,e);let a={width:t,height:e,depth:1};this.texture=new Pn(a,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:Wn,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(t,e,i=1){(this.width!==t||this.height!==e||this.depth!==i)&&(this.width=t,this.height=e,this.depth=i,this.texture.image.width=t,this.texture.image.height=e,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;let e=Object.assign({},t.texture.image);return this.texture.source=new xo(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}},yo=class extends Pn{constructor(t=null,e=1,i=1,a=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:a},this.magFilter=pn,this.minFilter=pn,this.wrapR=ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var zc=class extends Pn{constructor(t=null,e=1,i=1,a=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:a},this.magFilter=pn,this.minFilter=pn,this.wrapR=ti,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};var hi=class{constructor(t=0,e=0,i=0,a=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=a}static slerpFlat(t,e,i,a,o,u,c){let d=i[a+0],f=i[a+1],p=i[a+2],m=i[a+3],g=o[u+0],y=o[u+1],M=o[u+2],v=o[u+3];if(c===0){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=m;return}if(c===1){t[e+0]=g,t[e+1]=y,t[e+2]=M,t[e+3]=v;return}if(m!==v||d!==g||f!==y||p!==M){let _=1-c,S=d*g+f*y+p*M+m*v,D=S>=0?1:-1,P=1-S*S;if(P>Number.EPSILON){let I=Math.sqrt(P),N=Math.atan2(I,S*D);_=Math.sin(_*N)/I,c=Math.sin(c*N)/I}let E=c*D;if(d=d*_+g*E,f=f*_+y*E,p=p*_+M*E,m=m*_+v*E,_===1-c){let I=1/Math.sqrt(d*d+f*f+p*p+m*m);d*=I,f*=I,p*=I,m*=I}}t[e]=d,t[e+1]=f,t[e+2]=p,t[e+3]=m}static multiplyQuaternionsFlat(t,e,i,a,o,u){let c=i[a],d=i[a+1],f=i[a+2],p=i[a+3],m=o[u],g=o[u+1],y=o[u+2],M=o[u+3];return t[e]=c*M+p*m+d*y-f*g,t[e+1]=d*M+p*g+f*m-c*y,t[e+2]=f*M+p*y+c*g-d*m,t[e+3]=p*M-c*m-d*g-f*y,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,a){return this._x=t,this._y=e,this._z=i,this._w=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){let i=t._x,a=t._y,o=t._z,u=t._order,c=Math.cos,d=Math.sin,f=c(i/2),p=c(a/2),m=c(o/2),g=d(i/2),y=d(a/2),M=d(o/2);switch(u){case"XYZ":this._x=g*p*m+f*y*M,this._y=f*y*m-g*p*M,this._z=f*p*M+g*y*m,this._w=f*p*m-g*y*M;break;case"YXZ":this._x=g*p*m+f*y*M,this._y=f*y*m-g*p*M,this._z=f*p*M-g*y*m,this._w=f*p*m+g*y*M;break;case"ZXY":this._x=g*p*m-f*y*M,this._y=f*y*m+g*p*M,this._z=f*p*M+g*y*m,this._w=f*p*m-g*y*M;break;case"ZYX":this._x=g*p*m-f*y*M,this._y=f*y*m+g*p*M,this._z=f*p*M-g*y*m,this._w=f*p*m+g*y*M;break;case"YZX":this._x=g*p*m+f*y*M,this._y=f*y*m+g*p*M,this._z=f*p*M-g*y*m,this._w=f*p*m-g*y*M;break;case"XZY":this._x=g*p*m-f*y*M,this._y=f*y*m-g*p*M,this._z=f*p*M+g*y*m,this._w=f*p*m+g*y*M;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+u)}return e!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,e){let i=e/2,a=Math.sin(i);return this._x=t.x*a,this._y=t.y*a,this._z=t.z*a,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){let e=t.elements,i=e[0],a=e[4],o=e[8],u=e[1],c=e[5],d=e[9],f=e[2],p=e[6],m=e[10],g=i+c+m;if(g>0){let y=.5/Math.sqrt(g+1);this._w=.25/y,this._x=(p-d)*y,this._y=(o-f)*y,this._z=(u-a)*y}else if(i>c&&i>m){let y=2*Math.sqrt(1+i-c-m);this._w=(p-d)/y,this._x=.25*y,this._y=(a+u)/y,this._z=(o+f)/y}else if(c>m){let y=2*Math.sqrt(1+c-i-m);this._w=(o-f)/y,this._x=(a+u)/y,this._y=.25*y,this._z=(d+p)/y}else{let y=2*Math.sqrt(1+m-i-c);this._w=(u-a)/y,this._x=(o+f)/y,this._y=(d+p)/y,this._z=.25*y}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(En(this.dot(t),-1,1)))}rotateTowards(t,e){let i=this.angleTo(t);if(i===0)return this;let a=Math.min(1,e/i);return this.slerp(t,a),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){let i=t._x,a=t._y,o=t._z,u=t._w,c=e._x,d=e._y,f=e._z,p=e._w;return this._x=i*p+u*c+a*f-o*d,this._y=a*p+u*d+o*c-i*f,this._z=o*p+u*f+i*d-a*c,this._w=u*p-i*c-a*d-o*f,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);let i=this._x,a=this._y,o=this._z,u=this._w,c=u*t._w+i*t._x+a*t._y+o*t._z;if(c<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,c=-c):this.copy(t),c>=1)return this._w=u,this._x=i,this._y=a,this._z=o,this;let d=1-c*c;if(d<=Number.EPSILON){let y=1-e;return this._w=y*u+e*this._w,this._x=y*i+e*this._x,this._y=y*a+e*this._y,this._z=y*o+e*this._z,this.normalize(),this._onChangeCallback(),this}let f=Math.sqrt(d),p=Math.atan2(f,c),m=Math.sin((1-e)*p)/f,g=Math.sin(e*p)/f;return this._w=u*m+this._w*g,this._x=i*m+this._x*g,this._y=a*m+this._y*g,this._z=o*m+this._z*g,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){let t=Math.random(),e=Math.sqrt(1-t),i=Math.sqrt(t),a=2*Math.PI*Math.random(),o=2*Math.PI*Math.random();return this.set(e*Math.cos(a),i*Math.sin(o),i*Math.cos(o),e*Math.sin(a))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},W=class{constructor(t=0,e=0,i=0){W.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(yd.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(yd.setFromAxisAngle(t,e))}applyMatrix3(t){let e=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*e+o[3]*i+o[6]*a,this.y=o[1]*e+o[4]*i+o[7]*a,this.z=o[2]*e+o[5]*i+o[8]*a,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){let e=this.x,i=this.y,a=this.z,o=t.elements,u=1/(o[3]*e+o[7]*i+o[11]*a+o[15]);return this.x=(o[0]*e+o[4]*i+o[8]*a+o[12])*u,this.y=(o[1]*e+o[5]*i+o[9]*a+o[13])*u,this.z=(o[2]*e+o[6]*i+o[10]*a+o[14])*u,this}applyQuaternion(t){let e=this.x,i=this.y,a=this.z,o=t.x,u=t.y,c=t.z,d=t.w,f=d*e+u*a-c*i,p=d*i+c*e-o*a,m=d*a+o*i-u*e,g=-o*e-u*i-c*a;return this.x=f*d+g*-o+p*-c-m*-u,this.y=p*d+g*-u+m*-o-f*-c,this.z=m*d+g*-c+f*-u-p*-o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){let e=this.x,i=this.y,a=this.z,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*a,this.y=o[1]*e+o[5]*i+o[9]*a,this.z=o[2]*e+o[6]*i+o[10]*a,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){let i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){let i=t.x,a=t.y,o=t.z,u=e.x,c=e.y,d=e.z;return this.x=a*d-o*c,this.y=o*u-i*d,this.z=i*c-a*u,this}projectOnVector(t){let e=t.lengthSq();if(e===0)return this.set(0,0,0);let i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return cc.copy(this).projectOnVector(t),this.sub(cc)}reflect(t){return this.sub(cc.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){let e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;let i=this.dot(t)/e;return Math.acos(En(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){let e=this.x-t.x,i=this.y-t.y,a=this.z-t.z;return e*e+i*i+a*a}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){let a=Math.sin(e)*t;return this.x=a*Math.sin(i),this.y=Math.cos(e)*t,this.z=a*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){let e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){let e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),a=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=a,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){let t=(Math.random()-.5)*2,e=Math.random()*Math.PI*2,i=Math.sqrt(1-Nf(t,2));return this.x=i*Math.cos(e),this.y=i*Math.sin(e),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}},cc=new W,yd=new hi,Cr=class{constructor(t=new W(1/0,1/0,1/0),e=new W(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,i=1/0,a=1/0,o=-1/0,u=-1/0,c=-1/0;for(let d=0,f=t.length;d<f;d+=3){let p=t[d],m=t[d+1],g=t[d+2];p<e&&(e=p),m<i&&(i=m),g<a&&(a=g),p>o&&(o=p),m>u&&(u=m),g>c&&(c=g)}return this.min.set(e,i,a),this.max.set(o,u,c),this}setFromBufferAttribute(t){let e=1/0,i=1/0,a=1/0,o=-1/0,u=-1/0,c=-1/0;for(let d=0,f=t.count;d<f;d++){let p=t.getX(d),m=t.getY(d),g=t.getZ(d);p<e&&(e=p),m<i&&(i=m),g<a&&(a=g),p>o&&(o=p),m>u&&(u=m),g>c&&(c=g)}return this.min.set(e,i,a),this.max.set(o,u,c),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){let i=gr.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);let i=t.geometry;if(i!==void 0)if(e&&i.attributes!=null&&i.attributes.position!==void 0){let o=i.attributes.position;for(let u=0,c=o.count;u<c;u++)gr.fromBufferAttribute(o,u).applyMatrix4(t.matrixWorld),this.expandByPoint(gr)}else i.boundingBox===null&&i.computeBoundingBox(),uc.copy(i.boundingBox),uc.applyMatrix4(t.matrixWorld),this.union(uc);let a=t.children;for(let o=0,u=a.length;o<u;o++)this.expandByObject(a[o],e);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,gr),gr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ys),Ja.subVectors(this.max,Ys),Qr.subVectors(t.a,Ys),jr.subVectors(t.b,Ys),ts.subVectors(t.c,Ys),Yi.subVectors(jr,Qr),Zi.subVectors(ts,jr),_r.subVectors(Qr,ts);let e=[0,-Yi.z,Yi.y,0,-Zi.z,Zi.y,0,-_r.z,_r.y,Yi.z,0,-Yi.x,Zi.z,0,-Zi.x,_r.z,0,-_r.x,-Yi.y,Yi.x,0,-Zi.y,Zi.x,0,-_r.y,_r.x,0];return!hc(e,Qr,jr,ts,Ja)||(e=[1,0,0,0,1,0,0,0,1],!hc(e,Qr,jr,ts,Ja))?!1:($a.crossVectors(Yi,Zi),e=[$a.x,$a.y,$a.z],hc(e,Qr,jr,ts,Ja))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return gr.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return this.getCenter(t.center),t.radius=this.getSize(gr).length()*.5,t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Si[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Si[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Si[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Si[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Si[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Si[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Si[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Si[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Si),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},Si=[new W,new W,new W,new W,new W,new W,new W,new W],gr=new W,uc=new Cr,Qr=new W,jr=new W,ts=new W,Yi=new W,Zi=new W,_r=new W,Ys=new W,Ja=new W,$a=new W,vr=new W;function hc(s,t,e,i,a){for(let o=0,u=s.length-3;o<=u;o+=3){vr.fromArray(s,o);let c=a.x*Math.abs(vr.x)+a.y*Math.abs(vr.y)+a.z*Math.abs(vr.z),d=t.dot(vr),f=e.dot(vr),p=i.dot(vr);if(Math.max(-Math.max(d,f,p),Math.min(d,f,p))>c)return!1}return!0}var oM=new Cr,Zs=new W,fc=new W,ea=class{constructor(t=new W,e=-1){this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){let i=this.center;e!==void 0?i.copy(e):oM.setFromPoints(t).getCenter(i);let a=0;for(let o=0,u=t.length;o<u;o++)a=Math.max(a,i.distanceToSquared(t[o]));return this.radius=Math.sqrt(a),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){let e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){let i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Zs.subVectors(t,this.center);let e=Zs.lengthSq();if(e>this.radius*this.radius){let i=Math.sqrt(e),a=(i-this.radius)*.5;this.center.addScaledVector(Zs,a/i),this.radius+=a}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(fc.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Zs.copy(t.center).add(fc)),this.expandByPoint(Zs.copy(t.center).sub(fc))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}},Ai=new W,dc=new W,Ka=new W,Ji=new W,pc=new W,Qa=new W,mc=new W,Uc=class{constructor(t=new W,e=new W(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ai)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);let i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){let e=Ai.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ai.copy(this.direction).multiplyScalar(e).add(this.origin),Ai.distanceToSquared(t))}distanceSqToSegment(t,e,i,a){dc.copy(t).add(e).multiplyScalar(.5),Ka.copy(e).sub(t).normalize(),Ji.copy(this.origin).sub(dc);let o=t.distanceTo(e)*.5,u=-this.direction.dot(Ka),c=Ji.dot(this.direction),d=-Ji.dot(Ka),f=Ji.lengthSq(),p=Math.abs(1-u*u),m,g,y,M;if(p>0)if(m=u*d-c,g=u*c-d,M=o*p,m>=0)if(g>=-M)if(g<=M){let v=1/p;m*=v,g*=v,y=m*(m+u*g+2*c)+g*(u*m+g+2*d)+f}else g=o,m=Math.max(0,-(u*g+c)),y=-m*m+g*(g+2*d)+f;else g=-o,m=Math.max(0,-(u*g+c)),y=-m*m+g*(g+2*d)+f;else g<=-M?(m=Math.max(0,-(-u*o+c)),g=m>0?-o:Math.min(Math.max(-o,-d),o),y=-m*m+g*(g+2*d)+f):g<=M?(m=0,g=Math.min(Math.max(-o,-d),o),y=g*(g+2*d)+f):(m=Math.max(0,-(u*o+c)),g=m>0?o:Math.min(Math.max(-o,-d),o),y=-m*m+g*(g+2*d)+f);else g=u>0?-o:o,m=Math.max(0,-(u*g+c)),y=-m*m+g*(g+2*d)+f;return i&&i.copy(this.direction).multiplyScalar(m).add(this.origin),a&&a.copy(Ka).multiplyScalar(g).add(dc),y}intersectSphere(t,e){Ai.subVectors(t.center,this.origin);let i=Ai.dot(this.direction),a=Ai.dot(Ai)-i*i,o=t.radius*t.radius;if(a>o)return null;let u=Math.sqrt(o-a),c=i-u,d=i+u;return c<0&&d<0?null:c<0?this.at(d,e):this.at(c,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){let e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;let i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){let i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){let e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,a,o,u,c,d,f=1/this.direction.x,p=1/this.direction.y,m=1/this.direction.z,g=this.origin;return f>=0?(i=(t.min.x-g.x)*f,a=(t.max.x-g.x)*f):(i=(t.max.x-g.x)*f,a=(t.min.x-g.x)*f),p>=0?(o=(t.min.y-g.y)*p,u=(t.max.y-g.y)*p):(o=(t.max.y-g.y)*p,u=(t.min.y-g.y)*p),i>u||o>a||((o>i||isNaN(i))&&(i=o),(u<a||isNaN(a))&&(a=u),m>=0?(c=(t.min.z-g.z)*m,d=(t.max.z-g.z)*m):(c=(t.max.z-g.z)*m,d=(t.min.z-g.z)*m),i>d||c>a)||((c>i||i!==i)&&(i=c),(d<a||a!==a)&&(a=d),a<0)?null:this.at(i>=0?i:a,e)}intersectsBox(t){return this.intersectBox(t,Ai)!==null}intersectTriangle(t,e,i,a,o){pc.subVectors(e,t),Qa.subVectors(i,t),mc.crossVectors(pc,Qa);let u=this.direction.dot(mc),c;if(u>0){if(a)return null;c=1}else if(u<0)c=-1,u=-u;else return null;Ji.subVectors(this.origin,t);let d=c*this.direction.dot(Qa.crossVectors(Ji,Qa));if(d<0)return null;let f=c*this.direction.dot(pc.cross(Ji));if(f<0||d+f>u)return null;let p=-c*Ji.dot(mc);return p<0?null:this.at(p/u,o)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Ve=class{constructor(){Ve.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(t,e,i,a,o,u,c,d,f,p,m,g,y,M,v,_){let S=this.elements;return S[0]=t,S[4]=e,S[8]=i,S[12]=a,S[1]=o,S[5]=u,S[9]=c,S[13]=d,S[2]=f,S[6]=p,S[10]=m,S[14]=g,S[3]=y,S[7]=M,S[11]=v,S[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ve().fromArray(this.elements)}copy(t){let e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){let e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){let e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){let e=this.elements,i=t.elements,a=1/es.setFromMatrixColumn(t,0).length(),o=1/es.setFromMatrixColumn(t,1).length(),u=1/es.setFromMatrixColumn(t,2).length();return e[0]=i[0]*a,e[1]=i[1]*a,e[2]=i[2]*a,e[3]=0,e[4]=i[4]*o,e[5]=i[5]*o,e[6]=i[6]*o,e[7]=0,e[8]=i[8]*u,e[9]=i[9]*u,e[10]=i[10]*u,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){let e=this.elements,i=t.x,a=t.y,o=t.z,u=Math.cos(i),c=Math.sin(i),d=Math.cos(a),f=Math.sin(a),p=Math.cos(o),m=Math.sin(o);if(t.order==="XYZ"){let g=u*p,y=u*m,M=c*p,v=c*m;e[0]=d*p,e[4]=-d*m,e[8]=f,e[1]=y+M*f,e[5]=g-v*f,e[9]=-c*d,e[2]=v-g*f,e[6]=M+y*f,e[10]=u*d}else if(t.order==="YXZ"){let g=d*p,y=d*m,M=f*p,v=f*m;e[0]=g+v*c,e[4]=M*c-y,e[8]=u*f,e[1]=u*m,e[5]=u*p,e[9]=-c,e[2]=y*c-M,e[6]=v+g*c,e[10]=u*d}else if(t.order==="ZXY"){let g=d*p,y=d*m,M=f*p,v=f*m;e[0]=g-v*c,e[4]=-u*m,e[8]=M+y*c,e[1]=y+M*c,e[5]=u*p,e[9]=v-g*c,e[2]=-u*f,e[6]=c,e[10]=u*d}else if(t.order==="ZYX"){let g=u*p,y=u*m,M=c*p,v=c*m;e[0]=d*p,e[4]=M*f-y,e[8]=g*f+v,e[1]=d*m,e[5]=v*f+g,e[9]=y*f-M,e[2]=-f,e[6]=c*d,e[10]=u*d}else if(t.order==="YZX"){let g=u*d,y=u*f,M=c*d,v=c*f;e[0]=d*p,e[4]=v-g*m,e[8]=M*m+y,e[1]=m,e[5]=u*p,e[9]=-c*p,e[2]=-f*p,e[6]=y*m+M,e[10]=g-v*m}else if(t.order==="XZY"){let g=u*d,y=u*f,M=c*d,v=c*f;e[0]=d*p,e[4]=-m,e[8]=f*p,e[1]=g*m+v,e[5]=u*p,e[9]=y*m-M,e[2]=M*m-y,e[6]=c*p,e[10]=v*m+g}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(lM,t,cM)}lookAt(t,e,i){let a=this.elements;return An.subVectors(t,e),An.lengthSq()===0&&(An.z=1),An.normalize(),$i.crossVectors(i,An),$i.lengthSq()===0&&(Math.abs(i.z)===1?An.x+=1e-4:An.z+=1e-4,An.normalize(),$i.crossVectors(i,An)),$i.normalize(),ja.crossVectors(An,$i),a[0]=$i.x,a[4]=ja.x,a[8]=An.x,a[1]=$i.y,a[5]=ja.y,a[9]=An.y,a[2]=$i.z,a[6]=ja.z,a[10]=An.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){let i=t.elements,a=e.elements,o=this.elements,u=i[0],c=i[4],d=i[8],f=i[12],p=i[1],m=i[5],g=i[9],y=i[13],M=i[2],v=i[6],_=i[10],S=i[14],D=i[3],P=i[7],E=i[11],I=i[15],N=a[0],H=a[4],T=a[8],O=a[12],q=a[1],ft=a[5],vt=a[9],et=a[13],X=a[2],nt=a[6],lt=a[10],pt=a[14],it=a[3],k=a[7],Y=a[11],gt=a[15];return o[0]=u*N+c*q+d*X+f*it,o[4]=u*H+c*ft+d*nt+f*k,o[8]=u*T+c*vt+d*lt+f*Y,o[12]=u*O+c*et+d*pt+f*gt,o[1]=p*N+m*q+g*X+y*it,o[5]=p*H+m*ft+g*nt+y*k,o[9]=p*T+m*vt+g*lt+y*Y,o[13]=p*O+m*et+g*pt+y*gt,o[2]=M*N+v*q+_*X+S*it,o[6]=M*H+v*ft+_*nt+S*k,o[10]=M*T+v*vt+_*lt+S*Y,o[14]=M*O+v*et+_*pt+S*gt,o[3]=D*N+P*q+E*X+I*it,o[7]=D*H+P*ft+E*nt+I*k,o[11]=D*T+P*vt+E*lt+I*Y,o[15]=D*O+P*et+E*pt+I*gt,this}multiplyScalar(t){let e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){let t=this.elements,e=t[0],i=t[4],a=t[8],o=t[12],u=t[1],c=t[5],d=t[9],f=t[13],p=t[2],m=t[6],g=t[10],y=t[14],M=t[3],v=t[7],_=t[11],S=t[15];return M*(+o*d*m-a*f*m-o*c*g+i*f*g+a*c*y-i*d*y)+v*(+e*d*y-e*f*g+o*u*g-a*u*y+a*f*p-o*d*p)+_*(+e*f*m-e*c*y-o*u*m+i*u*y+o*c*p-i*f*p)+S*(-a*c*p-e*d*m+e*c*g+a*u*m-i*u*g+i*d*p)}transpose(){let t=this.elements,e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){let a=this.elements;return t.isVector3?(a[12]=t.x,a[13]=t.y,a[14]=t.z):(a[12]=t,a[13]=e,a[14]=i),this}invert(){let t=this.elements,e=t[0],i=t[1],a=t[2],o=t[3],u=t[4],c=t[5],d=t[6],f=t[7],p=t[8],m=t[9],g=t[10],y=t[11],M=t[12],v=t[13],_=t[14],S=t[15],D=m*_*f-v*g*f+v*d*y-c*_*y-m*d*S+c*g*S,P=M*g*f-p*_*f-M*d*y+u*_*y+p*d*S-u*g*S,E=p*v*f-M*m*f+M*c*y-u*v*y-p*c*S+u*m*S,I=M*m*d-p*v*d-M*c*g+u*v*g+p*c*_-u*m*_,N=e*D+i*P+a*E+o*I;if(N===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);let H=1/N;return t[0]=D*H,t[1]=(v*g*o-m*_*o-v*a*y+i*_*y+m*a*S-i*g*S)*H,t[2]=(c*_*o-v*d*o+v*a*f-i*_*f-c*a*S+i*d*S)*H,t[3]=(m*d*o-c*g*o-m*a*f+i*g*f+c*a*y-i*d*y)*H,t[4]=P*H,t[5]=(p*_*o-M*g*o+M*a*y-e*_*y-p*a*S+e*g*S)*H,t[6]=(M*d*o-u*_*o-M*a*f+e*_*f+u*a*S-e*d*S)*H,t[7]=(u*g*o-p*d*o+p*a*f-e*g*f-u*a*y+e*d*y)*H,t[8]=E*H,t[9]=(M*m*o-p*v*o-M*i*y+e*v*y+p*i*S-e*m*S)*H,t[10]=(u*v*o-M*c*o+M*i*f-e*v*f-u*i*S+e*c*S)*H,t[11]=(p*c*o-u*m*o-p*i*f+e*m*f+u*i*y-e*c*y)*H,t[12]=I*H,t[13]=(p*v*a-M*m*a+M*i*g-e*v*g-p*i*_+e*m*_)*H,t[14]=(M*c*a-u*v*a-M*i*d+e*v*d+u*i*_-e*c*_)*H,t[15]=(u*m*a-p*c*a+p*i*d-e*m*d-u*i*g+e*c*g)*H,this}scale(t){let e=this.elements,i=t.x,a=t.y,o=t.z;return e[0]*=i,e[4]*=a,e[8]*=o,e[1]*=i,e[5]*=a,e[9]*=o,e[2]*=i,e[6]*=a,e[10]*=o,e[3]*=i,e[7]*=a,e[11]*=o,this}getMaxScaleOnAxis(){let t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],a=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,a))}makeTranslation(t,e,i){return this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){let e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){let e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){let e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){let i=Math.cos(e),a=Math.sin(e),o=1-i,u=t.x,c=t.y,d=t.z,f=o*u,p=o*c;return this.set(f*u+i,f*c-a*d,f*d+a*c,0,f*c+a*d,p*c+i,p*d-a*u,0,f*d-a*c,p*d+a*u,o*d*d+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,a,o,u){return this.set(1,i,o,0,t,1,u,0,e,a,1,0,0,0,0,1),this}compose(t,e,i){let a=this.elements,o=e._x,u=e._y,c=e._z,d=e._w,f=o+o,p=u+u,m=c+c,g=o*f,y=o*p,M=o*m,v=u*p,_=u*m,S=c*m,D=d*f,P=d*p,E=d*m,I=i.x,N=i.y,H=i.z;return a[0]=(1-(v+S))*I,a[1]=(y+E)*I,a[2]=(M-P)*I,a[3]=0,a[4]=(y-E)*N,a[5]=(1-(g+S))*N,a[6]=(_+D)*N,a[7]=0,a[8]=(M+P)*H,a[9]=(_-D)*H,a[10]=(1-(g+v))*H,a[11]=0,a[12]=t.x,a[13]=t.y,a[14]=t.z,a[15]=1,this}decompose(t,e,i){let a=this.elements,o=es.set(a[0],a[1],a[2]).length(),u=es.set(a[4],a[5],a[6]).length(),c=es.set(a[8],a[9],a[10]).length();this.determinant()<0&&(o=-o),t.x=a[12],t.y=a[13],t.z=a[14],Qn.copy(this);let f=1/o,p=1/u,m=1/c;return Qn.elements[0]*=f,Qn.elements[1]*=f,Qn.elements[2]*=f,Qn.elements[4]*=p,Qn.elements[5]*=p,Qn.elements[6]*=p,Qn.elements[8]*=m,Qn.elements[9]*=m,Qn.elements[10]*=m,e.setFromRotationMatrix(Qn),i.x=o,i.y=u,i.z=c,this}makePerspective(t,e,i,a,o,u){let c=this.elements,d=2*o/(e-t),f=2*o/(i-a),p=(e+t)/(e-t),m=(i+a)/(i-a),g=-(u+o)/(u-o),y=-2*u*o/(u-o);return c[0]=d,c[4]=0,c[8]=p,c[12]=0,c[1]=0,c[5]=f,c[9]=m,c[13]=0,c[2]=0,c[6]=0,c[10]=g,c[14]=y,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,i,a,o,u){let c=this.elements,d=1/(e-t),f=1/(i-a),p=1/(u-o),m=(e+t)*d,g=(i+a)*f,y=(u+o)*p;return c[0]=2*d,c[4]=0,c[8]=0,c[12]=-m,c[1]=0,c[5]=2*f,c[9]=0,c[13]=-g,c[2]=0,c[6]=0,c[10]=-2*p,c[14]=-y,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){let e=this.elements,i=t.elements;for(let a=0;a<16;a++)if(e[a]!==i[a])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){let i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}},es=new W,Qn=new Ve,lM=new W(0,0,0),cM=new W(1,1,1),$i=new W,ja=new W,An=new W,bd=new Ve,Md=new hi,Pr=class{constructor(t=0,e=0,i=0,a=Pr.DefaultOrder){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=a}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,a=this._order){return this._x=t,this._y=e,this._z=i,this._order=a,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){let a=t.elements,o=a[0],u=a[4],c=a[8],d=a[1],f=a[5],p=a[9],m=a[2],g=a[6],y=a[10];switch(e){case"XYZ":this._y=Math.asin(En(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-p,y),this._z=Math.atan2(-u,o)):(this._x=Math.atan2(g,f),this._z=0);break;case"YXZ":this._x=Math.asin(-En(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(c,y),this._z=Math.atan2(d,f)):(this._y=Math.atan2(-m,o),this._z=0);break;case"ZXY":this._x=Math.asin(En(g,-1,1)),Math.abs(g)<.9999999?(this._y=Math.atan2(-m,y),this._z=Math.atan2(-u,f)):(this._y=0,this._z=Math.atan2(d,o));break;case"ZYX":this._y=Math.asin(-En(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(g,y),this._z=Math.atan2(d,o)):(this._x=0,this._z=Math.atan2(-u,f));break;case"YZX":this._z=Math.asin(En(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(-p,f),this._y=Math.atan2(-m,o)):(this._x=0,this._y=Math.atan2(c,y));break;case"XZY":this._z=Math.asin(-En(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(g,f),this._y=Math.atan2(c,o)):(this._x=Math.atan2(-p,y),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return bd.makeRotationFromQuaternion(t),this.setFromRotationMatrix(bd,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Md.setFromEuler(this),this.setFromQuaternion(Md,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}};Pr.DefaultOrder="XYZ";Pr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var bo=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},uM=0,wd=new W,ns=new hi,Ti=new Ve,to=new W,Js=new W,hM=new W,fM=new hi,Sd=new W(1,0,0),Ad=new W(0,1,0),Td=new W(0,0,1),dM={type:"added"},Ed={type:"removed"},gn=class extends ir{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:uM++}),this.uuid=ra(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=gn.DefaultUp.clone();let t=new W,e=new Pr,i=new hi,a=new W(1,1,1);function o(){i.setFromEuler(e,!1)}function u(){e.setFromQuaternion(i,void 0,!1)}e._onChange(o),i._onChange(u),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:a},modelViewMatrix:{value:new Ve},normalMatrix:{value:new mn}}),this.matrix=new Ve,this.matrixWorld=new Ve,this.matrixAutoUpdate=gn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=gn.DefaultMatrixWorldAutoUpdate,this.layers=new bo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return ns.setFromAxisAngle(t,e),this.quaternion.multiply(ns),this}rotateOnWorldAxis(t,e){return ns.setFromAxisAngle(t,e),this.quaternion.premultiply(ns),this}rotateX(t){return this.rotateOnAxis(Sd,t)}rotateY(t){return this.rotateOnAxis(Ad,t)}rotateZ(t){return this.rotateOnAxis(Td,t)}translateOnAxis(t,e){return wd.copy(t).applyQuaternion(this.quaternion),this.position.add(wd.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Sd,t)}translateY(t){return this.translateOnAxis(Ad,t)}translateZ(t){return this.translateOnAxis(Td,t)}localToWorld(t){return t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return t.applyMatrix4(Ti.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?to.copy(t):to.set(t,e,i);let a=this.parent;this.updateWorldMatrix(!0,!1),Js.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ti.lookAt(Js,to,this.up):Ti.lookAt(to,Js,this.up),this.quaternion.setFromRotationMatrix(Ti),a&&(Ti.extractRotation(a.matrixWorld),ns.setFromRotationMatrix(Ti),this.quaternion.premultiply(ns.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(dM)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}let e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Ed)),this}removeFromParent(){let t=this.parent;return t!==null&&t.remove(this),this}clear(){for(let t=0;t<this.children.length;t++){let e=this.children[t];e.parent=null,e.dispatchEvent(Ed)}return this.children.length=0,this}attach(t){return this.updateWorldMatrix(!0,!1),Ti.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ti.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ti),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,a=this.children.length;i<a;i++){let u=this.children[i].getObjectByProperty(t,e);if(u!==void 0)return u}}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Js,t,hM),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Js,fM,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);let e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);let e=this.children;for(let i=0,a=e.length;i<a;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);let e=this.children;for(let i=0,a=e.length;i<a;i++)e[i].traverseVisible(t)}traverseAncestors(t){let e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);let e=this.children;for(let i=0,a=e.length;i<a;i++){let o=e[i];(o.matrixWorldAutoUpdate===!0||t===!0)&&o.updateMatrixWorld(t)}}updateWorldMatrix(t,e){let i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),e===!0){let a=this.children;for(let o=0,u=a.length;o<u;o++){let c=a[o];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(t){let e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});let a={};a.uuid=this.uuid,a.type=this.type,this.name!==""&&(a.name=this.name),this.castShadow===!0&&(a.castShadow=!0),this.receiveShadow===!0&&(a.receiveShadow=!0),this.visible===!1&&(a.visible=!1),this.frustumCulled===!1&&(a.frustumCulled=!1),this.renderOrder!==0&&(a.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(a.userData=this.userData),a.layers=this.layers.mask,a.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(a.matrixAutoUpdate=!1),this.isInstancedMesh&&(a.type="InstancedMesh",a.count=this.count,a.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(a.instanceColor=this.instanceColor.toJSON()));function o(c,d){return c[d.uuid]===void 0&&(c[d.uuid]=d.toJSON(t)),d.uuid}if(this.isScene)this.background&&(this.background.isColor?a.background=this.background.toJSON():this.background.isTexture&&(a.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(a.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){a.geometry=o(t.geometries,this.geometry);let c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){let d=c.shapes;if(Array.isArray(d))for(let f=0,p=d.length;f<p;f++){let m=d[f];o(t.shapes,m)}else o(t.shapes,d)}}if(this.isSkinnedMesh&&(a.bindMode=this.bindMode,a.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(o(t.skeletons,this.skeleton),a.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){let c=[];for(let d=0,f=this.material.length;d<f;d++)c.push(o(t.materials,this.material[d]));a.material=c}else a.material=o(t.materials,this.material);if(this.children.length>0){a.children=[];for(let c=0;c<this.children.length;c++)a.children.push(this.children[c].toJSON(t).object)}if(this.animations.length>0){a.animations=[];for(let c=0;c<this.animations.length;c++){let d=this.animations[c];a.animations.push(o(t.animations,d))}}if(e){let c=u(t.geometries),d=u(t.materials),f=u(t.textures),p=u(t.images),m=u(t.shapes),g=u(t.skeletons),y=u(t.animations),M=u(t.nodes);c.length>0&&(i.geometries=c),d.length>0&&(i.materials=d),f.length>0&&(i.textures=f),p.length>0&&(i.images=p),m.length>0&&(i.shapes=m),g.length>0&&(i.skeletons=g),y.length>0&&(i.animations=y),M.length>0&&(i.nodes=M)}return i.object=a,i;function u(c){let d=[];for(let f in c){let p=c[f];delete p.metadata,d.push(p)}return d}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){let a=t.children[i];this.add(a.clone())}return this}};gn.DefaultUp=new W(0,1,0);gn.DefaultMatrixAutoUpdate=!0;gn.DefaultMatrixWorldAutoUpdate=!0;var jn=new W,Ei=new W,gc=new W,Ci=new W,is=new W,rs=new W,Cd=new W,_c=new W,vc=new W,xc=new W,ni=class{constructor(t=new W,e=new W,i=new W){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,a){a.subVectors(i,e),jn.subVectors(t,e),a.cross(jn);let o=a.lengthSq();return o>0?a.multiplyScalar(1/Math.sqrt(o)):a.set(0,0,0)}static getBarycoord(t,e,i,a,o){jn.subVectors(a,e),Ei.subVectors(i,e),gc.subVectors(t,e);let u=jn.dot(jn),c=jn.dot(Ei),d=jn.dot(gc),f=Ei.dot(Ei),p=Ei.dot(gc),m=u*f-c*c;if(m===0)return o.set(-2,-1,-1);let g=1/m,y=(f*d-c*p)*g,M=(u*p-c*d)*g;return o.set(1-y-M,M,y)}static containsPoint(t,e,i,a){return this.getBarycoord(t,e,i,a,Ci),Ci.x>=0&&Ci.y>=0&&Ci.x+Ci.y<=1}static getUV(t,e,i,a,o,u,c,d){return this.getBarycoord(t,e,i,a,Ci),d.set(0,0),d.addScaledVector(o,Ci.x),d.addScaledVector(u,Ci.y),d.addScaledVector(c,Ci.z),d}static isFrontFacing(t,e,i,a){return jn.subVectors(i,e),Ei.subVectors(t,e),jn.cross(Ei).dot(a)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,a){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[a]),this}setFromAttributeAndIndices(t,e,i,a){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,a),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return jn.subVectors(this.c,this.b),Ei.subVectors(this.a,this.b),jn.cross(Ei).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return ni.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return ni.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,i,a,o){return ni.getUV(t,this.a,this.b,this.c,e,i,a,o)}containsPoint(t){return ni.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return ni.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){let i=this.a,a=this.b,o=this.c,u,c;is.subVectors(a,i),rs.subVectors(o,i),_c.subVectors(t,i);let d=is.dot(_c),f=rs.dot(_c);if(d<=0&&f<=0)return e.copy(i);vc.subVectors(t,a);let p=is.dot(vc),m=rs.dot(vc);if(p>=0&&m<=p)return e.copy(a);let g=d*m-p*f;if(g<=0&&d>=0&&p<=0)return u=d/(d-p),e.copy(i).addScaledVector(is,u);xc.subVectors(t,o);let y=is.dot(xc),M=rs.dot(xc);if(M>=0&&y<=M)return e.copy(o);let v=y*f-d*M;if(v<=0&&f>=0&&M<=0)return c=f/(f-M),e.copy(i).addScaledVector(rs,c);let _=p*M-y*m;if(_<=0&&m-p>=0&&y-M>=0)return Cd.subVectors(o,a),c=(m-p)/(m-p+(y-M)),e.copy(a).addScaledVector(Cd,c);let S=1/(_+v+g);return u=v*S,c=g*S,e.copy(i).addScaledVector(is,u).addScaledVector(rs,c)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}},pM=0,bs=class extends ir{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:pM++}),this.uuid=ra(),this.name="",this.type="Material",this.blending=ps,this.side=_s,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Qd,this.blendDst=jd,this.blendEquation=hs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Lc,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=rM,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ic,this.stencilZFail=ic,this.stencilZPass=ic,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(let e in t){let i=t[e];if(i===void 0){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}let a=this[e];if(a===void 0){console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.");continue}a&&a.isColor?a.set(i):a&&a.isVector3&&i&&i.isVector3?a.copy(i):this[e]=i}}toJSON(t){let e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});let i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==ps&&(i.blending=this.blending),this.side!==_s&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function a(o){let u=[];for(let c in o){let d=o[c];delete d.metadata,u.push(d)}return u}if(e){let o=a(t.textures),u=a(t.images);o.length>0&&(i.textures=o),u.length>0&&(i.images=u)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;let e=t.clippingPlanes,i=null;if(e!==null){let a=e.length;i=new Array(a);for(let o=0;o!==a;++o)i[o]=e[o].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}},Mo=class extends bs{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new be(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=tp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}},Fe=new W,eo=new pe,Gn=class{constructor(t,e,i){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i===!0,this.usage=gd,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let a=0,o=this.itemSize;a<o;a++)this.array[t+a]=e.array[i+a];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)eo.fromBufferAttribute(this,e),eo.applyMatrix3(t),this.setXY(e,eo.x,eo.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.applyMatrix3(t),this.setXYZ(e,Fe.x,Fe.y,Fe.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.applyMatrix4(t),this.setXYZ(e,Fe.x,Fe.y,Fe.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.applyNormalMatrix(t),this.setXYZ(e,Fe.x,Fe.y,Fe.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Fe.fromBufferAttribute(this,e),Fe.transformDirection(t),this.setXYZ(e,Fe.x,Fe.y,Fe.z);return this}set(t,e=0){return this.array.set(t,e),this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Xa(e,this.array)),e}setX(t,e){return this.normalized&&(e=Sn(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Xa(e,this.array)),e}setY(t,e){return this.normalized&&(e=Sn(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Xa(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Sn(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Xa(e,this.array)),e}setW(t,e){return this.normalized&&(e=Sn(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Sn(e,this.array),i=Sn(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,a){return t*=this.itemSize,this.normalized&&(e=Sn(e,this.array),i=Sn(i,this.array),a=Sn(a,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=a,this}setXYZW(t,e,i,a,o){return t*=this.itemSize,this.normalized&&(e=Sn(e,this.array),i=Sn(i,this.array),a=Sn(a,this.array),o=Sn(o,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=a,this.array[t+3]=o,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){let t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==gd&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}};var wo=class extends Gn{constructor(t,e,i){super(new Uint16Array(t),e,i)}};var So=class extends Gn{constructor(t,e,i){super(new Uint32Array(t),e,i)}};var Ii=class extends Gn{constructor(t,e,i){super(new Float32Array(t),e,i)}};var mM=0,Vn=new Ve,yc=new gn,ss=new W,Tn=new Cr,$s=new Cr,Ze=new W,Fi=class extends ir{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:mM++}),this.uuid=ra(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(ip(t)?So:wo)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){let e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);let i=this.attributes.normal;if(i!==void 0){let o=new mn().getNormalMatrix(t);i.applyNormalMatrix(o),i.needsUpdate=!0}let a=this.attributes.tangent;return a!==void 0&&(a.transformDirection(t),a.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Vn.makeRotationFromQuaternion(t),this.applyMatrix4(Vn),this}rotateX(t){return Vn.makeRotationX(t),this.applyMatrix4(Vn),this}rotateY(t){return Vn.makeRotationY(t),this.applyMatrix4(Vn),this}rotateZ(t){return Vn.makeRotationZ(t),this.applyMatrix4(Vn),this}translate(t,e,i){return Vn.makeTranslation(t,e,i),this.applyMatrix4(Vn),this}scale(t,e,i){return Vn.makeScale(t,e,i),this.applyMatrix4(Vn),this}lookAt(t){return yc.lookAt(t),yc.updateMatrix(),this.applyMatrix4(yc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ss).negate(),this.translate(ss.x,ss.y,ss.z),this}setFromPoints(t){let e=[];for(let i=0,a=t.length;i<a;i++){let o=t[i];e.push(o.x,o.y,o.z||0)}return this.setAttribute("position",new Ii(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Cr);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new W(-1/0,-1/0,-1/0),new W(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,a=e.length;i<a;i++){let o=e[i];Tn.setFromBufferAttribute(o),this.morphTargetsRelative?(Ze.addVectors(this.boundingBox.min,Tn.min),this.boundingBox.expandByPoint(Ze),Ze.addVectors(this.boundingBox.max,Tn.max),this.boundingBox.expandByPoint(Ze)):(this.boundingBox.expandByPoint(Tn.min),this.boundingBox.expandByPoint(Tn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ea);let t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new W,1/0);return}if(t){let i=this.boundingSphere.center;if(Tn.setFromBufferAttribute(t),e)for(let o=0,u=e.length;o<u;o++){let c=e[o];$s.setFromBufferAttribute(c),this.morphTargetsRelative?(Ze.addVectors(Tn.min,$s.min),Tn.expandByPoint(Ze),Ze.addVectors(Tn.max,$s.max),Tn.expandByPoint(Ze)):(Tn.expandByPoint($s.min),Tn.expandByPoint($s.max))}Tn.getCenter(i);let a=0;for(let o=0,u=t.count;o<u;o++)Ze.fromBufferAttribute(t,o),a=Math.max(a,i.distanceToSquared(Ze));if(e)for(let o=0,u=e.length;o<u;o++){let c=e[o],d=this.morphTargetsRelative;for(let f=0,p=c.count;f<p;f++)Ze.fromBufferAttribute(c,f),d&&(ss.fromBufferAttribute(t,f),Ze.add(ss)),a=Math.max(a,i.distanceToSquared(Ze))}this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){let t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}let i=t.array,a=e.position.array,o=e.normal.array,u=e.uv.array,c=a.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Gn(new Float32Array(4*c),4));let d=this.getAttribute("tangent").array,f=[],p=[];for(let q=0;q<c;q++)f[q]=new W,p[q]=new W;let m=new W,g=new W,y=new W,M=new pe,v=new pe,_=new pe,S=new W,D=new W;function P(q,ft,vt){m.fromArray(a,q*3),g.fromArray(a,ft*3),y.fromArray(a,vt*3),M.fromArray(u,q*2),v.fromArray(u,ft*2),_.fromArray(u,vt*2),g.sub(m),y.sub(m),v.sub(M),_.sub(M);let et=1/(v.x*_.y-_.x*v.y);!isFinite(et)||(S.copy(g).multiplyScalar(_.y).addScaledVector(y,-v.y).multiplyScalar(et),D.copy(y).multiplyScalar(v.x).addScaledVector(g,-_.x).multiplyScalar(et),f[q].add(S),f[ft].add(S),f[vt].add(S),p[q].add(D),p[ft].add(D),p[vt].add(D))}let E=this.groups;E.length===0&&(E=[{start:0,count:i.length}]);for(let q=0,ft=E.length;q<ft;++q){let vt=E[q],et=vt.start,X=vt.count;for(let nt=et,lt=et+X;nt<lt;nt+=3)P(i[nt+0],i[nt+1],i[nt+2])}let I=new W,N=new W,H=new W,T=new W;function O(q){H.fromArray(o,q*3),T.copy(H);let ft=f[q];I.copy(ft),I.sub(H.multiplyScalar(H.dot(ft))).normalize(),N.crossVectors(T,ft);let et=N.dot(p[q])<0?-1:1;d[q*4]=I.x,d[q*4+1]=I.y,d[q*4+2]=I.z,d[q*4+3]=et}for(let q=0,ft=E.length;q<ft;++q){let vt=E[q],et=vt.start,X=vt.count;for(let nt=et,lt=et+X;nt<lt;nt+=3)O(i[nt+0]),O(i[nt+1]),O(i[nt+2])}}computeVertexNormals(){let t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Gn(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let g=0,y=i.count;g<y;g++)i.setXYZ(g,0,0,0);let a=new W,o=new W,u=new W,c=new W,d=new W,f=new W,p=new W,m=new W;if(t)for(let g=0,y=t.count;g<y;g+=3){let M=t.getX(g+0),v=t.getX(g+1),_=t.getX(g+2);a.fromBufferAttribute(e,M),o.fromBufferAttribute(e,v),u.fromBufferAttribute(e,_),p.subVectors(u,o),m.subVectors(a,o),p.cross(m),c.fromBufferAttribute(i,M),d.fromBufferAttribute(i,v),f.fromBufferAttribute(i,_),c.add(p),d.add(p),f.add(p),i.setXYZ(M,c.x,c.y,c.z),i.setXYZ(v,d.x,d.y,d.z),i.setXYZ(_,f.x,f.y,f.z)}else for(let g=0,y=e.count;g<y;g+=3)a.fromBufferAttribute(e,g+0),o.fromBufferAttribute(e,g+1),u.fromBufferAttribute(e,g+2),p.subVectors(u,o),m.subVectors(a,o),p.cross(m),i.setXYZ(g+0,p.x,p.y,p.z),i.setXYZ(g+1,p.x,p.y,p.z),i.setXYZ(g+2,p.x,p.y,p.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){let t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Ze.fromBufferAttribute(t,e),Ze.normalize(),t.setXYZ(e,Ze.x,Ze.y,Ze.z)}toNonIndexed(){function t(c,d){let f=c.array,p=c.itemSize,m=c.normalized,g=new f.constructor(d.length*p),y=0,M=0;for(let v=0,_=d.length;v<_;v++){c.isInterleavedBufferAttribute?y=d[v]*c.data.stride+c.offset:y=d[v]*p;for(let S=0;S<p;S++)g[M++]=f[y++]}return new Gn(g,p,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;let e=new Fi,i=this.index.array,a=this.attributes;for(let c in a){let d=a[c],f=t(d,i);e.setAttribute(c,f)}let o=this.morphAttributes;for(let c in o){let d=[],f=o[c];for(let p=0,m=f.length;p<m;p++){let g=f[p],y=t(g,i);d.push(y)}e.morphAttributes[c]=d}e.morphTargetsRelative=this.morphTargetsRelative;let u=this.groups;for(let c=0,d=u.length;c<d;c++){let f=u[c];e.addGroup(f.start,f.count,f.materialIndex)}return e}toJSON(){let t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){let d=this.parameters;for(let f in d)d[f]!==void 0&&(t[f]=d[f]);return t}t.data={attributes:{}};let e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});let i=this.attributes;for(let d in i){let f=i[d];t.data.attributes[d]=f.toJSON(t.data)}let a={},o=!1;for(let d in this.morphAttributes){let f=this.morphAttributes[d],p=[];for(let m=0,g=f.length;m<g;m++){let y=f[m];p.push(y.toJSON(t.data))}p.length>0&&(a[d]=p,o=!0)}o&&(t.data.morphAttributes=a,t.data.morphTargetsRelative=this.morphTargetsRelative);let u=this.groups;u.length>0&&(t.data.groups=JSON.parse(JSON.stringify(u)));let c=this.boundingSphere;return c!==null&&(t.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;let e={};this.name=t.name;let i=t.index;i!==null&&this.setIndex(i.clone(e));let a=t.attributes;for(let f in a){let p=a[f];this.setAttribute(f,p.clone(e))}let o=t.morphAttributes;for(let f in o){let p=[],m=o[f];for(let g=0,y=m.length;g<y;g++)p.push(m[g].clone(e));this.morphAttributes[f]=p}this.morphTargetsRelative=t.morphTargetsRelative;let u=t.groups;for(let f=0,p=u.length;f<p;f++){let m=u[f];this.addGroup(m.start,m.count,m.materialIndex)}let c=t.boundingBox;c!==null&&(this.boundingBox=c.clone());let d=t.boundingSphere;return d!==null&&(this.boundingSphere=d.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,t.parameters!==void 0&&(this.parameters=Object.assign({},t.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}},Pd=new Ve,as=new Uc,bc=new ea,Ki=new W,Qi=new W,ji=new W,Mc=new W,wc=new W,Sc=new W,no=new W,io=new W,ro=new W,so=new pe,ao=new pe,oo=new pe,Ac=new W,lo=new W,ui=class extends gn{constructor(t=new Fi,e=new Mo){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this}updateMorphTargets(){let e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){let a=e[i[0]];if(a!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let o=0,u=a.length;o<u;o++){let c=a[o].name||String(o);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=o}}}}raycast(t,e){let i=this.geometry,a=this.material,o=this.matrixWorld;if(a===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),bc.copy(i.boundingSphere),bc.applyMatrix4(o),t.ray.intersectsSphere(bc)===!1)||(Pd.copy(o).invert(),as.copy(t.ray).applyMatrix4(Pd),i.boundingBox!==null&&as.intersectsBox(i.boundingBox)===!1))return;let u,c=i.index,d=i.attributes.position,f=i.morphAttributes.position,p=i.morphTargetsRelative,m=i.attributes.uv,g=i.attributes.uv2,y=i.groups,M=i.drawRange;if(c!==null)if(Array.isArray(a))for(let v=0,_=y.length;v<_;v++){let S=y[v],D=a[S.materialIndex],P=Math.max(S.start,M.start),E=Math.min(c.count,Math.min(S.start+S.count,M.start+M.count));for(let I=P,N=E;I<N;I+=3){let H=c.getX(I),T=c.getX(I+1),O=c.getX(I+2);u=co(this,D,t,as,d,f,p,m,g,H,T,O),u&&(u.faceIndex=Math.floor(I/3),u.face.materialIndex=S.materialIndex,e.push(u))}}else{let v=Math.max(0,M.start),_=Math.min(c.count,M.start+M.count);for(let S=v,D=_;S<D;S+=3){let P=c.getX(S),E=c.getX(S+1),I=c.getX(S+2);u=co(this,a,t,as,d,f,p,m,g,P,E,I),u&&(u.faceIndex=Math.floor(S/3),e.push(u))}}else if(d!==void 0)if(Array.isArray(a))for(let v=0,_=y.length;v<_;v++){let S=y[v],D=a[S.materialIndex],P=Math.max(S.start,M.start),E=Math.min(d.count,Math.min(S.start+S.count,M.start+M.count));for(let I=P,N=E;I<N;I+=3){let H=I,T=I+1,O=I+2;u=co(this,D,t,as,d,f,p,m,g,H,T,O),u&&(u.faceIndex=Math.floor(I/3),u.face.materialIndex=S.materialIndex,e.push(u))}}else{let v=Math.max(0,M.start),_=Math.min(d.count,M.start+M.count);for(let S=v,D=_;S<D;S+=3){let P=S,E=S+1,I=S+2;u=co(this,a,t,as,d,f,p,m,g,P,E,I),u&&(u.faceIndex=Math.floor(S/3),e.push(u))}}}};function gM(s,t,e,i,a,o,u,c){let d;if(t.side===Hn?d=i.intersectTriangle(u,o,a,!0,c):d=i.intersectTriangle(a,o,u,t.side!==er,c),d===null)return null;lo.copy(c),lo.applyMatrix4(s.matrixWorld);let f=e.ray.origin.distanceTo(lo);return f<e.near||f>e.far?null:{distance:f,point:lo.clone(),object:s}}function co(s,t,e,i,a,o,u,c,d,f,p,m){Ki.fromBufferAttribute(a,f),Qi.fromBufferAttribute(a,p),ji.fromBufferAttribute(a,m);let g=s.morphTargetInfluences;if(o&&g){no.set(0,0,0),io.set(0,0,0),ro.set(0,0,0);for(let M=0,v=o.length;M<v;M++){let _=g[M],S=o[M];_!==0&&(Mc.fromBufferAttribute(S,f),wc.fromBufferAttribute(S,p),Sc.fromBufferAttribute(S,m),u?(no.addScaledVector(Mc,_),io.addScaledVector(wc,_),ro.addScaledVector(Sc,_)):(no.addScaledVector(Mc.sub(Ki),_),io.addScaledVector(wc.sub(Qi),_),ro.addScaledVector(Sc.sub(ji),_)))}Ki.add(no),Qi.add(io),ji.add(ro)}s.isSkinnedMesh&&(s.boneTransform(f,Ki),s.boneTransform(p,Qi),s.boneTransform(m,ji));let y=gM(s,t,e,i,Ki,Qi,ji,Ac);if(y){c&&(so.fromBufferAttribute(c,f),ao.fromBufferAttribute(c,p),oo.fromBufferAttribute(c,m),y.uv=ni.getUV(Ac,Ki,Qi,ji,so,ao,oo,new pe)),d&&(so.fromBufferAttribute(d,f),ao.fromBufferAttribute(d,p),oo.fromBufferAttribute(d,m),y.uv2=ni.getUV(Ac,Ki,Qi,ji,so,ao,oo,new pe));let M={a:f,b:p,c:m,normal:new W,materialIndex:0};ni.getNormal(Ki,Qi,ji,M.normal),y.face=M}return y}var Lr=class extends Fi{constructor(t=1,e=1,i=1,a=1,o=1,u=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:a,heightSegments:o,depthSegments:u};let c=this;a=Math.floor(a),o=Math.floor(o),u=Math.floor(u);let d=[],f=[],p=[],m=[],g=0,y=0;M("z","y","x",-1,-1,i,e,t,u,o,0),M("z","y","x",1,-1,i,e,-t,u,o,1),M("x","z","y",1,1,t,i,e,a,u,2),M("x","z","y",1,-1,t,i,-e,a,u,3),M("x","y","z",1,-1,t,e,i,a,o,4),M("x","y","z",-1,-1,t,e,-i,a,o,5),this.setIndex(d),this.setAttribute("position",new Ii(f,3)),this.setAttribute("normal",new Ii(p,3)),this.setAttribute("uv",new Ii(m,2));function M(v,_,S,D,P,E,I,N,H,T,O){let q=E/H,ft=I/T,vt=E/2,et=I/2,X=N/2,nt=H+1,lt=T+1,pt=0,it=0,k=new W;for(let Y=0;Y<lt;Y++){let gt=Y*ft-et;for(let ct=0;ct<nt;ct++){let mt=ct*q-vt;k[v]=mt*D,k[_]=gt*P,k[S]=X,f.push(k.x,k.y,k.z),k[v]=0,k[_]=0,k[S]=N>0?1:-1,p.push(k.x,k.y,k.z),m.push(ct/H),m.push(1-Y/T),pt+=1}}for(let Y=0;Y<T;Y++)for(let gt=0;gt<H;gt++){let ct=g+gt+nt*Y,mt=g+gt+nt*(Y+1),At=g+(gt+1)+nt*(Y+1),Ht=g+(gt+1)+nt*Y;d.push(ct,mt,Ht),d.push(mt,At,Ht),it+=6}c.addGroup(y,it,O),y+=it,g+=pt}}static fromJSON(t){return new Lr(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}};function Ms(s){let t={};for(let e in s){t[e]={};for(let i in s[e]){let a=s[e][i];a&&(a.isColor||a.isMatrix3||a.isMatrix4||a.isVector2||a.isVector3||a.isVector4||a.isTexture||a.isQuaternion)?t[e][i]=a.clone():Array.isArray(a)?t[e][i]=a.slice():t[e][i]=a}}return t}function on(s){let t={};for(let e=0;e<s.length;e++){let i=Ms(s[e]);for(let a in i)t[a]=i[a]}return t}function _M(s){let t=[];for(let e=0;e<s.length;e++)t.push(s[e].clone());return t}var vM={clone:Ms,merge:on},xM=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,yM=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,Oi=class extends bs{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=xM,this.fragmentShader=yM,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ms(t.uniforms),this.uniformsGroups=_M(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){let e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(let a in this.uniforms){let u=this.uniforms[a].value;u&&u.isTexture?e.uniforms[a]={type:"t",value:u.toJSON(t).uuid}:u&&u.isColor?e.uniforms[a]={type:"c",value:u.getHex()}:u&&u.isVector2?e.uniforms[a]={type:"v2",value:u.toArray()}:u&&u.isVector3?e.uniforms[a]={type:"v3",value:u.toArray()}:u&&u.isVector4?e.uniforms[a]={type:"v4",value:u.toArray()}:u&&u.isMatrix3?e.uniforms[a]={type:"m3",value:u.toArray()}:u&&u.isMatrix4?e.uniforms[a]={type:"m4",value:u.toArray()}:e.uniforms[a]={value:u}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;let i={};for(let a in this.extensions)this.extensions[a]===!0&&(i[a]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}},Ao=class extends gn{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ve,this.projectionMatrix=new Ve,this.projectionMatrixInverse=new Ve}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);let e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},Cn=class extends Ao{constructor(t=50,e=1,i=.1,a=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=a,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){let e=.5*this.getFilmHeight()/t;this.fov=vd*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){let t=Math.tan(rc*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return vd*2*Math.atan(Math.tan(rc*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,e,i,a,o,u){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=a,this.view.width=o,this.view.height=u,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let t=this.near,e=t*Math.tan(rc*.5*this.fov)/this.zoom,i=2*e,a=this.aspect*i,o=-.5*a,u=this.view;if(this.view!==null&&this.view.enabled){let d=u.fullWidth,f=u.fullHeight;o+=u.offsetX*a/d,e-=u.offsetY*i/f,a*=u.width/d,i*=u.height/f}let c=this.filmOffset;c!==0&&(o+=t*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(o,o+a,e,e-i,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){let e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}},os=90,ls=1,Bc=class extends gn{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i;let a=new Cn(os,ls,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new W(1,0,0)),this.add(a);let o=new Cn(os,ls,t,e);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new W(-1,0,0)),this.add(o);let u=new Cn(os,ls,t,e);u.layers=this.layers,u.up.set(0,0,1),u.lookAt(new W(0,1,0)),this.add(u);let c=new Cn(os,ls,t,e);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new W(0,-1,0)),this.add(c);let d=new Cn(os,ls,t,e);d.layers=this.layers,d.up.set(0,-1,0),d.lookAt(new W(0,0,1)),this.add(d);let f=new Cn(os,ls,t,e);f.layers=this.layers,f.up.set(0,-1,0),f.lookAt(new W(0,0,-1)),this.add(f)}update(t,e){this.parent===null&&this.updateMatrixWorld();let i=this.renderTarget,[a,o,u,c,d,f]=this.children,p=t.getRenderTarget(),m=t.toneMapping,g=t.xr.enabled;t.toneMapping=Ri,t.xr.enabled=!1;let y=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(e,a),t.setRenderTarget(i,1),t.render(e,o),t.setRenderTarget(i,2),t.render(e,u),t.setRenderTarget(i,3),t.render(e,c),t.setRenderTarget(i,4),t.render(e,d),i.texture.generateMipmaps=y,t.setRenderTarget(i,5),t.render(e,f),t.setRenderTarget(p),t.toneMapping=m,t.xr.enabled=g,i.texture.needsPMREMUpdate=!0}},To=class extends Pn{constructor(t,e,i,a,o,u,c,d,f,p){t=t!==void 0?t:[],e=e!==void 0?e:vs,super(t,e,i,a,o,u,c,d,f,p),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}},kc=class extends Di{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;let i={width:t,height:t,depth:1},a=[i,i,i,i,i,i];this.texture=new To(a,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Wn}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;let i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},a=new Lr(5,5,5),o=new Oi({name:"CubemapFromEquirect",uniforms:Ms(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Hn,blending:nr});o.uniforms.tEquirect.value=e;let u=new ui(a,o),c=e.minFilter;return e.minFilter===Lo&&(e.minFilter=Wn),new Bc(1,10,this).update(t,u),e.minFilter=c,u.geometry.dispose(),u.material.dispose(),this}clear(t,e,i,a){let o=t.getRenderTarget();for(let u=0;u<6;u++)t.setRenderTarget(this,u),t.clear(e,i,a);t.setRenderTarget(o)}},Tc=new W,bM=new W,MM=new mn,Li=class{constructor(t=new W(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,a){return this.normal.set(t,e,i),this.constant=a,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){let a=Tc.subVectors(i,e).cross(bM.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(a,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){let t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){let i=t.delta(Tc),a=this.normal.dot(i);if(a===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;let o=-(t.start.dot(this.normal)+this.constant)/a;return o<0||o>1?null:e.copy(i).multiplyScalar(o).add(t.start)}intersectsLine(t){let e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){let i=e||MM.getNormalMatrix(t),a=this.coplanarPoint(Tc).applyMatrix4(t),o=this.normal.applyMatrix3(i).normalize();return this.constant=-a.dot(o),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}},cs=new ea,uo=new W,Eo=class{constructor(t=new Li,e=new Li,i=new Li,a=new Li,o=new Li,u=new Li){this.planes=[t,e,i,a,o,u]}set(t,e,i,a,o,u){let c=this.planes;return c[0].copy(t),c[1].copy(e),c[2].copy(i),c[3].copy(a),c[4].copy(o),c[5].copy(u),this}copy(t){let e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t){let e=this.planes,i=t.elements,a=i[0],o=i[1],u=i[2],c=i[3],d=i[4],f=i[5],p=i[6],m=i[7],g=i[8],y=i[9],M=i[10],v=i[11],_=i[12],S=i[13],D=i[14],P=i[15];return e[0].setComponents(c-a,m-d,v-g,P-_).normalize(),e[1].setComponents(c+a,m+d,v+g,P+_).normalize(),e[2].setComponents(c+o,m+f,v+y,P+S).normalize(),e[3].setComponents(c-o,m-f,v-y,P-S).normalize(),e[4].setComponents(c-u,m-p,v-M,P-D).normalize(),e[5].setComponents(c+u,m+p,v+M,P+D).normalize(),this}intersectsObject(t){let e=t.geometry;return e.boundingSphere===null&&e.computeBoundingSphere(),cs.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere(cs)}intersectsSprite(t){return cs.center.set(0,0,0),cs.radius=.7071067811865476,cs.applyMatrix4(t.matrixWorld),this.intersectsSphere(cs)}intersectsSphere(t){let e=this.planes,i=t.center,a=-t.radius;for(let o=0;o<6;o++)if(e[o].distanceToPoint(i)<a)return!1;return!0}intersectsBox(t){let e=this.planes;for(let i=0;i<6;i++){let a=e[i];if(uo.x=a.normal.x>0?t.max.x:t.min.x,uo.y=a.normal.y>0?t.max.y:t.min.y,uo.z=a.normal.z>0?t.max.z:t.min.z,a.distanceToPoint(uo)<0)return!1}return!0}containsPoint(t){let e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function sp(){let s=null,t=!1,e=null,i=null;function a(o,u){e(o,u),i=s.requestAnimationFrame(a)}return{start:function(){t!==!0&&e!==null&&(i=s.requestAnimationFrame(a),t=!0)},stop:function(){s.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(o){e=o},setContext:function(o){s=o}}}function wM(s,t){let e=t.isWebGL2,i=new WeakMap;function a(f,p){let m=f.array,g=f.usage,y=s.createBuffer();s.bindBuffer(p,y),s.bufferData(p,m,g),f.onUploadCallback();let M;if(m instanceof Float32Array)M=5126;else if(m instanceof Uint16Array)if(f.isFloat16BufferAttribute)if(e)M=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else M=5123;else if(m instanceof Int16Array)M=5122;else if(m instanceof Uint32Array)M=5125;else if(m instanceof Int32Array)M=5124;else if(m instanceof Int8Array)M=5120;else if(m instanceof Uint8Array)M=5121;else if(m instanceof Uint8ClampedArray)M=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:y,type:M,bytesPerElement:m.BYTES_PER_ELEMENT,version:f.version}}function o(f,p,m){let g=p.array,y=p.updateRange;s.bindBuffer(m,f),y.count===-1?s.bufferSubData(m,0,g):(e?s.bufferSubData(m,y.offset*g.BYTES_PER_ELEMENT,g,y.offset,y.count):s.bufferSubData(m,y.offset*g.BYTES_PER_ELEMENT,g.subarray(y.offset,y.offset+y.count)),y.count=-1)}function u(f){return f.isInterleavedBufferAttribute&&(f=f.data),i.get(f)}function c(f){f.isInterleavedBufferAttribute&&(f=f.data);let p=i.get(f);p&&(s.deleteBuffer(p.buffer),i.delete(f))}function d(f,p){if(f.isGLBufferAttribute){let g=i.get(f);(!g||g.version<f.version)&&i.set(f,{buffer:f.buffer,type:f.type,bytesPerElement:f.elementSize,version:f.version});return}f.isInterleavedBufferAttribute&&(f=f.data);let m=i.get(f);m===void 0?i.set(f,a(f,p)):m.version<f.version&&(o(m.buffer,f,p),m.version=f.version)}return{get:u,remove:c,update:d}}var na=class extends Fi{constructor(t=1,e=1,i=1,a=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:a};let o=t/2,u=e/2,c=Math.floor(i),d=Math.floor(a),f=c+1,p=d+1,m=t/c,g=e/d,y=[],M=[],v=[],_=[];for(let S=0;S<p;S++){let D=S*g-u;for(let P=0;P<f;P++){let E=P*m-o;M.push(E,-D,0),v.push(0,0,1),_.push(P/c),_.push(1-S/d)}}for(let S=0;S<d;S++)for(let D=0;D<c;D++){let P=D+f*S,E=D+f*(S+1),I=D+1+f*(S+1),N=D+1+f*S;y.push(P,E,N),y.push(E,I,N)}this.setIndex(y),this.setAttribute("position",new Ii(M,3)),this.setAttribute("normal",new Ii(v,3)),this.setAttribute("uv",new Ii(_,2))}static fromJSON(t){return new na(t.width,t.height,t.widthSegments,t.heightSegments)}},SM=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,AM=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,TM=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,EM=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,CM=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,PM=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,LM="vec3 transformed = vec3( position );",RM=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,IM=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,DM=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,FM=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,OM=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,NM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,zM=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,UM=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,BM=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,kM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,VM=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,WM=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,HM=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,GM=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,qM=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,XM=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,YM=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,ZM=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,JM=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,$M="gl_FragColor = linearToOutputTexel( gl_FragColor );",KM=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,QM=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,jM=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,tw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,ew=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,nw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,iw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,rw=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,sw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,aw=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,ow=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,lw=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,cw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,uw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,hw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,fw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,dw=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,pw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,mw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,gw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,_w=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,vw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,xw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,yw=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,bw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Mw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,ww=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Sw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,Aw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Tw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Ew=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Cw=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,Pw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Lw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Rw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Iw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Dw=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Fw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,Ow=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,Nw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,zw=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,Uw=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,Bw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,kw=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,Vw=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,Ww=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,Hw=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Gw=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,qw=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,Xw=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,Yw=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Zw=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Jw=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,$w=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Kw=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Qw=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,jw=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,t1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,e1=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,n1=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,i1=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,r1=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,s1=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,a1=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,o1=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,l1=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,c1=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,u1=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,h1=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,f1=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,d1=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,p1=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,m1=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,g1=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,_1=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,v1=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,x1=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,y1=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,b1=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`,M1=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,w1=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,S1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,A1=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,T1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,E1=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,C1=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,P1=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,L1=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,R1=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,I1=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,D1=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,F1=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,O1=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,N1=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,z1=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,U1=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,B1=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,k1=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,V1=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,W1=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,H1=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,G1=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,q1=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,X1=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Y1=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Z1=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,J1=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$1=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,K1=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Q1=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,j1=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,tS=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,eS=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Qt={alphamap_fragment:SM,alphamap_pars_fragment:AM,alphatest_fragment:TM,alphatest_pars_fragment:EM,aomap_fragment:CM,aomap_pars_fragment:PM,begin_vertex:LM,beginnormal_vertex:RM,bsdfs:IM,iridescence_fragment:DM,bumpmap_pars_fragment:FM,clipping_planes_fragment:OM,clipping_planes_pars_fragment:NM,clipping_planes_pars_vertex:zM,clipping_planes_vertex:UM,color_fragment:BM,color_pars_fragment:kM,color_pars_vertex:VM,color_vertex:WM,common:HM,cube_uv_reflection_fragment:GM,defaultnormal_vertex:qM,displacementmap_pars_vertex:XM,displacementmap_vertex:YM,emissivemap_fragment:ZM,emissivemap_pars_fragment:JM,encodings_fragment:$M,encodings_pars_fragment:KM,envmap_fragment:QM,envmap_common_pars_fragment:jM,envmap_pars_fragment:tw,envmap_pars_vertex:ew,envmap_physical_pars_fragment:dw,envmap_vertex:nw,fog_vertex:iw,fog_pars_vertex:rw,fog_fragment:sw,fog_pars_fragment:aw,gradientmap_pars_fragment:ow,lightmap_fragment:lw,lightmap_pars_fragment:cw,lights_lambert_fragment:uw,lights_lambert_pars_fragment:hw,lights_pars_begin:fw,lights_toon_fragment:pw,lights_toon_pars_fragment:mw,lights_phong_fragment:gw,lights_phong_pars_fragment:_w,lights_physical_fragment:vw,lights_physical_pars_fragment:xw,lights_fragment_begin:yw,lights_fragment_maps:bw,lights_fragment_end:Mw,logdepthbuf_fragment:ww,logdepthbuf_pars_fragment:Sw,logdepthbuf_pars_vertex:Aw,logdepthbuf_vertex:Tw,map_fragment:Ew,map_pars_fragment:Cw,map_particle_fragment:Pw,map_particle_pars_fragment:Lw,metalnessmap_fragment:Rw,metalnessmap_pars_fragment:Iw,morphcolor_vertex:Dw,morphnormal_vertex:Fw,morphtarget_pars_vertex:Ow,morphtarget_vertex:Nw,normal_fragment_begin:zw,normal_fragment_maps:Uw,normal_pars_fragment:Bw,normal_pars_vertex:kw,normal_vertex:Vw,normalmap_pars_fragment:Ww,clearcoat_normal_fragment_begin:Hw,clearcoat_normal_fragment_maps:Gw,clearcoat_pars_fragment:qw,iridescence_pars_fragment:Xw,output_fragment:Yw,packing:Zw,premultiplied_alpha_fragment:Jw,project_vertex:$w,dithering_fragment:Kw,dithering_pars_fragment:Qw,roughnessmap_fragment:jw,roughnessmap_pars_fragment:t1,shadowmap_pars_fragment:e1,shadowmap_pars_vertex:n1,shadowmap_vertex:i1,shadowmask_pars_fragment:r1,skinbase_vertex:s1,skinning_pars_vertex:a1,skinning_vertex:o1,skinnormal_vertex:l1,specularmap_fragment:c1,specularmap_pars_fragment:u1,tonemapping_fragment:h1,tonemapping_pars_fragment:f1,transmission_fragment:d1,transmission_pars_fragment:p1,uv_pars_fragment:m1,uv_pars_vertex:g1,uv_vertex:_1,uv2_pars_fragment:v1,uv2_pars_vertex:x1,uv2_vertex:y1,worldpos_vertex:b1,background_vert:M1,background_frag:w1,backgroundCube_vert:S1,backgroundCube_frag:A1,cube_vert:T1,cube_frag:E1,depth_vert:C1,depth_frag:P1,distanceRGBA_vert:L1,distanceRGBA_frag:R1,equirect_vert:I1,equirect_frag:D1,linedashed_vert:F1,linedashed_frag:O1,meshbasic_vert:N1,meshbasic_frag:z1,meshlambert_vert:U1,meshlambert_frag:B1,meshmatcap_vert:k1,meshmatcap_frag:V1,meshnormal_vert:W1,meshnormal_frag:H1,meshphong_vert:G1,meshphong_frag:q1,meshphysical_vert:X1,meshphysical_frag:Y1,meshtoon_vert:Z1,meshtoon_frag:J1,points_vert:$1,points_frag:K1,shadow_vert:Q1,shadow_frag:j1,sprite_vert:tS,sprite_frag:eS},_t={common:{diffuse:{value:new be(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new mn},uv2Transform:{value:new mn},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new pe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new be(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new be(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new mn}},sprite:{diffuse:{value:new be(16777215)},opacity:{value:1},center:{value:new pe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new mn}}},ci={basic:{uniforms:on([_t.common,_t.specularmap,_t.envmap,_t.aomap,_t.lightmap,_t.fog]),vertexShader:Qt.meshbasic_vert,fragmentShader:Qt.meshbasic_frag},lambert:{uniforms:on([_t.common,_t.specularmap,_t.envmap,_t.aomap,_t.lightmap,_t.emissivemap,_t.bumpmap,_t.normalmap,_t.displacementmap,_t.fog,_t.lights,{emissive:{value:new be(0)}}]),vertexShader:Qt.meshlambert_vert,fragmentShader:Qt.meshlambert_frag},phong:{uniforms:on([_t.common,_t.specularmap,_t.envmap,_t.aomap,_t.lightmap,_t.emissivemap,_t.bumpmap,_t.normalmap,_t.displacementmap,_t.fog,_t.lights,{emissive:{value:new be(0)},specular:{value:new be(1118481)},shininess:{value:30}}]),vertexShader:Qt.meshphong_vert,fragmentShader:Qt.meshphong_frag},standard:{uniforms:on([_t.common,_t.envmap,_t.aomap,_t.lightmap,_t.emissivemap,_t.bumpmap,_t.normalmap,_t.displacementmap,_t.roughnessmap,_t.metalnessmap,_t.fog,_t.lights,{emissive:{value:new be(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Qt.meshphysical_vert,fragmentShader:Qt.meshphysical_frag},toon:{uniforms:on([_t.common,_t.aomap,_t.lightmap,_t.emissivemap,_t.bumpmap,_t.normalmap,_t.displacementmap,_t.gradientmap,_t.fog,_t.lights,{emissive:{value:new be(0)}}]),vertexShader:Qt.meshtoon_vert,fragmentShader:Qt.meshtoon_frag},matcap:{uniforms:on([_t.common,_t.bumpmap,_t.normalmap,_t.displacementmap,_t.fog,{matcap:{value:null}}]),vertexShader:Qt.meshmatcap_vert,fragmentShader:Qt.meshmatcap_frag},points:{uniforms:on([_t.points,_t.fog]),vertexShader:Qt.points_vert,fragmentShader:Qt.points_frag},dashed:{uniforms:on([_t.common,_t.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Qt.linedashed_vert,fragmentShader:Qt.linedashed_frag},depth:{uniforms:on([_t.common,_t.displacementmap]),vertexShader:Qt.depth_vert,fragmentShader:Qt.depth_frag},normal:{uniforms:on([_t.common,_t.bumpmap,_t.normalmap,_t.displacementmap,{opacity:{value:1}}]),vertexShader:Qt.meshnormal_vert,fragmentShader:Qt.meshnormal_frag},sprite:{uniforms:on([_t.sprite,_t.fog]),vertexShader:Qt.sprite_vert,fragmentShader:Qt.sprite_frag},background:{uniforms:{uvTransform:{value:new mn},t2D:{value:null}},vertexShader:Qt.background_vert,fragmentShader:Qt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:Qt.backgroundCube_vert,fragmentShader:Qt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Qt.cube_vert,fragmentShader:Qt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Qt.equirect_vert,fragmentShader:Qt.equirect_frag},distanceRGBA:{uniforms:on([_t.common,_t.displacementmap,{referencePosition:{value:new W},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Qt.distanceRGBA_vert,fragmentShader:Qt.distanceRGBA_frag},shadow:{uniforms:on([_t.lights,_t.fog,{color:{value:new be(0)},opacity:{value:1}}]),vertexShader:Qt.shadow_vert,fragmentShader:Qt.shadow_frag}};ci.physical={uniforms:on([ci.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new pe(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new be(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new pe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new be(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new be(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Qt.meshphysical_vert,fragmentShader:Qt.meshphysical_frag};function nS(s,t,e,i,a,o,u){let c=new be(0),d=o===!0?0:1,f,p,m=null,g=0,y=null;function M(_,S){let D=!1,P=S.isScene===!0?S.background:null;P&&P.isTexture&&(P=(S.backgroundBlurriness>0?e:t).get(P));let E=s.xr,I=E.getSession&&E.getSession();I&&I.environmentBlendMode==="additive"&&(P=null),P===null?v(c,d):P&&P.isColor&&(v(P,1),D=!0),(s.autoClear||D)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),P&&(P.isCubeTexture||P.mapping===Po)?(p===void 0&&(p=new ui(new Lr(1,1,1),new Oi({name:"BackgroundCubeMaterial",uniforms:Ms(ci.backgroundCube.uniforms),vertexShader:ci.backgroundCube.vertexShader,fragmentShader:ci.backgroundCube.fragmentShader,side:Hn,depthTest:!1,depthWrite:!1,fog:!1})),p.geometry.deleteAttribute("normal"),p.geometry.deleteAttribute("uv"),p.onBeforeRender=function(N,H,T){this.matrixWorld.copyPosition(T.matrixWorld)},Object.defineProperty(p.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),a.update(p)),p.material.uniforms.envMap.value=P,p.material.uniforms.flipEnvMap.value=P.isCubeTexture&&P.isRenderTargetTexture===!1?-1:1,p.material.uniforms.backgroundBlurriness.value=S.backgroundBlurriness,(m!==P||g!==P.version||y!==s.toneMapping)&&(p.material.needsUpdate=!0,m=P,g=P.version,y=s.toneMapping),p.layers.enableAll(),_.unshift(p,p.geometry,p.material,0,0,null)):P&&P.isTexture&&(f===void 0&&(f=new ui(new na(2,2),new Oi({name:"BackgroundMaterial",uniforms:Ms(ci.background.uniforms),vertexShader:ci.background.vertexShader,fragmentShader:ci.background.fragmentShader,side:_s,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),Object.defineProperty(f.material,"map",{get:function(){return this.uniforms.t2D.value}}),a.update(f)),f.material.uniforms.t2D.value=P,P.matrixAutoUpdate===!0&&P.updateMatrix(),f.material.uniforms.uvTransform.value.copy(P.matrix),(m!==P||g!==P.version||y!==s.toneMapping)&&(f.material.needsUpdate=!0,m=P,g=P.version,y=s.toneMapping),f.layers.enableAll(),_.unshift(f,f.geometry,f.material,0,0,null))}function v(_,S){i.buffers.color.setClear(_.r,_.g,_.b,S,u)}return{getClearColor:function(){return c},setClearColor:function(_,S=1){c.set(_),d=S,v(c,d)},getClearAlpha:function(){return d},setClearAlpha:function(_){d=_,v(c,d)},render:M}}function iS(s,t,e,i){let a=s.getParameter(34921),o=i.isWebGL2?null:t.get("OES_vertex_array_object"),u=i.isWebGL2||o!==null,c={},d=_(null),f=d,p=!1;function m(X,nt,lt,pt,it){let k=!1;if(u){let Y=v(pt,lt,nt);f!==Y&&(f=Y,y(f.object)),k=S(X,pt,lt,it),k&&D(X,pt,lt,it)}else{let Y=nt.wireframe===!0;(f.geometry!==pt.id||f.program!==lt.id||f.wireframe!==Y)&&(f.geometry=pt.id,f.program=lt.id,f.wireframe=Y,k=!0)}it!==null&&e.update(it,34963),(k||p)&&(p=!1,T(X,nt,lt,pt),it!==null&&s.bindBuffer(34963,e.get(it).buffer))}function g(){return i.isWebGL2?s.createVertexArray():o.createVertexArrayOES()}function y(X){return i.isWebGL2?s.bindVertexArray(X):o.bindVertexArrayOES(X)}function M(X){return i.isWebGL2?s.deleteVertexArray(X):o.deleteVertexArrayOES(X)}function v(X,nt,lt){let pt=lt.wireframe===!0,it=c[X.id];it===void 0&&(it={},c[X.id]=it);let k=it[nt.id];k===void 0&&(k={},it[nt.id]=k);let Y=k[pt];return Y===void 0&&(Y=_(g()),k[pt]=Y),Y}function _(X){let nt=[],lt=[],pt=[];for(let it=0;it<a;it++)nt[it]=0,lt[it]=0,pt[it]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:nt,enabledAttributes:lt,attributeDivisors:pt,object:X,attributes:{},index:null}}function S(X,nt,lt,pt){let it=f.attributes,k=nt.attributes,Y=0,gt=lt.getAttributes();for(let ct in gt)if(gt[ct].location>=0){let At=it[ct],Ht=k[ct];if(Ht===void 0&&(ct==="instanceMatrix"&&X.instanceMatrix&&(Ht=X.instanceMatrix),ct==="instanceColor"&&X.instanceColor&&(Ht=X.instanceColor)),At===void 0||At.attribute!==Ht||Ht&&At.data!==Ht.data)return!0;Y++}return f.attributesNum!==Y||f.index!==pt}function D(X,nt,lt,pt){let it={},k=nt.attributes,Y=0,gt=lt.getAttributes();for(let ct in gt)if(gt[ct].location>=0){let At=k[ct];At===void 0&&(ct==="instanceMatrix"&&X.instanceMatrix&&(At=X.instanceMatrix),ct==="instanceColor"&&X.instanceColor&&(At=X.instanceColor));let Ht={};Ht.attribute=At,At&&At.data&&(Ht.data=At.data),it[ct]=Ht,Y++}f.attributes=it,f.attributesNum=Y,f.index=pt}function P(){let X=f.newAttributes;for(let nt=0,lt=X.length;nt<lt;nt++)X[nt]=0}function E(X){I(X,0)}function I(X,nt){let lt=f.newAttributes,pt=f.enabledAttributes,it=f.attributeDivisors;lt[X]=1,pt[X]===0&&(s.enableVertexAttribArray(X),pt[X]=1),it[X]!==nt&&((i.isWebGL2?s:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](X,nt),it[X]=nt)}function N(){let X=f.newAttributes,nt=f.enabledAttributes;for(let lt=0,pt=nt.length;lt<pt;lt++)nt[lt]!==X[lt]&&(s.disableVertexAttribArray(lt),nt[lt]=0)}function H(X,nt,lt,pt,it,k){i.isWebGL2===!0&&(lt===5124||lt===5125)?s.vertexAttribIPointer(X,nt,lt,it,k):s.vertexAttribPointer(X,nt,lt,pt,it,k)}function T(X,nt,lt,pt){if(i.isWebGL2===!1&&(X.isInstancedMesh||pt.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;P();let it=pt.attributes,k=lt.getAttributes(),Y=nt.defaultAttributeValues;for(let gt in k){let ct=k[gt];if(ct.location>=0){let mt=it[gt];if(mt===void 0&&(gt==="instanceMatrix"&&X.instanceMatrix&&(mt=X.instanceMatrix),gt==="instanceColor"&&X.instanceColor&&(mt=X.instanceColor)),mt!==void 0){let At=mt.normalized,Ht=mt.itemSize,rt=e.get(mt);if(rt===void 0)continue;let re=rt.buffer,Vt=rt.type,Bt=rt.bytesPerElement;if(mt.isInterleavedBufferAttribute){let St=mt.data,fe=St.stride,Ut=mt.offset;if(St.isInstancedInterleavedBuffer){for(let Lt=0;Lt<ct.locationSize;Lt++)I(ct.location+Lt,St.meshPerAttribute);X.isInstancedMesh!==!0&&pt._maxInstanceCount===void 0&&(pt._maxInstanceCount=St.meshPerAttribute*St.count)}else for(let Lt=0;Lt<ct.locationSize;Lt++)E(ct.location+Lt);s.bindBuffer(34962,re);for(let Lt=0;Lt<ct.locationSize;Lt++)H(ct.location+Lt,Ht/ct.locationSize,Vt,At,fe*Bt,(Ut+Ht/ct.locationSize*Lt)*Bt)}else{if(mt.isInstancedBufferAttribute){for(let St=0;St<ct.locationSize;St++)I(ct.location+St,mt.meshPerAttribute);X.isInstancedMesh!==!0&&pt._maxInstanceCount===void 0&&(pt._maxInstanceCount=mt.meshPerAttribute*mt.count)}else for(let St=0;St<ct.locationSize;St++)E(ct.location+St);s.bindBuffer(34962,re);for(let St=0;St<ct.locationSize;St++)H(ct.location+St,Ht/ct.locationSize,Vt,At,Ht*Bt,Ht/ct.locationSize*St*Bt)}}else if(Y!==void 0){let At=Y[gt];if(At!==void 0)switch(At.length){case 2:s.vertexAttrib2fv(ct.location,At);break;case 3:s.vertexAttrib3fv(ct.location,At);break;case 4:s.vertexAttrib4fv(ct.location,At);break;default:s.vertexAttrib1fv(ct.location,At)}}}}N()}function O(){vt();for(let X in c){let nt=c[X];for(let lt in nt){let pt=nt[lt];for(let it in pt)M(pt[it].object),delete pt[it];delete nt[lt]}delete c[X]}}function q(X){if(c[X.id]===void 0)return;let nt=c[X.id];for(let lt in nt){let pt=nt[lt];for(let it in pt)M(pt[it].object),delete pt[it];delete nt[lt]}delete c[X.id]}function ft(X){for(let nt in c){let lt=c[nt];if(lt[X.id]===void 0)continue;let pt=lt[X.id];for(let it in pt)M(pt[it].object),delete pt[it];delete lt[X.id]}}function vt(){et(),p=!0,f!==d&&(f=d,y(f.object))}function et(){d.geometry=null,d.program=null,d.wireframe=!1}return{setup:m,reset:vt,resetDefaultState:et,dispose:O,releaseStatesOfGeometry:q,releaseStatesOfProgram:ft,initAttributes:P,enableAttribute:E,disableUnusedAttributes:N}}function rS(s,t,e,i){let a=i.isWebGL2,o;function u(f){o=f}function c(f,p){s.drawArrays(o,f,p),e.update(p,o,1)}function d(f,p,m){if(m===0)return;let g,y;if(a)g=s,y="drawArraysInstanced";else if(g=t.get("ANGLE_instanced_arrays"),y="drawArraysInstancedANGLE",g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g[y](o,f,p,m),e.update(p,o,m)}this.setMode=u,this.render=c,this.renderInstances=d}function sS(s,t,e){let i;function a(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){let H=t.get("EXT_texture_filter_anisotropic");i=s.getParameter(H.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(H){if(H==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";H="mediump"}return H==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}let u=typeof WebGL2RenderingContext!="undefined"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&s instanceof WebGL2ComputeRenderingContext,c=e.precision!==void 0?e.precision:"highp",d=o(c);d!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",d,"instead."),c=d);let f=u||t.has("WEBGL_draw_buffers"),p=e.logarithmicDepthBuffer===!0,m=s.getParameter(34930),g=s.getParameter(35660),y=s.getParameter(3379),M=s.getParameter(34076),v=s.getParameter(34921),_=s.getParameter(36347),S=s.getParameter(36348),D=s.getParameter(36349),P=g>0,E=u||t.has("OES_texture_float"),I=P&&E,N=u?s.getParameter(36183):0;return{isWebGL2:u,drawBuffers:f,getMaxAnisotropy:a,getMaxPrecision:o,precision:c,logarithmicDepthBuffer:p,maxTextures:m,maxVertexTextures:g,maxTextureSize:y,maxCubemapSize:M,maxAttributes:v,maxVertexUniforms:_,maxVaryings:S,maxFragmentUniforms:D,vertexTextures:P,floatFragmentTextures:E,floatVertexTextures:I,maxSamples:N}}function aS(s){let t=this,e=null,i=0,a=!1,o=!1,u=new Li,c=new mn,d={value:null,needsUpdate:!1};this.uniform=d,this.numPlanes=0,this.numIntersection=0,this.init=function(m,g,y){let M=m.length!==0||g||i!==0||a;return a=g,e=p(m,y,0),i=m.length,M},this.beginShadows=function(){o=!0,p(null)},this.endShadows=function(){o=!1,f()},this.setState=function(m,g,y){let M=m.clippingPlanes,v=m.clipIntersection,_=m.clipShadows,S=s.get(m);if(!a||M===null||M.length===0||o&&!_)o?p(null):f();else{let D=o?0:i,P=D*4,E=S.clippingState||null;d.value=E,E=p(M,g,P,y);for(let I=0;I!==P;++I)E[I]=e[I];S.clippingState=E,this.numIntersection=v?this.numPlanes:0,this.numPlanes+=D}};function f(){d.value!==e&&(d.value=e,d.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function p(m,g,y,M){let v=m!==null?m.length:0,_=null;if(v!==0){if(_=d.value,M!==!0||_===null){let S=y+v*4,D=g.matrixWorldInverse;c.getNormalMatrix(D),(_===null||_.length<S)&&(_=new Float32Array(S));for(let P=0,E=y;P!==v;++P,E+=4)u.copy(m[P]).applyMatrix4(D,c),u.normal.toArray(_,E),_[E+3]=u.constant}d.value=_,d.needsUpdate=!0}return t.numPlanes=v,t.numIntersection=0,_}}function oS(s){let t=new WeakMap;function e(u,c){return c===Rc?u.mapping=vs:c===Ic&&(u.mapping=xs),u}function i(u){if(u&&u.isTexture&&u.isRenderTargetTexture===!1){let c=u.mapping;if(c===Rc||c===Ic)if(t.has(u)){let d=t.get(u).texture;return e(d,u.mapping)}else{let d=u.image;if(d&&d.height>0){let f=new kc(d.height/2);return f.fromEquirectangularTexture(s,u),t.set(u,f),u.addEventListener("dispose",a),e(f.texture,u.mapping)}else return null}}return u}function a(u){let c=u.target;c.removeEventListener("dispose",a);let d=t.get(c);d!==void 0&&(t.delete(c),d.dispose())}function o(){t=new WeakMap}return{get:i,dispose:o}}var Vc=class extends Ao{constructor(t=-1,e=1,i=1,a=-1,o=.1,u=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=a,this.near=o,this.far=u,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,i,a,o,u){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=a,this.view.width=o,this.view.height=u,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){let t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,a=(this.top+this.bottom)/2,o=i-t,u=i+t,c=a+e,d=a-e;if(this.view!==null&&this.view.enabled){let f=(this.right-this.left)/this.view.fullWidth/this.zoom,p=(this.top-this.bottom)/this.view.fullHeight/this.zoom;o+=f*this.view.offsetX,u=o+f*this.view.width,c-=p*this.view.offsetY,d=c-p*this.view.height}this.projectionMatrix.makeOrthographic(o,u,c,d,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){let e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}},fs=4,Ld=[.125,.215,.35,.446,.526,.582],yr=20,Ec=new Vc,Rd=new be,Cc=null,xr=(1+Math.sqrt(5))/2,us=1/xr,Id=[new W(1,1,1),new W(-1,1,1),new W(1,1,-1),new W(-1,1,-1),new W(0,xr,us),new W(0,xr,-us),new W(us,0,xr),new W(-us,0,xr),new W(xr,us,0),new W(-xr,us,0)],Co=class{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,a=100){Cc=this._renderer.getRenderTarget(),this._setSize(256);let o=this._allocateTargets();return o.depthBuffer=!0,this._sceneToCubeUV(t,i,a,o),e>0&&this._blur(o,0,0,e),this._applyPMREM(o),this._cleanup(o),o}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Od(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Fd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Cc),t.scissorTest=!1,ho(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===vs||t.mapping===xs?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Cc=this._renderer.getRenderTarget();let i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){let t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:Wn,minFilter:Wn,generateMipmaps:!1,type:ta,format:ei,encoding:Er,depthBuffer:!1},a=Dd(t,e,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Dd(t,e,i);let{_lodMax:o}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=lS(o)),this._blurMaterial=cS(o,t,e)}return a}_compileMaterial(t){let e=new ui(this._lodPlanes[0],t);this._renderer.compile(e,Ec)}_sceneToCubeUV(t,e,i,a){let c=new Cn(90,1,e,i),d=[1,-1,1,1,1,1],f=[1,1,1,-1,-1,-1],p=this._renderer,m=p.autoClear,g=p.toneMapping;p.getClearColor(Rd),p.toneMapping=Ri,p.autoClear=!1;let y=new Mo({name:"PMREM.Background",side:Hn,depthWrite:!1,depthTest:!1}),M=new ui(new Lr,y),v=!1,_=t.background;_?_.isColor&&(y.color.copy(_),t.background=null,v=!0):(y.color.copy(Rd),v=!0);for(let S=0;S<6;S++){let D=S%3;D===0?(c.up.set(0,d[S],0),c.lookAt(f[S],0,0)):D===1?(c.up.set(0,0,d[S]),c.lookAt(0,f[S],0)):(c.up.set(0,d[S],0),c.lookAt(0,0,f[S]));let P=this._cubeSize;ho(a,D*P,S>2?P:0,P,P),p.setRenderTarget(a),v&&p.render(M,c),p.render(t,c)}M.geometry.dispose(),M.material.dispose(),p.toneMapping=g,p.autoClear=m,t.background=_}_textureToCubeUV(t,e){let i=this._renderer,a=t.mapping===vs||t.mapping===xs;a?(this._cubemapMaterial===null&&(this._cubemapMaterial=Od()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Fd());let o=a?this._cubemapMaterial:this._equirectMaterial,u=new ui(this._lodPlanes[0],o),c=o.uniforms;c.envMap.value=t;let d=this._cubeSize;ho(e,0,0,3*d,2*d),i.setRenderTarget(e),i.render(u,Ec)}_applyPMREM(t){let e=this._renderer,i=e.autoClear;e.autoClear=!1;for(let a=1;a<this._lodPlanes.length;a++){let o=Math.sqrt(this._sigmas[a]*this._sigmas[a]-this._sigmas[a-1]*this._sigmas[a-1]),u=Id[(a-1)%Id.length];this._blur(t,a-1,a,o,u)}e.autoClear=i}_blur(t,e,i,a,o){let u=this._pingPongRenderTarget;this._halfBlur(t,u,e,i,a,"latitudinal",o),this._halfBlur(u,t,i,i,a,"longitudinal",o)}_halfBlur(t,e,i,a,o,u,c){let d=this._renderer,f=this._blurMaterial;u!=="latitudinal"&&u!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");let p=3,m=new ui(this._lodPlanes[a],f),g=f.uniforms,y=this._sizeLods[i]-1,M=isFinite(o)?Math.PI/(2*y):2*Math.PI/(2*yr-1),v=o/M,_=isFinite(o)?1+Math.floor(p*v):yr;_>yr&&console.warn(`sigmaRadians, ${o}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${yr}`);let S=[],D=0;for(let H=0;H<yr;++H){let T=H/v,O=Math.exp(-T*T/2);S.push(O),H===0?D+=O:H<_&&(D+=2*O)}for(let H=0;H<S.length;H++)S[H]=S[H]/D;g.envMap.value=t.texture,g.samples.value=_,g.weights.value=S,g.latitudinal.value=u==="latitudinal",c&&(g.poleAxis.value=c);let{_lodMax:P}=this;g.dTheta.value=M,g.mipInt.value=P-i;let E=this._sizeLods[a],I=3*E*(a>P-fs?a-P+fs:0),N=4*(this._cubeSize-E);ho(e,I,N,3*E,2*E),d.setRenderTarget(e),d.render(m,Ec)}};function lS(s){let t=[],e=[],i=[],a=s,o=s-fs+1+Ld.length;for(let u=0;u<o;u++){let c=Math.pow(2,a);e.push(c);let d=1/c;u>s-fs?d=Ld[u-s+fs-1]:u===0&&(d=0),i.push(d);let f=1/(c-2),p=-f,m=1+f,g=[p,p,m,p,m,m,p,p,m,m,p,m],y=6,M=6,v=3,_=2,S=1,D=new Float32Array(v*M*y),P=new Float32Array(_*M*y),E=new Float32Array(S*M*y);for(let N=0;N<y;N++){let H=N%3*2/3-1,T=N>2?0:-1,O=[H,T,0,H+2/3,T,0,H+2/3,T+1,0,H,T,0,H+2/3,T+1,0,H,T+1,0];D.set(O,v*M*N),P.set(g,_*M*N);let q=[N,N,N,N,N,N];E.set(q,S*M*N)}let I=new Fi;I.setAttribute("position",new Gn(D,v)),I.setAttribute("uv",new Gn(P,_)),I.setAttribute("faceIndex",new Gn(E,S)),t.push(I),a>fs&&a--}return{lodPlanes:t,sizeLods:e,sigmas:i}}function Dd(s,t,e){let i=new Di(s,t,e);return i.texture.mapping=Po,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function ho(s,t,e,i,a){s.viewport.set(t,e,i,a),s.scissor.set(t,e,i,a)}function cS(s,t,e){let i=new Float32Array(yr),a=new W(0,1,0);return new Oi({name:"SphericalGaussianBlur",defines:{n:yr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:a}},vertexShader:cu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Fd(){return new Oi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:cu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function Od(){return new Oi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:cu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:nr,depthTest:!1,depthWrite:!1})}function cu(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function uS(s){let t=new WeakMap,e=null;function i(c){if(c&&c.isTexture){let d=c.mapping,f=d===Rc||d===Ic,p=d===vs||d===xs;if(f||p)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let m=t.get(c);return e===null&&(e=new Co(s)),m=f?e.fromEquirectangular(c,m):e.fromCubemap(c,m),t.set(c,m),m.texture}else{if(t.has(c))return t.get(c).texture;{let m=c.image;if(f&&m&&m.height>0||p&&m&&a(m)){e===null&&(e=new Co(s));let g=f?e.fromEquirectangular(c):e.fromCubemap(c);return t.set(c,g),c.addEventListener("dispose",o),g.texture}else return null}}}return c}function a(c){let d=0,f=6;for(let p=0;p<f;p++)c[p]!==void 0&&d++;return d===f}function o(c){let d=c.target;d.removeEventListener("dispose",o);let f=t.get(d);f!==void 0&&(t.delete(d),f.dispose())}function u(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:i,dispose:u}}function hS(s){let t={};function e(i){if(t[i]!==void 0)return t[i];let a;switch(i){case"WEBGL_depth_texture":a=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":a=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":a=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":a=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:a=s.getExtension(i)}return t[i]=a,a}return{has:function(i){return e(i)!==null},init:function(i){i.isWebGL2?e("EXT_color_buffer_float"):(e("WEBGL_depth_texture"),e("OES_texture_float"),e("OES_texture_half_float"),e("OES_texture_half_float_linear"),e("OES_standard_derivatives"),e("OES_element_index_uint"),e("OES_vertex_array_object"),e("ANGLE_instanced_arrays")),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture")},get:function(i){let a=e(i);return a===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),a}}}function fS(s,t,e,i){let a={},o=new WeakMap;function u(m){let g=m.target;g.index!==null&&t.remove(g.index);for(let M in g.attributes)t.remove(g.attributes[M]);g.removeEventListener("dispose",u),delete a[g.id];let y=o.get(g);y&&(t.remove(y),o.delete(g)),i.releaseStatesOfGeometry(g),g.isInstancedBufferGeometry===!0&&delete g._maxInstanceCount,e.memory.geometries--}function c(m,g){return a[g.id]===!0||(g.addEventListener("dispose",u),a[g.id]=!0,e.memory.geometries++),g}function d(m){let g=m.attributes;for(let M in g)t.update(g[M],34962);let y=m.morphAttributes;for(let M in y){let v=y[M];for(let _=0,S=v.length;_<S;_++)t.update(v[_],34962)}}function f(m){let g=[],y=m.index,M=m.attributes.position,v=0;if(y!==null){let D=y.array;v=y.version;for(let P=0,E=D.length;P<E;P+=3){let I=D[P+0],N=D[P+1],H=D[P+2];g.push(I,N,N,H,H,I)}}else{let D=M.array;v=M.version;for(let P=0,E=D.length/3-1;P<E;P+=3){let I=P+0,N=P+1,H=P+2;g.push(I,N,N,H,H,I)}}let _=new(ip(g)?So:wo)(g,1);_.version=v;let S=o.get(m);S&&t.remove(S),o.set(m,_)}function p(m){let g=o.get(m);if(g){let y=m.index;y!==null&&g.version<y.version&&f(m)}else f(m);return o.get(m)}return{get:c,update:d,getWireframeAttribute:p}}function dS(s,t,e,i){let a=i.isWebGL2,o;function u(g){o=g}let c,d;function f(g){c=g.type,d=g.bytesPerElement}function p(g,y){s.drawElements(o,y,c,g*d),e.update(y,o,1)}function m(g,y,M){if(M===0)return;let v,_;if(a)v=s,_="drawElementsInstanced";else if(v=t.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",v===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}v[_](o,y,c,g*d,M),e.update(y,o,M)}this.setMode=u,this.setIndex=f,this.render=p,this.renderInstances=m}function pS(s){let t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function i(o,u,c){switch(e.calls++,u){case 4:e.triangles+=c*(o/3);break;case 1:e.lines+=c*(o/2);break;case 3:e.lines+=c*(o-1);break;case 2:e.lines+=c*o;break;case 0:e.points+=c*o;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",u);break}}function a(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:a,update:i}}function mS(s,t){return s[0]-t[0]}function gS(s,t){return Math.abs(t[1])-Math.abs(s[1])}function _S(s,t,e){let i={},a=new Float32Array(8),o=new WeakMap,u=new ke,c=[];for(let f=0;f<8;f++)c[f]=[f,0];function d(f,p,m,g){let y=f.morphTargetInfluences;if(t.isWebGL2===!0){let M=p.morphAttributes.position||p.morphAttributes.normal||p.morphAttributes.color,v=M!==void 0?M.length:0,_=o.get(p);if(_===void 0||_.count!==v){let nt=function(){et.dispose(),o.delete(p),p.removeEventListener("dispose",nt)};_!==void 0&&_.texture.dispose();let P=p.morphAttributes.position!==void 0,E=p.morphAttributes.normal!==void 0,I=p.morphAttributes.color!==void 0,N=p.morphAttributes.position||[],H=p.morphAttributes.normal||[],T=p.morphAttributes.color||[],O=0;P===!0&&(O=1),E===!0&&(O=2),I===!0&&(O=3);let q=p.attributes.position.count*O,ft=1;q>t.maxTextureSize&&(ft=Math.ceil(q/t.maxTextureSize),q=t.maxTextureSize);let vt=new Float32Array(q*ft*4*v),et=new yo(vt,q,ft,v);et.type=Mr,et.needsUpdate=!0;let X=O*4;for(let lt=0;lt<v;lt++){let pt=N[lt],it=H[lt],k=T[lt],Y=q*ft*4*lt;for(let gt=0;gt<pt.count;gt++){let ct=gt*X;P===!0&&(u.fromBufferAttribute(pt,gt),vt[Y+ct+0]=u.x,vt[Y+ct+1]=u.y,vt[Y+ct+2]=u.z,vt[Y+ct+3]=0),E===!0&&(u.fromBufferAttribute(it,gt),vt[Y+ct+4]=u.x,vt[Y+ct+5]=u.y,vt[Y+ct+6]=u.z,vt[Y+ct+7]=0),I===!0&&(u.fromBufferAttribute(k,gt),vt[Y+ct+8]=u.x,vt[Y+ct+9]=u.y,vt[Y+ct+10]=u.z,vt[Y+ct+11]=k.itemSize===4?u.w:1)}}_={count:v,texture:et,size:new pe(q,ft)},o.set(p,_),p.addEventListener("dispose",nt)}let S=0;for(let P=0;P<y.length;P++)S+=y[P];let D=p.morphTargetsRelative?1:1-S;g.getUniforms().setValue(s,"morphTargetBaseInfluence",D),g.getUniforms().setValue(s,"morphTargetInfluences",y),g.getUniforms().setValue(s,"morphTargetsTexture",_.texture,e),g.getUniforms().setValue(s,"morphTargetsTextureSize",_.size)}else{let M=y===void 0?0:y.length,v=i[p.id];if(v===void 0||v.length!==M){v=[];for(let E=0;E<M;E++)v[E]=[E,0];i[p.id]=v}for(let E=0;E<M;E++){let I=v[E];I[0]=E,I[1]=y[E]}v.sort(gS);for(let E=0;E<8;E++)E<M&&v[E][1]?(c[E][0]=v[E][0],c[E][1]=v[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(mS);let _=p.morphAttributes.position,S=p.morphAttributes.normal,D=0;for(let E=0;E<8;E++){let I=c[E],N=I[0],H=I[1];N!==Number.MAX_SAFE_INTEGER&&H?(_&&p.getAttribute("morphTarget"+E)!==_[N]&&p.setAttribute("morphTarget"+E,_[N]),S&&p.getAttribute("morphNormal"+E)!==S[N]&&p.setAttribute("morphNormal"+E,S[N]),a[E]=H,D+=H):(_&&p.hasAttribute("morphTarget"+E)===!0&&p.deleteAttribute("morphTarget"+E),S&&p.hasAttribute("morphNormal"+E)===!0&&p.deleteAttribute("morphNormal"+E),a[E]=0)}let P=p.morphTargetsRelative?1:1-D;g.getUniforms().setValue(s,"morphTargetBaseInfluence",P),g.getUniforms().setValue(s,"morphTargetInfluences",a)}}return{update:d}}function vS(s,t,e,i){let a=new WeakMap;function o(d){let f=i.render.frame,p=d.geometry,m=t.get(d,p);return a.get(m)!==f&&(t.update(m),a.set(m,f)),d.isInstancedMesh&&(d.hasEventListener("dispose",c)===!1&&d.addEventListener("dispose",c),e.update(d.instanceMatrix,34962),d.instanceColor!==null&&e.update(d.instanceColor,34962)),m}function u(){a=new WeakMap}function c(d){let f=d.target;f.removeEventListener("dispose",c),e.remove(f.instanceMatrix),f.instanceColor!==null&&e.remove(f.instanceColor)}return{update:o,dispose:u}}var ap=new Pn,op=new yo,lp=new zc,cp=new To,Nd=[],zd=[],Ud=new Float32Array(16),Bd=new Float32Array(9),kd=new Float32Array(4);function Ss(s,t,e){let i=s[0];if(i<=0||i>0)return s;let a=t*e,o=Nd[a];if(o===void 0&&(o=new Float32Array(a),Nd[a]=o),t!==0){i.toArray(o,0);for(let u=1,c=0;u!==t;++u)c+=e,s[u].toArray(o,c)}return o}function We(s,t){if(s.length!==t.length)return!1;for(let e=0,i=s.length;e<i;e++)if(s[e]!==t[e])return!1;return!0}function He(s,t){for(let e=0,i=t.length;e<i;e++)s[e]=t[e]}function Ro(s,t){let e=zd[t];e===void 0&&(e=new Int32Array(t),zd[t]=e);for(let i=0;i!==t;++i)e[i]=s.allocateTextureUnit();return e}function xS(s,t){let e=this.cache;e[0]!==t&&(s.uniform1f(this.addr,t),e[0]=t)}function yS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(We(e,t))return;s.uniform2fv(this.addr,t),He(e,t)}}function bS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(s.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(We(e,t))return;s.uniform3fv(this.addr,t),He(e,t)}}function MS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(We(e,t))return;s.uniform4fv(this.addr,t),He(e,t)}}function wS(s,t){let e=this.cache,i=t.elements;if(i===void 0){if(We(e,t))return;s.uniformMatrix2fv(this.addr,!1,t),He(e,t)}else{if(We(e,i))return;kd.set(i),s.uniformMatrix2fv(this.addr,!1,kd),He(e,i)}}function SS(s,t){let e=this.cache,i=t.elements;if(i===void 0){if(We(e,t))return;s.uniformMatrix3fv(this.addr,!1,t),He(e,t)}else{if(We(e,i))return;Bd.set(i),s.uniformMatrix3fv(this.addr,!1,Bd),He(e,i)}}function AS(s,t){let e=this.cache,i=t.elements;if(i===void 0){if(We(e,t))return;s.uniformMatrix4fv(this.addr,!1,t),He(e,t)}else{if(We(e,i))return;Ud.set(i),s.uniformMatrix4fv(this.addr,!1,Ud),He(e,i)}}function TS(s,t){let e=this.cache;e[0]!==t&&(s.uniform1i(this.addr,t),e[0]=t)}function ES(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(We(e,t))return;s.uniform2iv(this.addr,t),He(e,t)}}function CS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(We(e,t))return;s.uniform3iv(this.addr,t),He(e,t)}}function PS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(We(e,t))return;s.uniform4iv(this.addr,t),He(e,t)}}function LS(s,t){let e=this.cache;e[0]!==t&&(s.uniform1ui(this.addr,t),e[0]=t)}function RS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(s.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(We(e,t))return;s.uniform2uiv(this.addr,t),He(e,t)}}function IS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(s.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(We(e,t))return;s.uniform3uiv(this.addr,t),He(e,t)}}function DS(s,t){let e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(s.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(We(e,t))return;s.uniform4uiv(this.addr,t),He(e,t)}}function FS(s,t,e){let i=this.cache,a=e.allocateTextureUnit();i[0]!==a&&(s.uniform1i(this.addr,a),i[0]=a),e.setTexture2D(t||ap,a)}function OS(s,t,e){let i=this.cache,a=e.allocateTextureUnit();i[0]!==a&&(s.uniform1i(this.addr,a),i[0]=a),e.setTexture3D(t||lp,a)}function NS(s,t,e){let i=this.cache,a=e.allocateTextureUnit();i[0]!==a&&(s.uniform1i(this.addr,a),i[0]=a),e.setTextureCube(t||cp,a)}function zS(s,t,e){let i=this.cache,a=e.allocateTextureUnit();i[0]!==a&&(s.uniform1i(this.addr,a),i[0]=a),e.setTexture2DArray(t||op,a)}function US(s){switch(s){case 5126:return xS;case 35664:return yS;case 35665:return bS;case 35666:return MS;case 35674:return wS;case 35675:return SS;case 35676:return AS;case 5124:case 35670:return TS;case 35667:case 35671:return ES;case 35668:case 35672:return CS;case 35669:case 35673:return PS;case 5125:return LS;case 36294:return RS;case 36295:return IS;case 36296:return DS;case 35678:case 36198:case 36298:case 36306:case 35682:return FS;case 35679:case 36299:case 36307:return OS;case 35680:case 36300:case 36308:case 36293:return NS;case 36289:case 36303:case 36311:case 36292:return zS}}function BS(s,t){s.uniform1fv(this.addr,t)}function kS(s,t){let e=Ss(t,this.size,2);s.uniform2fv(this.addr,e)}function VS(s,t){let e=Ss(t,this.size,3);s.uniform3fv(this.addr,e)}function WS(s,t){let e=Ss(t,this.size,4);s.uniform4fv(this.addr,e)}function HS(s,t){let e=Ss(t,this.size,4);s.uniformMatrix2fv(this.addr,!1,e)}function GS(s,t){let e=Ss(t,this.size,9);s.uniformMatrix3fv(this.addr,!1,e)}function qS(s,t){let e=Ss(t,this.size,16);s.uniformMatrix4fv(this.addr,!1,e)}function XS(s,t){s.uniform1iv(this.addr,t)}function YS(s,t){s.uniform2iv(this.addr,t)}function ZS(s,t){s.uniform3iv(this.addr,t)}function JS(s,t){s.uniform4iv(this.addr,t)}function $S(s,t){s.uniform1uiv(this.addr,t)}function KS(s,t){s.uniform2uiv(this.addr,t)}function QS(s,t){s.uniform3uiv(this.addr,t)}function jS(s,t){s.uniform4uiv(this.addr,t)}function tA(s,t,e){let i=this.cache,a=t.length,o=Ro(e,a);We(i,o)||(s.uniform1iv(this.addr,o),He(i,o));for(let u=0;u!==a;++u)e.setTexture2D(t[u]||ap,o[u])}function eA(s,t,e){let i=this.cache,a=t.length,o=Ro(e,a);We(i,o)||(s.uniform1iv(this.addr,o),He(i,o));for(let u=0;u!==a;++u)e.setTexture3D(t[u]||lp,o[u])}function nA(s,t,e){let i=this.cache,a=t.length,o=Ro(e,a);We(i,o)||(s.uniform1iv(this.addr,o),He(i,o));for(let u=0;u!==a;++u)e.setTextureCube(t[u]||cp,o[u])}function iA(s,t,e){let i=this.cache,a=t.length,o=Ro(e,a);We(i,o)||(s.uniform1iv(this.addr,o),He(i,o));for(let u=0;u!==a;++u)e.setTexture2DArray(t[u]||op,o[u])}function rA(s){switch(s){case 5126:return BS;case 35664:return kS;case 35665:return VS;case 35666:return WS;case 35674:return HS;case 35675:return GS;case 35676:return qS;case 5124:case 35670:return XS;case 35667:case 35671:return YS;case 35668:case 35672:return ZS;case 35669:case 35673:return JS;case 5125:return $S;case 36294:return KS;case 36295:return QS;case 36296:return jS;case 35678:case 36198:case 36298:case 36306:case 35682:return tA;case 35679:case 36299:case 36307:return eA;case 35680:case 36300:case 36308:case 36293:return nA;case 36289:case 36303:case 36311:case 36292:return iA}}var Wc=class{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.setValue=US(e.type)}},Hc=class{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.size=e.size,this.setValue=rA(e.type)}},Gc=class{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){let a=this.seq;for(let o=0,u=a.length;o!==u;++o){let c=a[o];c.setValue(t,e[c.id],i)}}},Pc=/(\w+)(\])?(\[|\.)?/g;function Vd(s,t){s.seq.push(t),s.map[t.id]=t}function sA(s,t,e){let i=s.name,a=i.length;for(Pc.lastIndex=0;;){let o=Pc.exec(i),u=Pc.lastIndex,c=o[1],d=o[2]==="]",f=o[3];if(d&&(c=c|0),f===void 0||f==="["&&u+2===a){Vd(e,f===void 0?new Wc(c,s,t):new Hc(c,s,t));break}else{let m=e.map[c];m===void 0&&(m=new Gc(c),Vd(e,m)),e=m}}}var gs=class{constructor(t,e){this.seq=[],this.map={};let i=t.getProgramParameter(e,35718);for(let a=0;a<i;++a){let o=t.getActiveUniform(e,a),u=t.getUniformLocation(e,o.name);sA(o,u,this)}}setValue(t,e,i,a){let o=this.map[e];o!==void 0&&o.setValue(t,i,a)}setOptional(t,e,i){let a=e[i];a!==void 0&&this.setValue(t,i,a)}static upload(t,e,i,a){for(let o=0,u=e.length;o!==u;++o){let c=e[o],d=i[c.id];d.needsUpdate!==!1&&c.setValue(t,d.value,a)}}static seqWithValue(t,e){let i=[];for(let a=0,o=t.length;a!==o;++a){let u=t[a];u.id in e&&i.push(u)}return i}};function Wd(s,t,e){let i=s.createShader(t);return s.shaderSource(i,e),s.compileShader(i),i}var aA=0;function oA(s,t){let e=s.split(`
`),i=[],a=Math.max(t-6,0),o=Math.min(t+6,e.length);for(let u=a;u<o;u++){let c=u+1;i.push(`${c===t?">":" "} ${c}: ${e[u]}`)}return i.join(`
`)}function lA(s){switch(s){case Er:return["Linear","( value )"];case Ce:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Hd(s,t,e){let i=s.getShaderParameter(t,35713),a=s.getShaderInfoLog(t).trim();if(i&&a==="")return"";let o=/ERROR: 0:(\d+)/.exec(a);if(o){let u=parseInt(o[1]);return e.toUpperCase()+`

`+a+`

`+oA(s.getShaderSource(t),u)}else return a}function cA(s,t){let e=lA(t);return"vec4 "+s+"( vec4 value ) { return LinearTo"+e[0]+e[1]+"; }"}function uA(s,t){let e;switch(t){case Db:e="Linear";break;case Fb:e="Reinhard";break;case Ob:e="OptimizedCineon";break;case Nb:e="ACESFilmic";break;case zb:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+s+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}function hA(s){return[s.extensionDerivatives||!!s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qs).join(`
`)}function fA(s){let t=[];for(let e in s){let i=s[e];i!==!1&&t.push("#define "+e+" "+i)}return t.join(`
`)}function dA(s,t){let e={},i=s.getProgramParameter(t,35721);for(let a=0;a<i;a++){let o=s.getActiveAttrib(t,a),u=o.name,c=1;o.type===35674&&(c=2),o.type===35675&&(c=3),o.type===35676&&(c=4),e[u]={type:o.type,location:s.getAttribLocation(t,u),locationSize:c}}return e}function Qs(s){return s!==""}function Gd(s,t){let e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function qd(s,t){return s.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var pA=/^[ \t]*#include +<([\w\d./]+)>/gm;function qc(s){return s.replace(pA,mA)}function mA(s,t){let e=Qt[t];if(e===void 0)throw new Error("Can not resolve #include <"+t+">");return qc(e)}var gA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Xd(s){return s.replace(gA,_A)}function _A(s,t,e,i){let a="";for(let o=parseInt(t);o<parseInt(e);o++)a+=i.replace(/\[\s*i\s*\]/g,"[ "+o+" ]").replace(/UNROLLED_LOOP_INDEX/g,o);return a}function Yd(s){let t="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?t+=`
#define HIGH_PRECISION`:s.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function vA(s){let t="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Kd?t="SHADOWMAP_TYPE_PCF":s.shadowMapType===hb?t="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Ks&&(t="SHADOWMAP_TYPE_VSM"),t}function xA(s){let t="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case vs:case xs:t="ENVMAP_TYPE_CUBE";break;case Po:t="ENVMAP_TYPE_CUBE_UV";break}return t}function yA(s){let t="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case xs:t="ENVMAP_MODE_REFRACTION";break}return t}function bA(s){let t="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case tp:t="ENVMAP_BLENDING_MULTIPLY";break;case Rb:t="ENVMAP_BLENDING_MIX";break;case Ib:t="ENVMAP_BLENDING_ADD";break}return t}function MA(s){let t=s.envMapCubeUVHeight;if(t===null)return null;let e=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:i,maxMip:e}}function wA(s,t,e,i){let a=s.getContext(),o=e.defines,u=e.vertexShader,c=e.fragmentShader,d=vA(e),f=xA(e),p=yA(e),m=bA(e),g=MA(e),y=e.isWebGL2?"":hA(e),M=fA(o),v=a.createProgram(),_,S,D=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(_=[M].filter(Qs).join(`
`),_.length>0&&(_+=`
`),S=[y,M].filter(Qs).join(`
`),S.length>0&&(S+=`
`)):(_=[Yd(e),"#define SHADER_NAME "+e.shaderName,M,e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.supportsVertexTextures?"#define VERTEX_TEXTURES":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+p:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.displacementMap&&e.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors&&e.isWebGL2?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0&&e.isWebGL2?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+d:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Qs).join(`
`),S=[y,Yd(e),"#define SHADER_NAME "+e.shaderName,M,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+f:"",e.envMap?"#define "+p:"",e.envMap?"#define "+m:"",g?"#define CUBEUV_TEXEL_WIDTH "+g.texelWidth:"",g?"#define CUBEUV_TEXEL_HEIGHT "+g.texelHeight:"",g?"#define CUBEUV_MAX_MIP "+g.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMap&&e.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",e.normalMap&&e.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",e.specularColorMap?"#define USE_SPECULARCOLORMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEENCOLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.vertexTangents?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUvs?"#define USE_UV":"",e.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+d:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.logarithmicDepthBuffer&&e.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Ri?"#define TONE_MAPPING":"",e.toneMapping!==Ri?Qt.tonemapping_pars_fragment:"",e.toneMapping!==Ri?uA("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Qt.encodings_pars_fragment,cA("linearToOutputTexel",e.outputEncoding),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(Qs).join(`
`)),u=qc(u),u=Gd(u,e),u=qd(u,e),c=qc(c),c=Gd(c,e),c=qd(c,e),u=Xd(u),c=Xd(c),e.isWebGL2&&e.isRawShaderMaterial!==!0&&(D=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,S=["#define varying in",e.glslVersion===_d?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===_d?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+S);let P=D+_+u,E=D+S+c,I=Wd(a,35633,P),N=Wd(a,35632,E);if(a.attachShader(v,I),a.attachShader(v,N),e.index0AttributeName!==void 0?a.bindAttribLocation(v,0,e.index0AttributeName):e.morphTargets===!0&&a.bindAttribLocation(v,0,"position"),a.linkProgram(v),s.debug.checkShaderErrors){let O=a.getProgramInfoLog(v).trim(),q=a.getShaderInfoLog(I).trim(),ft=a.getShaderInfoLog(N).trim(),vt=!0,et=!0;if(a.getProgramParameter(v,35714)===!1){vt=!1;let X=Hd(a,I,"vertex"),nt=Hd(a,N,"fragment");console.error("THREE.WebGLProgram: Shader Error "+a.getError()+" - VALIDATE_STATUS "+a.getProgramParameter(v,35715)+`

Program Info Log: `+O+`
`+X+`
`+nt)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(q===""||ft==="")&&(et=!1);et&&(this.diagnostics={runnable:vt,programLog:O,vertexShader:{log:q,prefix:_},fragmentShader:{log:ft,prefix:S}})}a.deleteShader(I),a.deleteShader(N);let H;this.getUniforms=function(){return H===void 0&&(H=new gs(a,v)),H};let T;return this.getAttributes=function(){return T===void 0&&(T=dA(a,v)),T},this.destroy=function(){i.releaseStatesOfProgram(this),a.deleteProgram(v),this.program=void 0},this.name=e.shaderName,this.id=aA++,this.cacheKey=t,this.usedTimes=1,this.program=v,this.vertexShader=I,this.fragmentShader=N,this}var SA=0,Xc=class{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){let e=t.vertexShader,i=t.fragmentShader,a=this._getShaderStage(e),o=this._getShaderStage(i),u=this._getShaderCacheForMaterial(t);return u.has(a)===!1&&(u.add(a),a.usedTimes++),u.has(o)===!1&&(u.add(o),o.usedTimes++),this}remove(t){let e=this.materialCache.get(t);for(let i of e)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){let e=this.materialCache,i=e.get(t);return i===void 0&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){let e=this.shaderCache,i=e.get(t);return i===void 0&&(i=new Yc(t),e.set(t,i)),i}},Yc=class{constructor(t){this.id=SA++,this.code=t,this.usedTimes=0}};function AA(s,t,e,i,a,o,u){let c=new bo,d=new Xc,f=[],p=a.isWebGL2,m=a.logarithmicDepthBuffer,g=a.vertexTextures,y=a.precision,M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function v(T,O,q,ft,vt){let et=ft.fog,X=vt.geometry,nt=T.isMeshStandardMaterial?ft.environment:null,lt=(T.isMeshStandardMaterial?e:t).get(T.envMap||nt),pt=!!lt&&lt.mapping===Po?lt.image.height:null,it=M[T.type];T.precision!==null&&(y=a.getMaxPrecision(T.precision),y!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",y,"instead."));let k=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,Y=k!==void 0?k.length:0,gt=0;X.morphAttributes.position!==void 0&&(gt=1),X.morphAttributes.normal!==void 0&&(gt=2),X.morphAttributes.color!==void 0&&(gt=3);let ct,mt,At,Ht;if(it){let fe=ci[it];ct=fe.vertexShader,mt=fe.fragmentShader}else ct=T.vertexShader,mt=T.fragmentShader,d.update(T),At=d.getVertexShaderID(T),Ht=d.getFragmentShaderID(T);let rt=s.getRenderTarget(),re=T.alphaTest>0,Vt=T.clearcoat>0,Bt=T.iridescence>0;return{isWebGL2:p,shaderID:it,shaderName:T.type,vertexShader:ct,fragmentShader:mt,defines:T.defines,customVertexShaderID:At,customFragmentShaderID:Ht,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:y,instancing:vt.isInstancedMesh===!0,instancingColor:vt.isInstancedMesh===!0&&vt.instanceColor!==null,supportsVertexTextures:g,outputEncoding:rt===null?s.outputEncoding:rt.isXRRenderTarget===!0?rt.texture.encoding:Er,map:!!T.map,matcap:!!T.matcap,envMap:!!lt,envMapMode:lt&&lt.mapping,envMapCubeUVHeight:pt,lightMap:!!T.lightMap,aoMap:!!T.aoMap,emissiveMap:!!T.emissiveMap,bumpMap:!!T.bumpMap,normalMap:!!T.normalMap,objectSpaceNormalMap:T.normalMapType===iM,tangentSpaceNormalMap:T.normalMapType===nM,decodeVideoTexture:!!T.map&&T.map.isVideoTexture===!0&&T.map.encoding===Ce,clearcoat:Vt,clearcoatMap:Vt&&!!T.clearcoatMap,clearcoatRoughnessMap:Vt&&!!T.clearcoatRoughnessMap,clearcoatNormalMap:Vt&&!!T.clearcoatNormalMap,iridescence:Bt,iridescenceMap:Bt&&!!T.iridescenceMap,iridescenceThicknessMap:Bt&&!!T.iridescenceThicknessMap,displacementMap:!!T.displacementMap,roughnessMap:!!T.roughnessMap,metalnessMap:!!T.metalnessMap,specularMap:!!T.specularMap,specularIntensityMap:!!T.specularIntensityMap,specularColorMap:!!T.specularColorMap,opaque:T.transparent===!1&&T.blending===ps,alphaMap:!!T.alphaMap,alphaTest:re,gradientMap:!!T.gradientMap,sheen:T.sheen>0,sheenColorMap:!!T.sheenColorMap,sheenRoughnessMap:!!T.sheenRoughnessMap,transmission:T.transmission>0,transmissionMap:!!T.transmissionMap,thicknessMap:!!T.thicknessMap,combine:T.combine,vertexTangents:!!T.normalMap&&!!X.attributes.tangent,vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,vertexUvs:!!T.map||!!T.bumpMap||!!T.normalMap||!!T.specularMap||!!T.alphaMap||!!T.emissiveMap||!!T.roughnessMap||!!T.metalnessMap||!!T.clearcoatMap||!!T.clearcoatRoughnessMap||!!T.clearcoatNormalMap||!!T.iridescenceMap||!!T.iridescenceThicknessMap||!!T.displacementMap||!!T.transmissionMap||!!T.thicknessMap||!!T.specularIntensityMap||!!T.specularColorMap||!!T.sheenColorMap||!!T.sheenRoughnessMap,uvsVertexOnly:!(!!T.map||!!T.bumpMap||!!T.normalMap||!!T.specularMap||!!T.alphaMap||!!T.emissiveMap||!!T.roughnessMap||!!T.metalnessMap||!!T.clearcoatNormalMap||!!T.iridescenceMap||!!T.iridescenceThicknessMap||T.transmission>0||!!T.transmissionMap||!!T.thicknessMap||!!T.specularIntensityMap||!!T.specularColorMap||T.sheen>0||!!T.sheenColorMap||!!T.sheenRoughnessMap)&&!!T.displacementMap,fog:!!et,useFog:T.fog===!0,fogExp2:et&&et.isFogExp2,flatShading:!!T.flatShading,sizeAttenuation:T.sizeAttenuation,logarithmicDepthBuffer:m,skinning:vt.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:Y,morphTextureStride:gt,numDirLights:O.directional.length,numPointLights:O.point.length,numSpotLights:O.spot.length,numSpotLightMaps:O.spotLightMap.length,numRectAreaLights:O.rectArea.length,numHemiLights:O.hemi.length,numDirLightShadows:O.directionalShadowMap.length,numPointLightShadows:O.pointShadowMap.length,numSpotLightShadows:O.spotShadowMap.length,numSpotLightShadowsWithMaps:O.numSpotLightShadowsWithMaps,numClippingPlanes:u.numPlanes,numClipIntersection:u.numIntersection,dithering:T.dithering,shadowMapEnabled:s.shadowMap.enabled&&q.length>0,shadowMapType:s.shadowMap.type,toneMapping:T.toneMapped?s.toneMapping:Ri,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===er,flipSided:T.side===Hn,useDepthPacking:!!T.depthPacking,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:T.extensions&&T.extensions.derivatives,extensionFragDepth:T.extensions&&T.extensions.fragDepth,extensionDrawBuffers:T.extensions&&T.extensions.drawBuffers,extensionShaderTextureLOD:T.extensions&&T.extensions.shaderTextureLOD,rendererExtensionFragDepth:p||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:p||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:p||i.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function _(T){let O=[];if(T.shaderID?O.push(T.shaderID):(O.push(T.customVertexShaderID),O.push(T.customFragmentShaderID)),T.defines!==void 0)for(let q in T.defines)O.push(q),O.push(T.defines[q]);return T.isRawShaderMaterial===!1&&(S(O,T),D(O,T),O.push(s.outputEncoding)),O.push(T.customProgramCacheKey),O.join()}function S(T,O){T.push(O.precision),T.push(O.outputEncoding),T.push(O.envMapMode),T.push(O.envMapCubeUVHeight),T.push(O.combine),T.push(O.vertexUvs),T.push(O.fogExp2),T.push(O.sizeAttenuation),T.push(O.morphTargetsCount),T.push(O.morphAttributeCount),T.push(O.numDirLights),T.push(O.numPointLights),T.push(O.numSpotLights),T.push(O.numSpotLightMaps),T.push(O.numHemiLights),T.push(O.numRectAreaLights),T.push(O.numDirLightShadows),T.push(O.numPointLightShadows),T.push(O.numSpotLightShadows),T.push(O.numSpotLightShadowsWithMaps),T.push(O.shadowMapType),T.push(O.toneMapping),T.push(O.numClippingPlanes),T.push(O.numClipIntersection),T.push(O.depthPacking)}function D(T,O){c.disableAll(),O.isWebGL2&&c.enable(0),O.supportsVertexTextures&&c.enable(1),O.instancing&&c.enable(2),O.instancingColor&&c.enable(3),O.map&&c.enable(4),O.matcap&&c.enable(5),O.envMap&&c.enable(6),O.lightMap&&c.enable(7),O.aoMap&&c.enable(8),O.emissiveMap&&c.enable(9),O.bumpMap&&c.enable(10),O.normalMap&&c.enable(11),O.objectSpaceNormalMap&&c.enable(12),O.tangentSpaceNormalMap&&c.enable(13),O.clearcoat&&c.enable(14),O.clearcoatMap&&c.enable(15),O.clearcoatRoughnessMap&&c.enable(16),O.clearcoatNormalMap&&c.enable(17),O.iridescence&&c.enable(18),O.iridescenceMap&&c.enable(19),O.iridescenceThicknessMap&&c.enable(20),O.displacementMap&&c.enable(21),O.specularMap&&c.enable(22),O.roughnessMap&&c.enable(23),O.metalnessMap&&c.enable(24),O.gradientMap&&c.enable(25),O.alphaMap&&c.enable(26),O.alphaTest&&c.enable(27),O.vertexColors&&c.enable(28),O.vertexAlphas&&c.enable(29),O.vertexUvs&&c.enable(30),O.vertexTangents&&c.enable(31),O.uvsVertexOnly&&c.enable(32),T.push(c.mask),c.disableAll(),O.fog&&c.enable(0),O.useFog&&c.enable(1),O.flatShading&&c.enable(2),O.logarithmicDepthBuffer&&c.enable(3),O.skinning&&c.enable(4),O.morphTargets&&c.enable(5),O.morphNormals&&c.enable(6),O.morphColors&&c.enable(7),O.premultipliedAlpha&&c.enable(8),O.shadowMapEnabled&&c.enable(9),O.physicallyCorrectLights&&c.enable(10),O.doubleSided&&c.enable(11),O.flipSided&&c.enable(12),O.useDepthPacking&&c.enable(13),O.dithering&&c.enable(14),O.specularIntensityMap&&c.enable(15),O.specularColorMap&&c.enable(16),O.transmission&&c.enable(17),O.transmissionMap&&c.enable(18),O.thicknessMap&&c.enable(19),O.sheen&&c.enable(20),O.sheenColorMap&&c.enable(21),O.sheenRoughnessMap&&c.enable(22),O.decodeVideoTexture&&c.enable(23),O.opaque&&c.enable(24),T.push(c.mask)}function P(T){let O=M[T.type],q;if(O){let ft=ci[O];q=vM.clone(ft.uniforms)}else q=T.uniforms;return q}function E(T,O){let q;for(let ft=0,vt=f.length;ft<vt;ft++){let et=f[ft];if(et.cacheKey===O){q=et,++q.usedTimes;break}}return q===void 0&&(q=new wA(s,O,T,o),f.push(q)),q}function I(T){if(--T.usedTimes===0){let O=f.indexOf(T);f[O]=f[f.length-1],f.pop(),T.destroy()}}function N(T){d.remove(T)}function H(){d.dispose()}return{getParameters:v,getProgramCacheKey:_,getUniforms:P,acquireProgram:E,releaseProgram:I,releaseShaderCache:N,programs:f,dispose:H}}function TA(){let s=new WeakMap;function t(o){let u=s.get(o);return u===void 0&&(u={},s.set(o,u)),u}function e(o){s.delete(o)}function i(o,u,c){s.get(o)[u]=c}function a(){s=new WeakMap}return{get:t,remove:e,update:i,dispose:a}}function EA(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.material.id!==t.material.id?s.material.id-t.material.id:s.z!==t.z?s.z-t.z:s.id-t.id}function Zd(s,t){return s.groupOrder!==t.groupOrder?s.groupOrder-t.groupOrder:s.renderOrder!==t.renderOrder?s.renderOrder-t.renderOrder:s.z!==t.z?t.z-s.z:s.id-t.id}function Jd(){let s=[],t=0,e=[],i=[],a=[];function o(){t=0,e.length=0,i.length=0,a.length=0}function u(m,g,y,M,v,_){let S=s[t];return S===void 0?(S={id:m.id,object:m,geometry:g,material:y,groupOrder:M,renderOrder:m.renderOrder,z:v,group:_},s[t]=S):(S.id=m.id,S.object=m,S.geometry=g,S.material=y,S.groupOrder=M,S.renderOrder=m.renderOrder,S.z=v,S.group=_),t++,S}function c(m,g,y,M,v,_){let S=u(m,g,y,M,v,_);y.transmission>0?i.push(S):y.transparent===!0?a.push(S):e.push(S)}function d(m,g,y,M,v,_){let S=u(m,g,y,M,v,_);y.transmission>0?i.unshift(S):y.transparent===!0?a.unshift(S):e.unshift(S)}function f(m,g){e.length>1&&e.sort(m||EA),i.length>1&&i.sort(g||Zd),a.length>1&&a.sort(g||Zd)}function p(){for(let m=t,g=s.length;m<g;m++){let y=s[m];if(y.id===null)break;y.id=null,y.object=null,y.geometry=null,y.material=null,y.group=null}}return{opaque:e,transmissive:i,transparent:a,init:o,push:c,unshift:d,finish:p,sort:f}}function CA(){let s=new WeakMap;function t(i,a){let o=s.get(i),u;return o===void 0?(u=new Jd,s.set(i,[u])):a>=o.length?(u=new Jd,o.push(u)):u=o[a],u}function e(){s=new WeakMap}return{get:t,dispose:e}}function PA(){let s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new W,color:new be};break;case"SpotLight":e={position:new W,direction:new W,color:new be,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new W,color:new be,distance:0,decay:0};break;case"HemisphereLight":e={direction:new W,skyColor:new be,groundColor:new be};break;case"RectAreaLight":e={color:new be,position:new W,halfWidth:new W,halfHeight:new W};break}return s[t.id]=e,e}}}function LA(){let s={};return{get:function(t){if(s[t.id]!==void 0)return s[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"SpotLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe};break;case"PointLight":e={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new pe,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[t.id]=e,e}}}var RA=0;function IA(s,t){return(t.castShadow?2:0)-(s.castShadow?2:0)+(t.map?1:0)-(s.map?1:0)}function DA(s,t){let e=new PA,i=LA(),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let p=0;p<9;p++)a.probe.push(new W);let o=new W,u=new Ve,c=new Ve;function d(p,m){let g=0,y=0,M=0;for(let ft=0;ft<9;ft++)a.probe[ft].set(0,0,0);let v=0,_=0,S=0,D=0,P=0,E=0,I=0,N=0,H=0,T=0;p.sort(IA);let O=m!==!0?Math.PI:1;for(let ft=0,vt=p.length;ft<vt;ft++){let et=p[ft],X=et.color,nt=et.intensity,lt=et.distance,pt=et.shadow&&et.shadow.map?et.shadow.map.texture:null;if(et.isAmbientLight)g+=X.r*nt*O,y+=X.g*nt*O,M+=X.b*nt*O;else if(et.isLightProbe)for(let it=0;it<9;it++)a.probe[it].addScaledVector(et.sh.coefficients[it],nt);else if(et.isDirectionalLight){let it=e.get(et);if(it.color.copy(et.color).multiplyScalar(et.intensity*O),et.castShadow){let k=et.shadow,Y=i.get(et);Y.shadowBias=k.bias,Y.shadowNormalBias=k.normalBias,Y.shadowRadius=k.radius,Y.shadowMapSize=k.mapSize,a.directionalShadow[v]=Y,a.directionalShadowMap[v]=pt,a.directionalShadowMatrix[v]=et.shadow.matrix,E++}a.directional[v]=it,v++}else if(et.isSpotLight){let it=e.get(et);it.position.setFromMatrixPosition(et.matrixWorld),it.color.copy(X).multiplyScalar(nt*O),it.distance=lt,it.coneCos=Math.cos(et.angle),it.penumbraCos=Math.cos(et.angle*(1-et.penumbra)),it.decay=et.decay,a.spot[S]=it;let k=et.shadow;if(et.map&&(a.spotLightMap[H]=et.map,H++,k.updateMatrices(et),et.castShadow&&T++),a.spotLightMatrix[S]=k.matrix,et.castShadow){let Y=i.get(et);Y.shadowBias=k.bias,Y.shadowNormalBias=k.normalBias,Y.shadowRadius=k.radius,Y.shadowMapSize=k.mapSize,a.spotShadow[S]=Y,a.spotShadowMap[S]=pt,N++}S++}else if(et.isRectAreaLight){let it=e.get(et);it.color.copy(X).multiplyScalar(nt),it.halfWidth.set(et.width*.5,0,0),it.halfHeight.set(0,et.height*.5,0),a.rectArea[D]=it,D++}else if(et.isPointLight){let it=e.get(et);if(it.color.copy(et.color).multiplyScalar(et.intensity*O),it.distance=et.distance,it.decay=et.decay,et.castShadow){let k=et.shadow,Y=i.get(et);Y.shadowBias=k.bias,Y.shadowNormalBias=k.normalBias,Y.shadowRadius=k.radius,Y.shadowMapSize=k.mapSize,Y.shadowCameraNear=k.camera.near,Y.shadowCameraFar=k.camera.far,a.pointShadow[_]=Y,a.pointShadowMap[_]=pt,a.pointShadowMatrix[_]=et.shadow.matrix,I++}a.point[_]=it,_++}else if(et.isHemisphereLight){let it=e.get(et);it.skyColor.copy(et.color).multiplyScalar(nt*O),it.groundColor.copy(et.groundColor).multiplyScalar(nt*O),a.hemi[P]=it,P++}}D>0&&(t.isWebGL2||s.has("OES_texture_float_linear")===!0?(a.rectAreaLTC1=_t.LTC_FLOAT_1,a.rectAreaLTC2=_t.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(a.rectAreaLTC1=_t.LTC_HALF_1,a.rectAreaLTC2=_t.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=g,a.ambient[1]=y,a.ambient[2]=M;let q=a.hash;(q.directionalLength!==v||q.pointLength!==_||q.spotLength!==S||q.rectAreaLength!==D||q.hemiLength!==P||q.numDirectionalShadows!==E||q.numPointShadows!==I||q.numSpotShadows!==N||q.numSpotMaps!==H)&&(a.directional.length=v,a.spot.length=S,a.rectArea.length=D,a.point.length=_,a.hemi.length=P,a.directionalShadow.length=E,a.directionalShadowMap.length=E,a.pointShadow.length=I,a.pointShadowMap.length=I,a.spotShadow.length=N,a.spotShadowMap.length=N,a.directionalShadowMatrix.length=E,a.pointShadowMatrix.length=I,a.spotLightMatrix.length=N+H-T,a.spotLightMap.length=H,a.numSpotLightShadowsWithMaps=T,q.directionalLength=v,q.pointLength=_,q.spotLength=S,q.rectAreaLength=D,q.hemiLength=P,q.numDirectionalShadows=E,q.numPointShadows=I,q.numSpotShadows=N,q.numSpotMaps=H,a.version=RA++)}function f(p,m){let g=0,y=0,M=0,v=0,_=0,S=m.matrixWorldInverse;for(let D=0,P=p.length;D<P;D++){let E=p[D];if(E.isDirectionalLight){let I=a.directional[g];I.direction.setFromMatrixPosition(E.matrixWorld),o.setFromMatrixPosition(E.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(S),g++}else if(E.isSpotLight){let I=a.spot[M];I.position.setFromMatrixPosition(E.matrixWorld),I.position.applyMatrix4(S),I.direction.setFromMatrixPosition(E.matrixWorld),o.setFromMatrixPosition(E.target.matrixWorld),I.direction.sub(o),I.direction.transformDirection(S),M++}else if(E.isRectAreaLight){let I=a.rectArea[v];I.position.setFromMatrixPosition(E.matrixWorld),I.position.applyMatrix4(S),c.identity(),u.copy(E.matrixWorld),u.premultiply(S),c.extractRotation(u),I.halfWidth.set(E.width*.5,0,0),I.halfHeight.set(0,E.height*.5,0),I.halfWidth.applyMatrix4(c),I.halfHeight.applyMatrix4(c),v++}else if(E.isPointLight){let I=a.point[y];I.position.setFromMatrixPosition(E.matrixWorld),I.position.applyMatrix4(S),y++}else if(E.isHemisphereLight){let I=a.hemi[_];I.direction.setFromMatrixPosition(E.matrixWorld),I.direction.transformDirection(S),_++}}}return{setup:d,setupView:f,state:a}}function $d(s,t){let e=new DA(s,t),i=[],a=[];function o(){i.length=0,a.length=0}function u(m){i.push(m)}function c(m){a.push(m)}function d(m){e.setup(i,m)}function f(m){e.setupView(i,m)}return{init:o,state:{lightsArray:i,shadowsArray:a,lights:e},setupLights:d,setupLightsView:f,pushLight:u,pushShadow:c}}function FA(s,t){let e=new WeakMap;function i(o,u=0){let c=e.get(o),d;return c===void 0?(d=new $d(s,t),e.set(o,[d])):u>=c.length?(d=new $d(s,t),c.push(d)):d=c[u],d}function a(){e=new WeakMap}return{get:i,dispose:a}}var Zc=class extends bs{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=tM,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}},Jc=class extends bs{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new W,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}},OA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,NA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function zA(s,t,e){let i=new Eo,a=new pe,o=new pe,u=new ke,c=new Zc({depthPacking:eM}),d=new Jc,f={},p=e.maxTextureSize,m={0:Hn,1:_s,2:er},g=new Oi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new pe},radius:{value:4}},vertexShader:OA,fragmentShader:NA}),y=g.clone();y.defines.HORIZONTAL_PASS=1;let M=new Fi;M.setAttribute("position",new Gn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));let v=new ui(M,g),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Kd,this.render=function(E,I,N){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||E.length===0)return;let H=s.getRenderTarget(),T=s.getActiveCubeFace(),O=s.getActiveMipmapLevel(),q=s.state;q.setBlending(nr),q.buffers.color.setClear(1,1,1,1),q.buffers.depth.setTest(!0),q.setScissorTest(!1);for(let ft=0,vt=E.length;ft<vt;ft++){let et=E[ft],X=et.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",et,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;a.copy(X.mapSize);let nt=X.getFrameExtents();if(a.multiply(nt),o.copy(X.mapSize),(a.x>p||a.y>p)&&(a.x>p&&(o.x=Math.floor(p/nt.x),a.x=o.x*nt.x,X.mapSize.x=o.x),a.y>p&&(o.y=Math.floor(p/nt.y),a.y=o.y*nt.y,X.mapSize.y=o.y)),X.map===null){let pt=this.type!==Ks?{minFilter:pn,magFilter:pn}:{};X.map=new Di(a.x,a.y,pt),X.map.texture.name=et.name+".shadowMap",X.camera.updateProjectionMatrix()}s.setRenderTarget(X.map),s.clear();let lt=X.getViewportCount();for(let pt=0;pt<lt;pt++){let it=X.getViewport(pt);u.set(o.x*it.x,o.y*it.y,o.x*it.z,o.y*it.w),q.viewport(u),X.updateMatrices(et,pt),i=X.getFrustum(),P(I,N,X.camera,et,this.type)}X.isPointLightShadow!==!0&&this.type===Ks&&S(X,N),X.needsUpdate=!1}_.needsUpdate=!1,s.setRenderTarget(H,T,O)};function S(E,I){let N=t.update(v);g.defines.VSM_SAMPLES!==E.blurSamples&&(g.defines.VSM_SAMPLES=E.blurSamples,y.defines.VSM_SAMPLES=E.blurSamples,g.needsUpdate=!0,y.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new Di(a.x,a.y)),g.uniforms.shadow_pass.value=E.map.texture,g.uniforms.resolution.value=E.mapSize,g.uniforms.radius.value=E.radius,s.setRenderTarget(E.mapPass),s.clear(),s.renderBufferDirect(I,null,N,g,v,null),y.uniforms.shadow_pass.value=E.mapPass.texture,y.uniforms.resolution.value=E.mapSize,y.uniforms.radius.value=E.radius,s.setRenderTarget(E.map),s.clear(),s.renderBufferDirect(I,null,N,y,v,null)}function D(E,I,N,H,T,O){let q=null,ft=N.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(ft!==void 0?q=ft:q=N.isPointLight===!0?d:c,s.localClippingEnabled&&I.clipShadows===!0&&Array.isArray(I.clippingPlanes)&&I.clippingPlanes.length!==0||I.displacementMap&&I.displacementScale!==0||I.alphaMap&&I.alphaTest>0){let vt=q.uuid,et=I.uuid,X=f[vt];X===void 0&&(X={},f[vt]=X);let nt=X[et];nt===void 0&&(nt=q.clone(),X[et]=nt),q=nt}return q.visible=I.visible,q.wireframe=I.wireframe,O===Ks?q.side=I.shadowSide!==null?I.shadowSide:I.side:q.side=I.shadowSide!==null?I.shadowSide:m[I.side],q.alphaMap=I.alphaMap,q.alphaTest=I.alphaTest,q.clipShadows=I.clipShadows,q.clippingPlanes=I.clippingPlanes,q.clipIntersection=I.clipIntersection,q.displacementMap=I.displacementMap,q.displacementScale=I.displacementScale,q.displacementBias=I.displacementBias,q.wireframeLinewidth=I.wireframeLinewidth,q.linewidth=I.linewidth,N.isPointLight===!0&&q.isMeshDistanceMaterial===!0&&(q.referencePosition.setFromMatrixPosition(N.matrixWorld),q.nearDistance=H,q.farDistance=T),q}function P(E,I,N,H,T){if(E.visible===!1)return;if(E.layers.test(I.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&T===Ks)&&(!E.frustumCulled||i.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,E.matrixWorld);let ft=t.update(E),vt=E.material;if(Array.isArray(vt)){let et=ft.groups;for(let X=0,nt=et.length;X<nt;X++){let lt=et[X],pt=vt[lt.materialIndex];if(pt&&pt.visible){let it=D(E,pt,H,N.near,N.far,T);s.renderBufferDirect(N,null,ft,it,E,lt)}}}else if(vt.visible){let et=D(E,vt,H,N.near,N.far,T);s.renderBufferDirect(N,null,ft,et,E,null)}}let q=E.children;for(let ft=0,vt=q.length;ft<vt;ft++)P(q[ft],I,N,H,T)}}function UA(s,t,e){let i=e.isWebGL2;function a(){let z=!1,$=new ke,ht=null,Mt=new ke(0,0,0,0);return{setMask:function(Ct){ht!==Ct&&!z&&(s.colorMask(Ct,Ct,Ct,Ct),ht=Ct)},setLocked:function(Ct){z=Ct},setClear:function(Ct,ae,Pe,qe,fi){fi===!0&&(Ct*=qe,ae*=qe,Pe*=qe),$.set(Ct,ae,Pe,qe),Mt.equals($)===!1&&(s.clearColor(Ct,ae,Pe,qe),Mt.copy($))},reset:function(){z=!1,ht=null,Mt.set(-1,0,0,0)}}}function o(){let z=!1,$=null,ht=null,Mt=null;return{setTest:function(Ct){Ct?re(2929):Vt(2929)},setMask:function(Ct){$!==Ct&&!z&&(s.depthMask(Ct),$=Ct)},setFunc:function(Ct){if(ht!==Ct){switch(Ct){case Sb:s.depthFunc(512);break;case Ab:s.depthFunc(519);break;case Tb:s.depthFunc(513);break;case Lc:s.depthFunc(515);break;case Eb:s.depthFunc(514);break;case Cb:s.depthFunc(518);break;case Pb:s.depthFunc(516);break;case Lb:s.depthFunc(517);break;default:s.depthFunc(515)}ht=Ct}},setLocked:function(Ct){z=Ct},setClear:function(Ct){Mt!==Ct&&(s.clearDepth(Ct),Mt=Ct)},reset:function(){z=!1,$=null,ht=null,Mt=null}}}function u(){let z=!1,$=null,ht=null,Mt=null,Ct=null,ae=null,Pe=null,qe=null,fi=null;return{setTest:function(ve){z||(ve?re(2960):Vt(2960))},setMask:function(ve){$!==ve&&!z&&(s.stencilMask(ve),$=ve)},setFunc:function(ve,_n,cn){(ht!==ve||Mt!==_n||Ct!==cn)&&(s.stencilFunc(ve,_n,cn),ht=ve,Mt=_n,Ct=cn)},setOp:function(ve,_n,cn){(ae!==ve||Pe!==_n||qe!==cn)&&(s.stencilOp(ve,_n,cn),ae=ve,Pe=_n,qe=cn)},setLocked:function(ve){z=ve},setClear:function(ve){fi!==ve&&(s.clearStencil(ve),fi=ve)},reset:function(){z=!1,$=null,ht=null,Mt=null,Ct=null,ae=null,Pe=null,qe=null,fi=null}}}let c=new a,d=new o,f=new u,p=new WeakMap,m=new WeakMap,g={},y={},M=new WeakMap,v=[],_=null,S=!1,D=null,P=null,E=null,I=null,N=null,H=null,T=null,O=!1,q=null,ft=null,vt=null,et=null,X=null,nt=s.getParameter(35661),lt=!1,pt=0,it=s.getParameter(7938);it.indexOf("WebGL")!==-1?(pt=parseFloat(/^WebGL (\d)/.exec(it)[1]),lt=pt>=1):it.indexOf("OpenGL ES")!==-1&&(pt=parseFloat(/^OpenGL ES (\d)/.exec(it)[1]),lt=pt>=2);let k=null,Y={},gt=s.getParameter(3088),ct=s.getParameter(2978),mt=new ke().fromArray(gt),At=new ke().fromArray(ct);function Ht(z,$,ht){let Mt=new Uint8Array(4),Ct=s.createTexture();s.bindTexture(z,Ct),s.texParameteri(z,10241,9728),s.texParameteri(z,10240,9728);for(let ae=0;ae<ht;ae++)s.texImage2D($+ae,0,6408,1,1,0,6408,5121,Mt);return Ct}let rt={};rt[3553]=Ht(3553,3553,1),rt[34067]=Ht(34067,34069,6),c.setClear(0,0,0,1),d.setClear(1),f.setClear(0),re(2929),d.setFunc(Lc),Ge(!1),Rn(Uf),re(2884),Oe(nr);function re(z){g[z]!==!0&&(s.enable(z),g[z]=!0)}function Vt(z){g[z]!==!1&&(s.disable(z),g[z]=!1)}function Bt(z,$){return y[z]!==$?(s.bindFramebuffer(z,$),y[z]=$,i&&(z===36009&&(y[36160]=$),z===36160&&(y[36009]=$)),!0):!1}function St(z,$){let ht=v,Mt=!1;if(z)if(ht=M.get($),ht===void 0&&(ht=[],M.set($,ht)),z.isWebGLMultipleRenderTargets){let Ct=z.texture;if(ht.length!==Ct.length||ht[0]!==36064){for(let ae=0,Pe=Ct.length;ae<Pe;ae++)ht[ae]=36064+ae;ht.length=Ct.length,Mt=!0}}else ht[0]!==36064&&(ht[0]=36064,Mt=!0);else ht[0]!==1029&&(ht[0]=1029,Mt=!0);Mt&&(e.isWebGL2?s.drawBuffers(ht):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(ht))}function fe(z){return _!==z?(s.useProgram(z),_=z,!0):!1}let Ut={[hs]:32774,[db]:32778,[pb]:32779};if(i)Ut[Wf]=32775,Ut[Hf]=32776;else{let z=t.get("EXT_blend_minmax");z!==null&&(Ut[Wf]=z.MIN_EXT,Ut[Hf]=z.MAX_EXT)}let Lt={[mb]:0,[gb]:1,[_b]:768,[Qd]:770,[wb]:776,[bb]:774,[xb]:772,[vb]:769,[jd]:771,[Mb]:775,[yb]:773};function Oe(z,$,ht,Mt,Ct,ae,Pe,qe){if(z===nr){S===!0&&(Vt(3042),S=!1);return}if(S===!1&&(re(3042),S=!0),z!==fb){if(z!==D||qe!==O){if((P!==hs||N!==hs)&&(s.blendEquation(32774),P=hs,N=hs),qe)switch(z){case ps:s.blendFuncSeparate(1,771,1,771);break;case Bf:s.blendFunc(1,1);break;case kf:s.blendFuncSeparate(0,769,0,1);break;case Vf:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}else switch(z){case ps:s.blendFuncSeparate(770,771,1,771);break;case Bf:s.blendFunc(770,1);break;case kf:s.blendFuncSeparate(0,769,0,1);break;case Vf:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",z);break}E=null,I=null,H=null,T=null,D=z,O=qe}return}Ct=Ct||$,ae=ae||ht,Pe=Pe||Mt,($!==P||Ct!==N)&&(s.blendEquationSeparate(Ut[$],Ut[Ct]),P=$,N=Ct),(ht!==E||Mt!==I||ae!==H||Pe!==T)&&(s.blendFuncSeparate(Lt[ht],Lt[Mt],Lt[ae],Lt[Pe]),E=ht,I=Mt,H=ae,T=Pe),D=z,O=null}function Me(z,$){z.side===er?Vt(2884):re(2884);let ht=z.side===Hn;$&&(ht=!ht),Ge(ht),z.blending===ps&&z.transparent===!1?Oe(nr):Oe(z.blending,z.blendEquation,z.blendSrc,z.blendDst,z.blendEquationAlpha,z.blendSrcAlpha,z.blendDstAlpha,z.premultipliedAlpha),d.setFunc(z.depthFunc),d.setTest(z.depthTest),d.setMask(z.depthWrite),c.setMask(z.colorWrite);let Mt=z.stencilWrite;f.setTest(Mt),Mt&&(f.setMask(z.stencilWriteMask),f.setFunc(z.stencilFunc,z.stencilRef,z.stencilFuncMask),f.setOp(z.stencilFail,z.stencilZFail,z.stencilZPass)),$t(z.polygonOffset,z.polygonOffsetFactor,z.polygonOffsetUnits),z.alphaToCoverage===!0?re(32926):Vt(32926)}function Ge(z){q!==z&&(z?s.frontFace(2304):s.frontFace(2305),q=z)}function Rn(z){z!==cb?(re(2884),z!==ft&&(z===Uf?s.cullFace(1029):z===ub?s.cullFace(1028):s.cullFace(1032))):Vt(2884),ft=z}function Se(z){z!==vt&&(lt&&s.lineWidth(z),vt=z)}function $t(z,$,ht){z?(re(32823),(et!==$||X!==ht)&&(s.polygonOffset($,ht),et=$,X=ht)):Vt(32823)}function en(z){z?re(3089):Vt(3089)}function ln(z){z===void 0&&(z=33984+nt-1),k!==z&&(s.activeTexture(z),k=z)}function L(z,$,ht){ht===void 0&&(k===null?ht=33984+nt-1:ht=k);let Mt=Y[ht];Mt===void 0&&(Mt={type:void 0,texture:void 0},Y[ht]=Mt),(Mt.type!==z||Mt.texture!==$)&&(k!==ht&&(s.activeTexture(ht),k=ht),s.bindTexture(z,$||rt[z]),Mt.type=z,Mt.texture=$)}function A(){let z=Y[k];z!==void 0&&z.type!==void 0&&(s.bindTexture(z.type,null),z.type=void 0,z.texture=void 0)}function Q(){try{s.compressedTexImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function ut(){try{s.compressedTexImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function dt(){try{s.texSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function yt(){try{s.texSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function kt(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function bt(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function st(){try{s.texStorage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function It(){try{s.texStorage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Ft(){try{s.texImage2D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Tt(){try{s.texImage3D.apply(s,arguments)}catch(z){console.error("THREE.WebGLState:",z)}}function Dt(z){mt.equals(z)===!1&&(s.scissor(z.x,z.y,z.z,z.w),mt.copy(z))}function Pt(z){At.equals(z)===!1&&(s.viewport(z.x,z.y,z.z,z.w),At.copy(z))}function se(z,$){let ht=m.get($);ht===void 0&&(ht=new WeakMap,m.set($,ht));let Mt=ht.get(z);Mt===void 0&&(Mt=s.getUniformBlockIndex($,z.name),ht.set(z,Mt))}function _e(z,$){let Mt=m.get($).get(z);p.get(z)!==Mt&&(s.uniformBlockBinding($,Mt,z.__bindingPointIndex),p.set(z,Mt))}function De(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),i===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),g={},k=null,Y={},y={},M=new WeakMap,v=[],_=null,S=!1,D=null,P=null,E=null,I=null,N=null,H=null,T=null,O=!1,q=null,ft=null,vt=null,et=null,X=null,mt.set(0,0,s.canvas.width,s.canvas.height),At.set(0,0,s.canvas.width,s.canvas.height),c.reset(),d.reset(),f.reset()}return{buffers:{color:c,depth:d,stencil:f},enable:re,disable:Vt,bindFramebuffer:Bt,drawBuffers:St,useProgram:fe,setBlending:Oe,setMaterial:Me,setFlipSided:Ge,setCullFace:Rn,setLineWidth:Se,setPolygonOffset:$t,setScissorTest:en,activeTexture:ln,bindTexture:L,unbindTexture:A,compressedTexImage2D:Q,compressedTexImage3D:ut,texImage2D:Ft,texImage3D:Tt,updateUBOMapping:se,uniformBlockBinding:_e,texStorage2D:st,texStorage3D:It,texSubImage2D:dt,texSubImage3D:yt,compressedTexSubImage2D:kt,compressedTexSubImage3D:bt,scissor:Dt,viewport:Pt,reset:De}}function BA(s,t,e,i,a,o,u){let c=a.isWebGL2,d=a.maxTextures,f=a.maxCubemapSize,p=a.maxTextureSize,m=a.maxSamples,g=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,y=/OculusBrowser/g.test(typeof navigator=="undefined"?"":navigator.userAgent),M=new WeakMap,v,_=new WeakMap,S=!1;try{S=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(L){}function D(L,A){return S?new OffscreenCanvas(L,A):_o("canvas")}function P(L,A,Q,ut){let dt=1;if((L.width>ut||L.height>ut)&&(dt=ut/Math.max(L.width,L.height)),dt<1||A===!0)if(typeof HTMLImageElement!="undefined"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&L instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&L instanceof ImageBitmap){let yt=A?Nc:Math.floor,kt=yt(dt*L.width),bt=yt(dt*L.height);v===void 0&&(v=D(kt,bt));let st=Q?D(kt,bt):v;return st.width=kt,st.height=bt,st.getContext("2d").drawImage(L,0,0,kt,bt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+L.width+"x"+L.height+") to ("+kt+"x"+bt+")."),st}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+L.width+"x"+L.height+")."),L;return L}function E(L){return xd(L.width)&&xd(L.height)}function I(L){return c?!1:L.wrapS!==ti||L.wrapT!==ti||L.minFilter!==pn&&L.minFilter!==Wn}function N(L,A){return L.generateMipmaps&&A&&L.minFilter!==pn&&L.minFilter!==Wn}function H(L){s.generateMipmap(L)}function T(L,A,Q,ut,dt=!1){if(c===!1)return A;if(L!==null){if(s[L]!==void 0)return s[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let yt=A;return A===6403&&(Q===5126&&(yt=33326),Q===5131&&(yt=33325),Q===5121&&(yt=33321)),A===33319&&(Q===5126&&(yt=33328),Q===5131&&(yt=33327),Q===5121&&(yt=33323)),A===6408&&(Q===5126&&(yt=34836),Q===5131&&(yt=34842),Q===5121&&(yt=ut===Ce&&dt===!1?35907:32856),Q===32819&&(yt=32854),Q===32820&&(yt=32855)),(yt===33325||yt===33326||yt===33327||yt===33328||yt===34842||yt===34836)&&t.get("EXT_color_buffer_float"),yt}function O(L,A,Q){return N(L,Q)===!0||L.isFramebufferTexture&&L.minFilter!==pn&&L.minFilter!==Wn?Math.log2(Math.max(A.width,A.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?A.mipmaps.length:1}function q(L){return L===pn||L===Gf||L===qf?9728:9729}function ft(L){let A=L.target;A.removeEventListener("dispose",ft),et(A),A.isVideoTexture&&M.delete(A)}function vt(L){let A=L.target;A.removeEventListener("dispose",vt),nt(A)}function et(L){let A=i.get(L);if(A.__webglInit===void 0)return;let Q=L.source,ut=_.get(Q);if(ut){let dt=ut[A.__cacheKey];dt.usedTimes--,dt.usedTimes===0&&X(L),Object.keys(ut).length===0&&_.delete(Q)}i.remove(L)}function X(L){let A=i.get(L);s.deleteTexture(A.__webglTexture);let Q=L.source,ut=_.get(Q);delete ut[A.__cacheKey],u.memory.textures--}function nt(L){let A=L.texture,Q=i.get(L),ut=i.get(A);if(ut.__webglTexture!==void 0&&(s.deleteTexture(ut.__webglTexture),u.memory.textures--),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let dt=0;dt<6;dt++)s.deleteFramebuffer(Q.__webglFramebuffer[dt]),Q.__webglDepthbuffer&&s.deleteRenderbuffer(Q.__webglDepthbuffer[dt]);else{if(s.deleteFramebuffer(Q.__webglFramebuffer),Q.__webglDepthbuffer&&s.deleteRenderbuffer(Q.__webglDepthbuffer),Q.__webglMultisampledFramebuffer&&s.deleteFramebuffer(Q.__webglMultisampledFramebuffer),Q.__webglColorRenderbuffer)for(let dt=0;dt<Q.__webglColorRenderbuffer.length;dt++)Q.__webglColorRenderbuffer[dt]&&s.deleteRenderbuffer(Q.__webglColorRenderbuffer[dt]);Q.__webglDepthRenderbuffer&&s.deleteRenderbuffer(Q.__webglDepthRenderbuffer)}if(L.isWebGLMultipleRenderTargets)for(let dt=0,yt=A.length;dt<yt;dt++){let kt=i.get(A[dt]);kt.__webglTexture&&(s.deleteTexture(kt.__webglTexture),u.memory.textures--),i.remove(A[dt])}i.remove(A),i.remove(L)}let lt=0;function pt(){lt=0}function it(){let L=lt;return L>=d&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+d),lt+=1,L}function k(L){let A=[];return A.push(L.wrapS),A.push(L.wrapT),A.push(L.wrapR||0),A.push(L.magFilter),A.push(L.minFilter),A.push(L.anisotropy),A.push(L.internalFormat),A.push(L.format),A.push(L.type),A.push(L.generateMipmaps),A.push(L.premultiplyAlpha),A.push(L.flipY),A.push(L.unpackAlignment),A.push(L.encoding),A.join()}function Y(L,A){let Q=i.get(L);if(L.isVideoTexture&&en(L),L.isRenderTargetTexture===!1&&L.version>0&&Q.__version!==L.version){let ut=L.image;if(ut===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ut.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Vt(Q,L,A);return}}e.bindTexture(3553,Q.__webglTexture,33984+A)}function gt(L,A){let Q=i.get(L);if(L.version>0&&Q.__version!==L.version){Vt(Q,L,A);return}e.bindTexture(35866,Q.__webglTexture,33984+A)}function ct(L,A){let Q=i.get(L);if(L.version>0&&Q.__version!==L.version){Vt(Q,L,A);return}e.bindTexture(32879,Q.__webglTexture,33984+A)}function mt(L,A){let Q=i.get(L);if(L.version>0&&Q.__version!==L.version){Bt(Q,L,A);return}e.bindTexture(34067,Q.__webglTexture,33984+A)}let At={[Dc]:10497,[ti]:33071,[Fc]:33648},Ht={[pn]:9728,[Gf]:9984,[qf]:9986,[Wn]:9729,[Ub]:9985,[Lo]:9987};function rt(L,A,Q){if(Q?(s.texParameteri(L,10242,At[A.wrapS]),s.texParameteri(L,10243,At[A.wrapT]),(L===32879||L===35866)&&s.texParameteri(L,32882,At[A.wrapR]),s.texParameteri(L,10240,Ht[A.magFilter]),s.texParameteri(L,10241,Ht[A.minFilter])):(s.texParameteri(L,10242,33071),s.texParameteri(L,10243,33071),(L===32879||L===35866)&&s.texParameteri(L,32882,33071),(A.wrapS!==ti||A.wrapT!==ti)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(L,10240,q(A.magFilter)),s.texParameteri(L,10241,q(A.minFilter)),A.minFilter!==pn&&A.minFilter!==Wn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),t.has("EXT_texture_filter_anisotropic")===!0){let ut=t.get("EXT_texture_filter_anisotropic");if(A.type===Mr&&t.has("OES_texture_float_linear")===!1||c===!1&&A.type===ta&&t.has("OES_texture_half_float_linear")===!1)return;(A.anisotropy>1||i.get(A).__currentAnisotropy)&&(s.texParameterf(L,ut.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,a.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy)}}function re(L,A){let Q=!1;L.__webglInit===void 0&&(L.__webglInit=!0,A.addEventListener("dispose",ft));let ut=A.source,dt=_.get(ut);dt===void 0&&(dt={},_.set(ut,dt));let yt=k(A);if(yt!==L.__cacheKey){dt[yt]===void 0&&(dt[yt]={texture:s.createTexture(),usedTimes:0},u.memory.textures++,Q=!0),dt[yt].usedTimes++;let kt=dt[L.__cacheKey];kt!==void 0&&(dt[L.__cacheKey].usedTimes--,kt.usedTimes===0&&X(A)),L.__cacheKey=yt,L.__webglTexture=dt[yt].texture}return Q}function Vt(L,A,Q){let ut=3553;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(ut=35866),A.isData3DTexture&&(ut=32879);let dt=re(L,A),yt=A.source;e.bindTexture(ut,L.__webglTexture,33984+Q);let kt=i.get(yt);if(yt.version!==kt.__version||dt===!0){e.activeTexture(33984+Q),s.pixelStorei(37440,A.flipY),s.pixelStorei(37441,A.premultiplyAlpha),s.pixelStorei(3317,A.unpackAlignment),s.pixelStorei(37443,0);let bt=I(A)&&E(A.image)===!1,st=P(A.image,bt,!1,p);st=ln(A,st);let It=E(st)||c,Ft=o.convert(A.format,A.encoding),Tt=o.convert(A.type),Dt=T(A.internalFormat,Ft,Tt,A.encoding,A.isVideoTexture);rt(ut,A,It);let Pt,se=A.mipmaps,_e=c&&A.isVideoTexture!==!0,De=kt.__version===void 0||dt===!0,z=O(A,st,It);if(A.isDepthTexture)Dt=6402,c?A.type===Mr?Dt=36012:A.type===br?Dt=33190:A.type===ms?Dt=35056:Dt=33189:A.type===Mr&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),A.format===Sr&&Dt===6402&&A.type!==np&&A.type!==br&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),A.type=br,Tt=o.convert(A.type)),A.format===ys&&Dt===6402&&(Dt=34041,A.type!==ms&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),A.type=ms,Tt=o.convert(A.type))),De&&(_e?e.texStorage2D(3553,1,Dt,st.width,st.height):e.texImage2D(3553,0,Dt,st.width,st.height,0,Ft,Tt,null));else if(A.isDataTexture)if(se.length>0&&It){_e&&De&&e.texStorage2D(3553,z,Dt,se[0].width,se[0].height);for(let $=0,ht=se.length;$<ht;$++)Pt=se[$],_e?e.texSubImage2D(3553,$,0,0,Pt.width,Pt.height,Ft,Tt,Pt.data):e.texImage2D(3553,$,Dt,Pt.width,Pt.height,0,Ft,Tt,Pt.data);A.generateMipmaps=!1}else _e?(De&&e.texStorage2D(3553,z,Dt,st.width,st.height),e.texSubImage2D(3553,0,0,0,st.width,st.height,Ft,Tt,st.data)):e.texImage2D(3553,0,Dt,st.width,st.height,0,Ft,Tt,st.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){_e&&De&&e.texStorage3D(35866,z,Dt,se[0].width,se[0].height,st.depth);for(let $=0,ht=se.length;$<ht;$++)Pt=se[$],A.format!==ei?Ft!==null?_e?e.compressedTexSubImage3D(35866,$,0,0,0,Pt.width,Pt.height,st.depth,Ft,Pt.data,0,0):e.compressedTexImage3D(35866,$,Dt,Pt.width,Pt.height,st.depth,0,Pt.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_e?e.texSubImage3D(35866,$,0,0,0,Pt.width,Pt.height,st.depth,Ft,Tt,Pt.data):e.texImage3D(35866,$,Dt,Pt.width,Pt.height,st.depth,0,Ft,Tt,Pt.data)}else{_e&&De&&e.texStorage2D(3553,z,Dt,se[0].width,se[0].height);for(let $=0,ht=se.length;$<ht;$++)Pt=se[$],A.format!==ei?Ft!==null?_e?e.compressedTexSubImage2D(3553,$,0,0,Pt.width,Pt.height,Ft,Pt.data):e.compressedTexImage2D(3553,$,Dt,Pt.width,Pt.height,0,Pt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):_e?e.texSubImage2D(3553,$,0,0,Pt.width,Pt.height,Ft,Tt,Pt.data):e.texImage2D(3553,$,Dt,Pt.width,Pt.height,0,Ft,Tt,Pt.data)}else if(A.isDataArrayTexture)_e?(De&&e.texStorage3D(35866,z,Dt,st.width,st.height,st.depth),e.texSubImage3D(35866,0,0,0,0,st.width,st.height,st.depth,Ft,Tt,st.data)):e.texImage3D(35866,0,Dt,st.width,st.height,st.depth,0,Ft,Tt,st.data);else if(A.isData3DTexture)_e?(De&&e.texStorage3D(32879,z,Dt,st.width,st.height,st.depth),e.texSubImage3D(32879,0,0,0,0,st.width,st.height,st.depth,Ft,Tt,st.data)):e.texImage3D(32879,0,Dt,st.width,st.height,st.depth,0,Ft,Tt,st.data);else if(A.isFramebufferTexture){if(De)if(_e)e.texStorage2D(3553,z,Dt,st.width,st.height);else{let $=st.width,ht=st.height;for(let Mt=0;Mt<z;Mt++)e.texImage2D(3553,Mt,Dt,$,ht,0,Ft,Tt,null),$>>=1,ht>>=1}}else if(se.length>0&&It){_e&&De&&e.texStorage2D(3553,z,Dt,se[0].width,se[0].height);for(let $=0,ht=se.length;$<ht;$++)Pt=se[$],_e?e.texSubImage2D(3553,$,0,0,Ft,Tt,Pt):e.texImage2D(3553,$,Dt,Ft,Tt,Pt);A.generateMipmaps=!1}else _e?(De&&e.texStorage2D(3553,z,Dt,st.width,st.height),e.texSubImage2D(3553,0,0,0,Ft,Tt,st)):e.texImage2D(3553,0,Dt,Ft,Tt,st);N(A,It)&&H(ut),kt.__version=yt.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function Bt(L,A,Q){if(A.image.length!==6)return;let ut=re(L,A),dt=A.source;e.bindTexture(34067,L.__webglTexture,33984+Q);let yt=i.get(dt);if(dt.version!==yt.__version||ut===!0){e.activeTexture(33984+Q),s.pixelStorei(37440,A.flipY),s.pixelStorei(37441,A.premultiplyAlpha),s.pixelStorei(3317,A.unpackAlignment),s.pixelStorei(37443,0);let kt=A.isCompressedTexture||A.image[0].isCompressedTexture,bt=A.image[0]&&A.image[0].isDataTexture,st=[];for(let $=0;$<6;$++)!kt&&!bt?st[$]=P(A.image[$],!1,!0,f):st[$]=bt?A.image[$].image:A.image[$],st[$]=ln(A,st[$]);let It=st[0],Ft=E(It)||c,Tt=o.convert(A.format,A.encoding),Dt=o.convert(A.type),Pt=T(A.internalFormat,Tt,Dt,A.encoding),se=c&&A.isVideoTexture!==!0,_e=yt.__version===void 0||ut===!0,De=O(A,It,Ft);rt(34067,A,Ft);let z;if(kt){se&&_e&&e.texStorage2D(34067,De,Pt,It.width,It.height);for(let $=0;$<6;$++){z=st[$].mipmaps;for(let ht=0;ht<z.length;ht++){let Mt=z[ht];A.format!==ei?Tt!==null?se?e.compressedTexSubImage2D(34069+$,ht,0,0,Mt.width,Mt.height,Tt,Mt.data):e.compressedTexImage2D(34069+$,ht,Pt,Mt.width,Mt.height,0,Mt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):se?e.texSubImage2D(34069+$,ht,0,0,Mt.width,Mt.height,Tt,Dt,Mt.data):e.texImage2D(34069+$,ht,Pt,Mt.width,Mt.height,0,Tt,Dt,Mt.data)}}}else{z=A.mipmaps,se&&_e&&(z.length>0&&De++,e.texStorage2D(34067,De,Pt,st[0].width,st[0].height));for(let $=0;$<6;$++)if(bt){se?e.texSubImage2D(34069+$,0,0,0,st[$].width,st[$].height,Tt,Dt,st[$].data):e.texImage2D(34069+$,0,Pt,st[$].width,st[$].height,0,Tt,Dt,st[$].data);for(let ht=0;ht<z.length;ht++){let Ct=z[ht].image[$].image;se?e.texSubImage2D(34069+$,ht+1,0,0,Ct.width,Ct.height,Tt,Dt,Ct.data):e.texImage2D(34069+$,ht+1,Pt,Ct.width,Ct.height,0,Tt,Dt,Ct.data)}}else{se?e.texSubImage2D(34069+$,0,0,0,Tt,Dt,st[$]):e.texImage2D(34069+$,0,Pt,Tt,Dt,st[$]);for(let ht=0;ht<z.length;ht++){let Mt=z[ht];se?e.texSubImage2D(34069+$,ht+1,0,0,Tt,Dt,Mt.image[$]):e.texImage2D(34069+$,ht+1,Pt,Tt,Dt,Mt.image[$])}}}N(A,Ft)&&H(34067),yt.__version=dt.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function St(L,A,Q,ut,dt){let yt=o.convert(Q.format,Q.encoding),kt=o.convert(Q.type),bt=T(Q.internalFormat,yt,kt,Q.encoding);i.get(A).__hasExternalTextures||(dt===32879||dt===35866?e.texImage3D(dt,0,bt,A.width,A.height,A.depth,0,yt,kt,null):e.texImage2D(dt,0,bt,A.width,A.height,0,yt,kt,null)),e.bindFramebuffer(36160,L),$t(A)?g.framebufferTexture2DMultisampleEXT(36160,ut,dt,i.get(Q).__webglTexture,0,Se(A)):(dt===3553||dt>=34069&&dt<=34074)&&s.framebufferTexture2D(36160,ut,dt,i.get(Q).__webglTexture,0),e.bindFramebuffer(36160,null)}function fe(L,A,Q){if(s.bindRenderbuffer(36161,L),A.depthBuffer&&!A.stencilBuffer){let ut=33189;if(Q||$t(A)){let dt=A.depthTexture;dt&&dt.isDepthTexture&&(dt.type===Mr?ut=36012:dt.type===br&&(ut=33190));let yt=Se(A);$t(A)?g.renderbufferStorageMultisampleEXT(36161,yt,ut,A.width,A.height):s.renderbufferStorageMultisample(36161,yt,ut,A.width,A.height)}else s.renderbufferStorage(36161,ut,A.width,A.height);s.framebufferRenderbuffer(36160,36096,36161,L)}else if(A.depthBuffer&&A.stencilBuffer){let ut=Se(A);Q&&$t(A)===!1?s.renderbufferStorageMultisample(36161,ut,35056,A.width,A.height):$t(A)?g.renderbufferStorageMultisampleEXT(36161,ut,35056,A.width,A.height):s.renderbufferStorage(36161,34041,A.width,A.height),s.framebufferRenderbuffer(36160,33306,36161,L)}else{let ut=A.isWebGLMultipleRenderTargets===!0?A.texture:[A.texture];for(let dt=0;dt<ut.length;dt++){let yt=ut[dt],kt=o.convert(yt.format,yt.encoding),bt=o.convert(yt.type),st=T(yt.internalFormat,kt,bt,yt.encoding),It=Se(A);Q&&$t(A)===!1?s.renderbufferStorageMultisample(36161,It,st,A.width,A.height):$t(A)?g.renderbufferStorageMultisampleEXT(36161,It,st,A.width,A.height):s.renderbufferStorage(36161,st,A.width,A.height)}}s.bindRenderbuffer(36161,null)}function Ut(L,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(36160,L),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),Y(A.depthTexture,0);let ut=i.get(A.depthTexture).__webglTexture,dt=Se(A);if(A.depthTexture.format===Sr)$t(A)?g.framebufferTexture2DMultisampleEXT(36160,36096,3553,ut,0,dt):s.framebufferTexture2D(36160,36096,3553,ut,0);else if(A.depthTexture.format===ys)$t(A)?g.framebufferTexture2DMultisampleEXT(36160,33306,3553,ut,0,dt):s.framebufferTexture2D(36160,33306,3553,ut,0);else throw new Error("Unknown depthTexture format")}function Lt(L){let A=i.get(L),Q=L.isWebGLCubeRenderTarget===!0;if(L.depthTexture&&!A.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");Ut(A.__webglFramebuffer,L)}else if(Q){A.__webglDepthbuffer=[];for(let ut=0;ut<6;ut++)e.bindFramebuffer(36160,A.__webglFramebuffer[ut]),A.__webglDepthbuffer[ut]=s.createRenderbuffer(),fe(A.__webglDepthbuffer[ut],L,!1)}else e.bindFramebuffer(36160,A.__webglFramebuffer),A.__webglDepthbuffer=s.createRenderbuffer(),fe(A.__webglDepthbuffer,L,!1);e.bindFramebuffer(36160,null)}function Oe(L,A,Q){let ut=i.get(L);A!==void 0&&St(ut.__webglFramebuffer,L,L.texture,36064,3553),Q!==void 0&&Lt(L)}function Me(L){let A=L.texture,Q=i.get(L),ut=i.get(A);L.addEventListener("dispose",vt),L.isWebGLMultipleRenderTargets!==!0&&(ut.__webglTexture===void 0&&(ut.__webglTexture=s.createTexture()),ut.__version=A.version,u.memory.textures++);let dt=L.isWebGLCubeRenderTarget===!0,yt=L.isWebGLMultipleRenderTargets===!0,kt=E(L)||c;if(dt){Q.__webglFramebuffer=[];for(let bt=0;bt<6;bt++)Q.__webglFramebuffer[bt]=s.createFramebuffer()}else{if(Q.__webglFramebuffer=s.createFramebuffer(),yt)if(a.drawBuffers){let bt=L.texture;for(let st=0,It=bt.length;st<It;st++){let Ft=i.get(bt[st]);Ft.__webglTexture===void 0&&(Ft.__webglTexture=s.createTexture(),u.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&L.samples>0&&$t(L)===!1){let bt=yt?A:[A];Q.__webglMultisampledFramebuffer=s.createFramebuffer(),Q.__webglColorRenderbuffer=[],e.bindFramebuffer(36160,Q.__webglMultisampledFramebuffer);for(let st=0;st<bt.length;st++){let It=bt[st];Q.__webglColorRenderbuffer[st]=s.createRenderbuffer(),s.bindRenderbuffer(36161,Q.__webglColorRenderbuffer[st]);let Ft=o.convert(It.format,It.encoding),Tt=o.convert(It.type),Dt=T(It.internalFormat,Ft,Tt,It.encoding,L.isXRRenderTarget===!0),Pt=Se(L);s.renderbufferStorageMultisample(36161,Pt,Dt,L.width,L.height),s.framebufferRenderbuffer(36160,36064+st,36161,Q.__webglColorRenderbuffer[st])}s.bindRenderbuffer(36161,null),L.depthBuffer&&(Q.__webglDepthRenderbuffer=s.createRenderbuffer(),fe(Q.__webglDepthRenderbuffer,L,!0)),e.bindFramebuffer(36160,null)}}if(dt){e.bindTexture(34067,ut.__webglTexture),rt(34067,A,kt);for(let bt=0;bt<6;bt++)St(Q.__webglFramebuffer[bt],L,A,36064,34069+bt);N(A,kt)&&H(34067),e.unbindTexture()}else if(yt){let bt=L.texture;for(let st=0,It=bt.length;st<It;st++){let Ft=bt[st],Tt=i.get(Ft);e.bindTexture(3553,Tt.__webglTexture),rt(3553,Ft,kt),St(Q.__webglFramebuffer,L,Ft,36064+st,3553),N(Ft,kt)&&H(3553)}e.unbindTexture()}else{let bt=3553;(L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(c?bt=L.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),e.bindTexture(bt,ut.__webglTexture),rt(bt,A,kt),St(Q.__webglFramebuffer,L,A,36064,bt),N(A,kt)&&H(bt),e.unbindTexture()}L.depthBuffer&&Lt(L)}function Ge(L){let A=E(L)||c,Q=L.isWebGLMultipleRenderTargets===!0?L.texture:[L.texture];for(let ut=0,dt=Q.length;ut<dt;ut++){let yt=Q[ut];if(N(yt,A)){let kt=L.isWebGLCubeRenderTarget?34067:3553,bt=i.get(yt).__webglTexture;e.bindTexture(kt,bt),H(kt),e.unbindTexture()}}}function Rn(L){if(c&&L.samples>0&&$t(L)===!1){let A=L.isWebGLMultipleRenderTargets?L.texture:[L.texture],Q=L.width,ut=L.height,dt=16384,yt=[],kt=L.stencilBuffer?33306:36096,bt=i.get(L),st=L.isWebGLMultipleRenderTargets===!0;if(st)for(let It=0;It<A.length;It++)e.bindFramebuffer(36160,bt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+It,36161,null),e.bindFramebuffer(36160,bt.__webglFramebuffer),s.framebufferTexture2D(36009,36064+It,3553,null,0);e.bindFramebuffer(36008,bt.__webglMultisampledFramebuffer),e.bindFramebuffer(36009,bt.__webglFramebuffer);for(let It=0;It<A.length;It++){yt.push(36064+It),L.depthBuffer&&yt.push(kt);let Ft=bt.__ignoreDepthValues!==void 0?bt.__ignoreDepthValues:!1;if(Ft===!1&&(L.depthBuffer&&(dt|=256),L.stencilBuffer&&(dt|=1024)),st&&s.framebufferRenderbuffer(36008,36064,36161,bt.__webglColorRenderbuffer[It]),Ft===!0&&(s.invalidateFramebuffer(36008,[kt]),s.invalidateFramebuffer(36009,[kt])),st){let Tt=i.get(A[It]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,Tt,0)}s.blitFramebuffer(0,0,Q,ut,0,0,Q,ut,dt,9728),y&&s.invalidateFramebuffer(36008,yt)}if(e.bindFramebuffer(36008,null),e.bindFramebuffer(36009,null),st)for(let It=0;It<A.length;It++){e.bindFramebuffer(36160,bt.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+It,36161,bt.__webglColorRenderbuffer[It]);let Ft=i.get(A[It]).__webglTexture;e.bindFramebuffer(36160,bt.__webglFramebuffer),s.framebufferTexture2D(36009,36064+It,3553,Ft,0)}e.bindFramebuffer(36009,bt.__webglMultisampledFramebuffer)}}function Se(L){return Math.min(m,L.samples)}function $t(L){let A=i.get(L);return c&&L.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function en(L){let A=u.render.frame;M.get(L)!==A&&(M.set(L,A),L.update())}function ln(L,A){let Q=L.encoding,ut=L.format,dt=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||L.format===Oc||Q!==Er&&(Q===Ce?c===!1?t.has("EXT_sRGB")===!0&&ut===ei?(L.format=Oc,L.minFilter=Wn,L.generateMipmaps=!1):A=vo.sRGBToLinear(A):(ut!==ei||dt!==Tr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Q)),A}this.allocateTextureUnit=it,this.resetTextureUnits=pt,this.setTexture2D=Y,this.setTexture2DArray=gt,this.setTexture3D=ct,this.setTextureCube=mt,this.rebindTextures=Oe,this.setupRenderTarget=Me,this.updateRenderTargetMipmap=Ge,this.updateMultisampleRenderTarget=Rn,this.setupDepthRenderbuffer=Lt,this.setupFrameBufferTexture=St,this.useMultisampledRTT=$t}function kA(s,t,e){let i=e.isWebGL2;function a(o,u=null){let c;if(o===Tr)return 5121;if(o===Wb)return 32819;if(o===Hb)return 32820;if(o===Bb)return 5120;if(o===kb)return 5122;if(o===np)return 5123;if(o===Vb)return 5124;if(o===br)return 5125;if(o===Mr)return 5126;if(o===ta)return i?5131:(c=t.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(o===Gb)return 6406;if(o===ei)return 6408;if(o===Xb)return 6409;if(o===Yb)return 6410;if(o===Sr)return 6402;if(o===ys)return 34041;if(o===Zb)return 6403;if(o===qb)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(o===Oc)return c=t.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(o===Jb)return 36244;if(o===$b)return 33319;if(o===Kb)return 33320;if(o===Qb)return 36249;if(o===Ql||o===jl||o===tc||o===ec)if(u===Ce)if(c=t.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(o===Ql)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(o===jl)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(o===tc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(o===ec)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=t.get("WEBGL_compressed_texture_s3tc"),c!==null){if(o===Ql)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(o===jl)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(o===tc)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(o===ec)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(o===Xf||o===Yf||o===Zf||o===Jf)if(c=t.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(o===Xf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(o===Yf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(o===Zf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(o===Jf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(o===jb)return c=t.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(o===$f||o===Kf)if(c=t.get("WEBGL_compressed_texture_etc"),c!==null){if(o===$f)return u===Ce?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(o===Kf)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(o===Qf||o===jf||o===td||o===ed||o===nd||o===id||o===rd||o===sd||o===ad||o===od||o===ld||o===cd||o===ud||o===hd)if(c=t.get("WEBGL_compressed_texture_astc"),c!==null){if(o===Qf)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(o===jf)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(o===td)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(o===ed)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(o===nd)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(o===id)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(o===rd)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(o===sd)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(o===ad)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(o===od)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(o===ld)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(o===cd)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(o===ud)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(o===hd)return u===Ce?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(o===fd)if(c=t.get("EXT_texture_compression_bptc"),c!==null){if(o===fd)return u===Ce?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return o===ms?i?34042:(c=t.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):s[o]!==void 0?s[o]:null}return{convert:a}}var $c=class extends Cn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}},ds=class extends gn{constructor(){super(),this.isGroup=!0,this.type="Group"}},VA={type:"move"},js=class{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ds,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ds,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new W,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new W),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ds,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new W,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new W),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,i){let a=null,o=null,u=null,c=this._targetRay,d=this._grip,f=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(f&&t.hand){u=!0;for(let v of t.hand.values()){let _=e.getJointPose(v,i);if(f.joints[v.jointName]===void 0){let D=new ds;D.matrixAutoUpdate=!1,D.visible=!1,f.joints[v.jointName]=D,f.add(D)}let S=f.joints[v.jointName];_!==null&&(S.matrix.fromArray(_.transform.matrix),S.matrix.decompose(S.position,S.rotation,S.scale),S.jointRadius=_.radius),S.visible=_!==null}let p=f.joints["index-finger-tip"],m=f.joints["thumb-tip"],g=p.position.distanceTo(m.position),y=.02,M=.005;f.inputState.pinching&&g>y+M?(f.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!f.inputState.pinching&&g<=y-M&&(f.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else d!==null&&t.gripSpace&&(o=e.getPose(t.gripSpace,i),o!==null&&(d.matrix.fromArray(o.transform.matrix),d.matrix.decompose(d.position,d.rotation,d.scale),o.linearVelocity?(d.hasLinearVelocity=!0,d.linearVelocity.copy(o.linearVelocity)):d.hasLinearVelocity=!1,o.angularVelocity?(d.hasAngularVelocity=!0,d.angularVelocity.copy(o.angularVelocity)):d.hasAngularVelocity=!1));c!==null&&(a=e.getPose(t.targetRaySpace,i),a===null&&o!==null&&(a=o),a!==null&&(c.matrix.fromArray(a.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),a.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(a.linearVelocity)):c.hasLinearVelocity=!1,a.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(a.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(VA)))}return c!==null&&(c.visible=a!==null),d!==null&&(d.visible=o!==null),f!==null&&(f.visible=u!==null),this}},Kc=class extends Pn{constructor(t,e,i,a,o,u,c,d,f,p){if(p=p!==void 0?p:Sr,p!==Sr&&p!==ys)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&p===Sr&&(i=br),i===void 0&&p===ys&&(i=ms),super(null,a,o,u,c,d,p,i,f),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=c!==void 0?c:pn,this.minFilter=d!==void 0?d:pn,this.flipY=!1,this.generateMipmaps=!1}},Qc=class extends ir{constructor(t,e){super();let i=this,a=null,o=1,u=null,c="local-floor",d=null,f=null,p=null,m=null,g=null,y=null,M=e.getContextAttributes(),v=null,_=null,S=[],D=[],P=new Cn;P.layers.enable(1),P.viewport=new ke;let E=new Cn;E.layers.enable(2),E.viewport=new ke;let I=[P,E],N=new $c;N.layers.enable(1),N.layers.enable(2);let H=null,T=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let Y=S[k];return Y===void 0&&(Y=new js,S[k]=Y),Y.getTargetRaySpace()},this.getControllerGrip=function(k){let Y=S[k];return Y===void 0&&(Y=new js,S[k]=Y),Y.getGripSpace()},this.getHand=function(k){let Y=S[k];return Y===void 0&&(Y=new js,S[k]=Y),Y.getHandSpace()};function O(k){let Y=D.indexOf(k.inputSource);if(Y===-1)return;let gt=S[Y];gt!==void 0&&gt.dispatchEvent({type:k.type,data:k.inputSource})}function q(){a.removeEventListener("select",O),a.removeEventListener("selectstart",O),a.removeEventListener("selectend",O),a.removeEventListener("squeeze",O),a.removeEventListener("squeezestart",O),a.removeEventListener("squeezeend",O),a.removeEventListener("end",q),a.removeEventListener("inputsourceschange",ft);for(let k=0;k<S.length;k++){let Y=D[k];Y!==null&&(D[k]=null,S[k].disconnect(Y))}H=null,T=null,t.setRenderTarget(v),g=null,m=null,p=null,a=null,_=null,it.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){o=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){c=k,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d||u},this.setReferenceSpace=function(k){d=k},this.getBaseLayer=function(){return m!==null?m:g},this.getBinding=function(){return p},this.getFrame=function(){return y},this.getSession=function(){return a},this.setSession=function(k){return Ie(this,null,function*(){if(a=k,a!==null){if(v=t.getRenderTarget(),a.addEventListener("select",O),a.addEventListener("selectstart",O),a.addEventListener("selectend",O),a.addEventListener("squeeze",O),a.addEventListener("squeezestart",O),a.addEventListener("squeezeend",O),a.addEventListener("end",q),a.addEventListener("inputsourceschange",ft),M.xrCompatible!==!0&&(yield e.makeXRCompatible()),a.renderState.layers===void 0||t.capabilities.isWebGL2===!1){let Y={antialias:a.renderState.layers===void 0?M.antialias:!0,alpha:M.alpha,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:o};g=new XRWebGLLayer(a,e,Y),a.updateRenderState({baseLayer:g}),_=new Di(g.framebufferWidth,g.framebufferHeight,{format:ei,type:Tr,encoding:t.outputEncoding,stencilBuffer:M.stencil})}else{let Y=null,gt=null,ct=null;M.depth&&(ct=M.stencil?35056:33190,Y=M.stencil?ys:Sr,gt=M.stencil?ms:br);let mt={colorFormat:32856,depthFormat:ct,scaleFactor:o};p=new XRWebGLBinding(a,e),m=p.createProjectionLayer(mt),a.updateRenderState({layers:[m]}),_=new Di(m.textureWidth,m.textureHeight,{format:ei,type:Tr,depthTexture:new Kc(m.textureWidth,m.textureHeight,gt,void 0,void 0,void 0,void 0,void 0,void 0,Y),stencilBuffer:M.stencil,encoding:t.outputEncoding,samples:M.antialias?4:0});let At=t.properties.get(_);At.__ignoreDepthValues=m.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(1),d=null,u=yield a.requestReferenceSpace(c),it.setContext(a),it.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}})};function ft(k){for(let Y=0;Y<k.removed.length;Y++){let gt=k.removed[Y],ct=D.indexOf(gt);ct>=0&&(D[ct]=null,S[ct].dispatchEvent({type:"disconnected",data:gt}))}for(let Y=0;Y<k.added.length;Y++){let gt=k.added[Y],ct=D.indexOf(gt);if(ct===-1){for(let At=0;At<S.length;At++)if(At>=D.length){D.push(gt),ct=At;break}else if(D[At]===null){D[At]=gt,ct=At;break}if(ct===-1)break}let mt=S[ct];mt&&mt.dispatchEvent({type:"connected",data:gt})}}let vt=new W,et=new W;function X(k,Y,gt){vt.setFromMatrixPosition(Y.matrixWorld),et.setFromMatrixPosition(gt.matrixWorld);let ct=vt.distanceTo(et),mt=Y.projectionMatrix.elements,At=gt.projectionMatrix.elements,Ht=mt[14]/(mt[10]-1),rt=mt[14]/(mt[10]+1),re=(mt[9]+1)/mt[5],Vt=(mt[9]-1)/mt[5],Bt=(mt[8]-1)/mt[0],St=(At[8]+1)/At[0],fe=Ht*Bt,Ut=Ht*St,Lt=ct/(-Bt+St),Oe=Lt*-Bt;Y.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(Oe),k.translateZ(Lt),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();let Me=Ht+Lt,Ge=rt+Lt,Rn=fe-Oe,Se=Ut+(ct-Oe),$t=re*rt/Ge*Me,en=Vt*rt/Ge*Me;k.projectionMatrix.makePerspective(Rn,Se,$t,en,Me,Ge)}function nt(k,Y){Y===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(Y.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(a===null)return;N.near=E.near=P.near=k.near,N.far=E.far=P.far=k.far,(H!==N.near||T!==N.far)&&(a.updateRenderState({depthNear:N.near,depthFar:N.far}),H=N.near,T=N.far);let Y=k.parent,gt=N.cameras;nt(N,Y);for(let mt=0;mt<gt.length;mt++)nt(gt[mt],Y);N.matrixWorld.decompose(N.position,N.quaternion,N.scale),k.matrix.copy(N.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale);let ct=k.children;for(let mt=0,At=ct.length;mt<At;mt++)ct[mt].updateMatrixWorld(!0);gt.length===2?X(N,P,E):N.projectionMatrix.copy(P.projectionMatrix)},this.getCamera=function(){return N},this.getFoveation=function(){if(m!==null)return m.fixedFoveation;if(g!==null)return g.fixedFoveation},this.setFoveation=function(k){m!==null&&(m.fixedFoveation=k),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=k)};let lt=null;function pt(k,Y){if(f=Y.getViewerPose(d||u),y=Y,f!==null){let gt=f.views;g!==null&&(t.setRenderTargetFramebuffer(_,g.framebuffer),t.setRenderTarget(_));let ct=!1;gt.length!==N.cameras.length&&(N.cameras.length=0,ct=!0);for(let mt=0;mt<gt.length;mt++){let At=gt[mt],Ht=null;if(g!==null)Ht=g.getViewport(At);else{let re=p.getViewSubImage(m,At);Ht=re.viewport,mt===0&&(t.setRenderTargetTextures(_,re.colorTexture,m.ignoreDepthValues?void 0:re.depthStencilTexture),t.setRenderTarget(_))}let rt=I[mt];rt===void 0&&(rt=new Cn,rt.layers.enable(mt),rt.viewport=new ke,I[mt]=rt),rt.matrix.fromArray(At.transform.matrix),rt.projectionMatrix.fromArray(At.projectionMatrix),rt.viewport.set(Ht.x,Ht.y,Ht.width,Ht.height),mt===0&&N.matrix.copy(rt.matrix),ct===!0&&N.cameras.push(rt)}}for(let gt=0;gt<S.length;gt++){let ct=D[gt],mt=S[gt];ct!==null&&mt!==void 0&&mt.update(ct,Y,d||u)}lt&&lt(k,Y),y=null}let it=new sp;it.setAnimationLoop(pt),this.setAnimationLoop=function(k){lt=k},this.dispose=function(){}}};function WA(s,t){function e(v,_){v.fogColor.value.copy(_.color),_.isFog?(v.fogNear.value=_.near,v.fogFar.value=_.far):_.isFogExp2&&(v.fogDensity.value=_.density)}function i(v,_,S,D,P){_.isMeshBasicMaterial||_.isMeshLambertMaterial?a(v,_):_.isMeshToonMaterial?(a(v,_),p(v,_)):_.isMeshPhongMaterial?(a(v,_),f(v,_)):_.isMeshStandardMaterial?(a(v,_),m(v,_),_.isMeshPhysicalMaterial&&g(v,_,P)):_.isMeshMatcapMaterial?(a(v,_),y(v,_)):_.isMeshDepthMaterial?a(v,_):_.isMeshDistanceMaterial?(a(v,_),M(v,_)):_.isMeshNormalMaterial?a(v,_):_.isLineBasicMaterial?(o(v,_),_.isLineDashedMaterial&&u(v,_)):_.isPointsMaterial?c(v,_,S,D):_.isSpriteMaterial?d(v,_):_.isShadowMaterial?(v.color.value.copy(_.color),v.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function a(v,_){v.opacity.value=_.opacity,_.color&&v.diffuse.value.copy(_.color),_.emissive&&v.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(v.map.value=_.map),_.alphaMap&&(v.alphaMap.value=_.alphaMap),_.bumpMap&&(v.bumpMap.value=_.bumpMap,v.bumpScale.value=_.bumpScale,_.side===Hn&&(v.bumpScale.value*=-1)),_.displacementMap&&(v.displacementMap.value=_.displacementMap,v.displacementScale.value=_.displacementScale,v.displacementBias.value=_.displacementBias),_.emissiveMap&&(v.emissiveMap.value=_.emissiveMap),_.normalMap&&(v.normalMap.value=_.normalMap,v.normalScale.value.copy(_.normalScale),_.side===Hn&&v.normalScale.value.negate()),_.specularMap&&(v.specularMap.value=_.specularMap),_.alphaTest>0&&(v.alphaTest.value=_.alphaTest);let S=t.get(_).envMap;if(S&&(v.envMap.value=S,v.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=_.reflectivity,v.ior.value=_.ior,v.refractionRatio.value=_.refractionRatio),_.lightMap){v.lightMap.value=_.lightMap;let E=s.physicallyCorrectLights!==!0?Math.PI:1;v.lightMapIntensity.value=_.lightMapIntensity*E}_.aoMap&&(v.aoMap.value=_.aoMap,v.aoMapIntensity.value=_.aoMapIntensity);let D;_.map?D=_.map:_.specularMap?D=_.specularMap:_.displacementMap?D=_.displacementMap:_.normalMap?D=_.normalMap:_.bumpMap?D=_.bumpMap:_.roughnessMap?D=_.roughnessMap:_.metalnessMap?D=_.metalnessMap:_.alphaMap?D=_.alphaMap:_.emissiveMap?D=_.emissiveMap:_.clearcoatMap?D=_.clearcoatMap:_.clearcoatNormalMap?D=_.clearcoatNormalMap:_.clearcoatRoughnessMap?D=_.clearcoatRoughnessMap:_.iridescenceMap?D=_.iridescenceMap:_.iridescenceThicknessMap?D=_.iridescenceThicknessMap:_.specularIntensityMap?D=_.specularIntensityMap:_.specularColorMap?D=_.specularColorMap:_.transmissionMap?D=_.transmissionMap:_.thicknessMap?D=_.thicknessMap:_.sheenColorMap?D=_.sheenColorMap:_.sheenRoughnessMap&&(D=_.sheenRoughnessMap),D!==void 0&&(D.isWebGLRenderTarget&&(D=D.texture),D.matrixAutoUpdate===!0&&D.updateMatrix(),v.uvTransform.value.copy(D.matrix));let P;_.aoMap?P=_.aoMap:_.lightMap&&(P=_.lightMap),P!==void 0&&(P.isWebGLRenderTarget&&(P=P.texture),P.matrixAutoUpdate===!0&&P.updateMatrix(),v.uv2Transform.value.copy(P.matrix))}function o(v,_){v.diffuse.value.copy(_.color),v.opacity.value=_.opacity}function u(v,_){v.dashSize.value=_.dashSize,v.totalSize.value=_.dashSize+_.gapSize,v.scale.value=_.scale}function c(v,_,S,D){v.diffuse.value.copy(_.color),v.opacity.value=_.opacity,v.size.value=_.size*S,v.scale.value=D*.5,_.map&&(v.map.value=_.map),_.alphaMap&&(v.alphaMap.value=_.alphaMap),_.alphaTest>0&&(v.alphaTest.value=_.alphaTest);let P;_.map?P=_.map:_.alphaMap&&(P=_.alphaMap),P!==void 0&&(P.matrixAutoUpdate===!0&&P.updateMatrix(),v.uvTransform.value.copy(P.matrix))}function d(v,_){v.diffuse.value.copy(_.color),v.opacity.value=_.opacity,v.rotation.value=_.rotation,_.map&&(v.map.value=_.map),_.alphaMap&&(v.alphaMap.value=_.alphaMap),_.alphaTest>0&&(v.alphaTest.value=_.alphaTest);let S;_.map?S=_.map:_.alphaMap&&(S=_.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),v.uvTransform.value.copy(S.matrix))}function f(v,_){v.specular.value.copy(_.specular),v.shininess.value=Math.max(_.shininess,1e-4)}function p(v,_){_.gradientMap&&(v.gradientMap.value=_.gradientMap)}function m(v,_){v.roughness.value=_.roughness,v.metalness.value=_.metalness,_.roughnessMap&&(v.roughnessMap.value=_.roughnessMap),_.metalnessMap&&(v.metalnessMap.value=_.metalnessMap),t.get(_).envMap&&(v.envMapIntensity.value=_.envMapIntensity)}function g(v,_,S){v.ior.value=_.ior,_.sheen>0&&(v.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),v.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(v.sheenColorMap.value=_.sheenColorMap),_.sheenRoughnessMap&&(v.sheenRoughnessMap.value=_.sheenRoughnessMap)),_.clearcoat>0&&(v.clearcoat.value=_.clearcoat,v.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(v.clearcoatMap.value=_.clearcoatMap),_.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap),_.clearcoatNormalMap&&(v.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),v.clearcoatNormalMap.value=_.clearcoatNormalMap,_.side===Hn&&v.clearcoatNormalScale.value.negate())),_.iridescence>0&&(v.iridescence.value=_.iridescence,v.iridescenceIOR.value=_.iridescenceIOR,v.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(v.iridescenceMap.value=_.iridescenceMap),_.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=_.iridescenceThicknessMap)),_.transmission>0&&(v.transmission.value=_.transmission,v.transmissionSamplerMap.value=S.texture,v.transmissionSamplerSize.value.set(S.width,S.height),_.transmissionMap&&(v.transmissionMap.value=_.transmissionMap),v.thickness.value=_.thickness,_.thicknessMap&&(v.thicknessMap.value=_.thicknessMap),v.attenuationDistance.value=_.attenuationDistance,v.attenuationColor.value.copy(_.attenuationColor)),v.specularIntensity.value=_.specularIntensity,v.specularColor.value.copy(_.specularColor),_.specularIntensityMap&&(v.specularIntensityMap.value=_.specularIntensityMap),_.specularColorMap&&(v.specularColorMap.value=_.specularColorMap)}function y(v,_){_.matcap&&(v.matcap.value=_.matcap)}function M(v,_){v.referencePosition.value.copy(_.referencePosition),v.nearDistance.value=_.nearDistance,v.farDistance.value=_.farDistance}return{refreshFogUniforms:e,refreshMaterialUniforms:i}}function HA(s,t,e,i){let a={},o={},u=[],c=e.isWebGL2?s.getParameter(35375):0;function d(D,P){let E=P.program;i.uniformBlockBinding(D,E)}function f(D,P){let E=a[D.id];E===void 0&&(M(D),E=p(D),a[D.id]=E,D.addEventListener("dispose",_));let I=P.program;i.updateUBOMapping(D,I);let N=t.render.frame;o[D.id]!==N&&(g(D),o[D.id]=N)}function p(D){let P=m();D.__bindingPointIndex=P;let E=s.createBuffer(),I=D.__size,N=D.usage;return s.bindBuffer(35345,E),s.bufferData(35345,I,N),s.bindBuffer(35345,null),s.bindBufferBase(35345,P,E),E}function m(){for(let D=0;D<c;D++)if(u.indexOf(D)===-1)return u.push(D),D;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function g(D){let P=a[D.id],E=D.uniforms,I=D.__cache;s.bindBuffer(35345,P);for(let N=0,H=E.length;N<H;N++){let T=E[N];if(y(T,N,I)===!0){let O=T.value,q=T.__offset;typeof O=="number"?(T.__data[0]=O,s.bufferSubData(35345,q,T.__data)):(T.value.isMatrix3?(T.__data[0]=T.value.elements[0],T.__data[1]=T.value.elements[1],T.__data[2]=T.value.elements[2],T.__data[3]=T.value.elements[0],T.__data[4]=T.value.elements[3],T.__data[5]=T.value.elements[4],T.__data[6]=T.value.elements[5],T.__data[7]=T.value.elements[0],T.__data[8]=T.value.elements[6],T.__data[9]=T.value.elements[7],T.__data[10]=T.value.elements[8],T.__data[11]=T.value.elements[0]):O.toArray(T.__data),s.bufferSubData(35345,q,T.__data))}}s.bindBuffer(35345,null)}function y(D,P,E){let I=D.value;if(E[P]===void 0)return typeof I=="number"?E[P]=I:E[P]=I.clone(),!0;if(typeof I=="number"){if(E[P]!==I)return E[P]=I,!0}else{let N=E[P];if(N.equals(I)===!1)return N.copy(I),!0}return!1}function M(D){let P=D.uniforms,E=0,I=16,N=0;for(let H=0,T=P.length;H<T;H++){let O=P[H],q=v(O);if(O.__data=new Float32Array(q.storage/Float32Array.BYTES_PER_ELEMENT),O.__offset=E,H>0){N=E%I;let ft=I-N;N!==0&&ft-q.boundary<0&&(E+=I-N,O.__offset=E)}E+=q.storage}return N=E%I,N>0&&(E+=I-N),D.__size=E,D.__cache={},this}function v(D){let P=D.value,E={boundary:0,storage:0};return typeof P=="number"?(E.boundary=4,E.storage=4):P.isVector2?(E.boundary=8,E.storage=8):P.isVector3||P.isColor?(E.boundary=16,E.storage=12):P.isVector4?(E.boundary=16,E.storage=16):P.isMatrix3?(E.boundary=48,E.storage=48):P.isMatrix4?(E.boundary=64,E.storage=64):P.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",P),E}function _(D){let P=D.target;P.removeEventListener("dispose",_);let E=u.indexOf(P.__bindingPointIndex);u.splice(E,1),s.deleteBuffer(a[P.id]),delete a[P.id],delete o[P.id]}function S(){for(let D in a)s.deleteBuffer(a[D]);u=[],a={},o={}}return{bind:d,update:f,dispose:S}}function GA(){let s=_o("canvas");return s.style.display="block",s}function qA(s={}){this.isWebGLRenderer=!0;let t=s.canvas!==void 0?s.canvas:GA(),e=s.context!==void 0?s.context:null,i=s.depth!==void 0?s.depth:!0,a=s.stencil!==void 0?s.stencil:!0,o=s.antialias!==void 0?s.antialias:!1,u=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,c=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,d=s.powerPreference!==void 0?s.powerPreference:"default",f=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1,p;e!==null?p=e.getContextAttributes().alpha:p=s.alpha!==void 0?s.alpha:!1;let m=null,g=null,y=[],M=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Er,this.physicallyCorrectLights=!1,this.toneMapping=Ri,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});let v=this,_=!1,S=0,D=0,P=null,E=-1,I=null,N=new ke,H=new ke,T=null,O=t.width,q=t.height,ft=1,vt=null,et=null,X=new ke(0,0,O,q),nt=new ke(0,0,O,q),lt=!1,pt=new Eo,it=!1,k=!1,Y=null,gt=new Ve,ct=new pe,mt=new W,At={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ht(){return P===null?ft:1}let rt=e;function re(C,G){for(let K=0;K<C.length;K++){let V=C[K],j=t.getContext(V,G);if(j!==null)return j}return null}try{let C={alpha:!0,depth:i,stencil:a,antialias:o,premultipliedAlpha:u,preserveDrawingBuffer:c,powerPreference:d,failIfMajorPerformanceCaveat:f};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${lu}`),t.addEventListener("webglcontextlost",Dt,!1),t.addEventListener("webglcontextrestored",Pt,!1),t.addEventListener("webglcontextcreationerror",se,!1),rt===null){let G=["webgl2","webgl","experimental-webgl"];if(v.isWebGL1Renderer===!0&&G.shift(),rt=re(G,C),rt===null)throw re(G)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}rt.getShaderPrecisionFormat===void 0&&(rt.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Vt,Bt,St,fe,Ut,Lt,Oe,Me,Ge,Rn,Se,$t,en,ln,L,A,Q,ut,dt,yt,kt,bt,st,It;function Ft(){Vt=new hS(rt),Bt=new sS(rt,Vt,s),Vt.init(Bt),bt=new kA(rt,Vt,Bt),St=new UA(rt,Vt,Bt),fe=new pS,Ut=new TA,Lt=new BA(rt,Vt,St,Ut,Bt,bt,fe),Oe=new oS(v),Me=new uS(v),Ge=new wM(rt,Bt),st=new iS(rt,Vt,Ge,Bt),Rn=new fS(rt,Ge,fe,st),Se=new vS(rt,Rn,Ge,fe),dt=new _S(rt,Bt,Lt),A=new aS(Ut),$t=new AA(v,Oe,Me,Vt,Bt,st,A),en=new WA(v,Ut),ln=new CA,L=new FA(Vt,Bt),ut=new nS(v,Oe,Me,St,Se,p,u),Q=new zA(v,Se,Bt),It=new HA(rt,fe,Bt,St),yt=new rS(rt,Vt,fe,Bt),kt=new dS(rt,Vt,fe,Bt),fe.programs=$t.programs,v.capabilities=Bt,v.extensions=Vt,v.properties=Ut,v.renderLists=ln,v.shadowMap=Q,v.state=St,v.info=fe}Ft();let Tt=new Qc(v,rt);this.xr=Tt,this.getContext=function(){return rt},this.getContextAttributes=function(){return rt.getContextAttributes()},this.forceContextLoss=function(){let C=Vt.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){let C=Vt.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return ft},this.setPixelRatio=function(C){C!==void 0&&(ft=C,this.setSize(O,q,!1))},this.getSize=function(C){return C.set(O,q)},this.setSize=function(C,G,K){if(Tt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}O=C,q=G,t.width=Math.floor(C*ft),t.height=Math.floor(G*ft),K!==!1&&(t.style.width=C+"px",t.style.height=G+"px"),this.setViewport(0,0,C,G)},this.getDrawingBufferSize=function(C){return C.set(O*ft,q*ft).floor()},this.setDrawingBufferSize=function(C,G,K){O=C,q=G,ft=K,t.width=Math.floor(C*K),t.height=Math.floor(G*K),this.setViewport(0,0,C,G)},this.getCurrentViewport=function(C){return C.copy(N)},this.getViewport=function(C){return C.copy(X)},this.setViewport=function(C,G,K,V){C.isVector4?X.set(C.x,C.y,C.z,C.w):X.set(C,G,K,V),St.viewport(N.copy(X).multiplyScalar(ft).floor())},this.getScissor=function(C){return C.copy(nt)},this.setScissor=function(C,G,K,V){C.isVector4?nt.set(C.x,C.y,C.z,C.w):nt.set(C,G,K,V),St.scissor(H.copy(nt).multiplyScalar(ft).floor())},this.getScissorTest=function(){return lt},this.setScissorTest=function(C){St.setScissorTest(lt=C)},this.setOpaqueSort=function(C){vt=C},this.setTransparentSort=function(C){et=C},this.getClearColor=function(C){return C.copy(ut.getClearColor())},this.setClearColor=function(){ut.setClearColor.apply(ut,arguments)},this.getClearAlpha=function(){return ut.getClearAlpha()},this.setClearAlpha=function(){ut.setClearAlpha.apply(ut,arguments)},this.clear=function(C=!0,G=!0,K=!0){let V=0;C&&(V|=16384),G&&(V|=256),K&&(V|=1024),rt.clear(V)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Dt,!1),t.removeEventListener("webglcontextrestored",Pt,!1),t.removeEventListener("webglcontextcreationerror",se,!1),ln.dispose(),L.dispose(),Ut.dispose(),Oe.dispose(),Me.dispose(),Se.dispose(),st.dispose(),It.dispose(),$t.dispose(),Tt.dispose(),Tt.removeEventListener("sessionstart",Mt),Tt.removeEventListener("sessionend",Ct),Y&&(Y.dispose(),Y=null),ae.stop()};function Dt(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function Pt(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;let C=fe.autoReset,G=Q.enabled,K=Q.autoUpdate,V=Q.needsUpdate,j=Q.type;Ft(),fe.autoReset=C,Q.enabled=G,Q.autoUpdate=K,Q.needsUpdate=V,Q.type=j}function se(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function _e(C){let G=C.target;G.removeEventListener("dispose",_e),De(G)}function De(C){z(C),Ut.remove(C)}function z(C){let G=Ut.get(C).programs;G!==void 0&&(G.forEach(function(K){$t.releaseProgram(K)}),C.isShaderMaterial&&$t.releaseShaderCache(C))}this.renderBufferDirect=function(C,G,K,V,j,Rt){G===null&&(G=At);let Wt=j.isMesh&&j.matrixWorld.determinant()<0,Zt=Uo(C,G,K,V,j);St.setMaterial(V,Wt);let Xt=K.index,oe=K.attributes.position;if(Xt===null){if(oe===void 0||oe.count===0)return}else if(Xt.count===0)return;let jt=1;V.wireframe===!0&&(Xt=Rn.getWireframeAttribute(K),jt=2),st.setup(j,V,Zt,K,Xt);let ne,me=yt;Xt!==null&&(ne=Ge.get(Xt),me=kt,me.setIndex(ne));let di=Xt!==null?Xt.count:oe.count,qn=K.drawRange.start*jt,Ni=K.drawRange.count*jt,In=Rt!==null?Rt.start*jt:0,le=Rt!==null?Rt.count*jt:1/0,pi=Math.max(qn,In),Ae=Math.min(di,qn+Ni,In+le)-1,nn=Math.max(0,Ae-pi+1);if(nn!==0){if(j.isMesh)V.wireframe===!0?(St.setLineWidth(V.wireframeLinewidth*Ht()),me.setMode(1)):me.setMode(4);else if(j.isLine){let ri=V.linewidth;ri===void 0&&(ri=1),St.setLineWidth(ri*Ht()),j.isLineSegments?me.setMode(1):j.isLineLoop?me.setMode(2):me.setMode(3)}else j.isPoints?me.setMode(0):j.isSprite&&me.setMode(4);if(j.isInstancedMesh)me.renderInstances(pi,nn,j.count);else if(K.isInstancedBufferGeometry){let ri=Math.min(K.instanceCount,K._maxInstanceCount);me.renderInstances(pi,nn,ri)}else me.render(pi,nn)}},this.compile=function(C,G){function K(V,j,Rt){V.transparent===!0&&V.side===er?(V.side=Hn,V.needsUpdate=!0,cn(V,j,Rt),V.side=_s,V.needsUpdate=!0,cn(V,j,Rt),V.side=er):cn(V,j,Rt)}g=L.get(C),g.init(),M.push(g),C.traverseVisible(function(V){V.isLight&&V.layers.test(G.layers)&&(g.pushLight(V),V.castShadow&&g.pushShadow(V))}),g.setupLights(v.physicallyCorrectLights),C.traverse(function(V){let j=V.material;if(j)if(Array.isArray(j))for(let Rt=0;Rt<j.length;Rt++){let Wt=j[Rt];K(Wt,C,V)}else K(j,C,V)}),M.pop(),g=null};let $=null;function ht(C){$&&$(C)}function Mt(){ae.stop()}function Ct(){ae.start()}let ae=new sp;ae.setAnimationLoop(ht),typeof self!="undefined"&&ae.setContext(self),this.setAnimationLoop=function(C){$=C,Tt.setAnimationLoop(C),C===null?ae.stop():ae.start()},Tt.addEventListener("sessionstart",Mt),Tt.addEventListener("sessionend",Ct),this.render=function(C,G){if(G!==void 0&&G.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),G.parent===null&&G.matrixWorldAutoUpdate===!0&&G.updateMatrixWorld(),Tt.enabled===!0&&Tt.isPresenting===!0&&(Tt.cameraAutoUpdate===!0&&Tt.updateCamera(G),G=Tt.getCamera()),C.isScene===!0&&C.onBeforeRender(v,C,G,P),g=L.get(C,M.length),g.init(),M.push(g),gt.multiplyMatrices(G.projectionMatrix,G.matrixWorldInverse),pt.setFromProjectionMatrix(gt),k=this.localClippingEnabled,it=A.init(this.clippingPlanes,k,G),m=ln.get(C,y.length),m.init(),y.push(m),Pe(C,G,0,v.sortObjects),m.finish(),v.sortObjects===!0&&m.sort(vt,et),it===!0&&A.beginShadows();let K=g.state.shadowsArray;if(Q.render(K,C,G),it===!0&&A.endShadows(),this.info.autoReset===!0&&this.info.reset(),ut.render(m,C),g.setupLights(v.physicallyCorrectLights),G.isArrayCamera){let V=G.cameras;for(let j=0,Rt=V.length;j<Rt;j++){let Wt=V[j];qe(m,C,Wt,Wt.viewport)}}else qe(m,C,G);P!==null&&(Lt.updateMultisampleRenderTarget(P),Lt.updateRenderTargetMipmap(P)),C.isScene===!0&&C.onAfterRender(v,C,G),st.resetDefaultState(),E=-1,I=null,M.pop(),M.length>0?g=M[M.length-1]:g=null,y.pop(),y.length>0?m=y[y.length-1]:m=null};function Pe(C,G,K,V){if(C.visible===!1)return;if(C.layers.test(G.layers)){if(C.isGroup)K=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(G);else if(C.isLight)g.pushLight(C),C.castShadow&&g.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||pt.intersectsSprite(C)){V&&mt.setFromMatrixPosition(C.matrixWorld).applyMatrix4(gt);let Wt=Se.update(C),Zt=C.material;Zt.visible&&m.push(C,Wt,Zt,K,mt.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==fe.render.frame&&(C.skeleton.update(),C.skeleton.frame=fe.render.frame),!C.frustumCulled||pt.intersectsObject(C))){V&&mt.setFromMatrixPosition(C.matrixWorld).applyMatrix4(gt);let Wt=Se.update(C),Zt=C.material;if(Array.isArray(Zt)){let Xt=Wt.groups;for(let oe=0,jt=Xt.length;oe<jt;oe++){let ne=Xt[oe],me=Zt[ne.materialIndex];me&&me.visible&&m.push(C,Wt,me,K,mt.z,ne)}}else Zt.visible&&m.push(C,Wt,Zt,K,mt.z,null)}}let Rt=C.children;for(let Wt=0,Zt=Rt.length;Wt<Zt;Wt++)Pe(Rt[Wt],G,K,V)}function qe(C,G,K,V){let j=C.opaque,Rt=C.transmissive,Wt=C.transparent;g.setupLightsView(K),Rt.length>0&&fi(j,G,K),V&&St.viewport(N.copy(V)),j.length>0&&ve(j,G,K),Rt.length>0&&ve(Rt,G,K),Wt.length>0&&ve(Wt,G,K),St.buffers.depth.setTest(!0),St.buffers.depth.setMask(!0),St.buffers.color.setMask(!0),St.setPolygonOffset(!1)}function fi(C,G,K){let V=Bt.isWebGL2;Y===null&&(Y=new Di(1,1,{generateMipmaps:!0,type:Vt.has("EXT_color_buffer_half_float")?ta:Tr,minFilter:Lo,samples:V&&o===!0?4:0})),v.getDrawingBufferSize(ct),V?Y.setSize(ct.x,ct.y):Y.setSize(Nc(ct.x),Nc(ct.y));let j=v.getRenderTarget();v.setRenderTarget(Y),v.clear();let Rt=v.toneMapping;v.toneMapping=Ri,ve(C,G,K),v.toneMapping=Rt,Lt.updateMultisampleRenderTarget(Y),Lt.updateRenderTargetMipmap(Y),v.setRenderTarget(j)}function ve(C,G,K){let V=G.isScene===!0?G.overrideMaterial:null;for(let j=0,Rt=C.length;j<Rt;j++){let Wt=C[j],Zt=Wt.object,Xt=Wt.geometry,oe=V===null?Wt.material:V,jt=Wt.group;Zt.layers.test(K.layers)&&_n(Zt,G,K,Xt,oe,jt)}}function _n(C,G,K,V,j,Rt){C.onBeforeRender(v,G,K,V,j,Rt),C.modelViewMatrix.multiplyMatrices(K.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),j.onBeforeRender(v,G,K,V,C,Rt),j.transparent===!0&&j.side===er?(j.side=Hn,j.needsUpdate=!0,v.renderBufferDirect(K,G,V,j,C,Rt),j.side=_s,j.needsUpdate=!0,v.renderBufferDirect(K,G,V,j,C,Rt),j.side=er):v.renderBufferDirect(K,G,V,j,C,Rt),C.onAfterRender(v,G,K,V,j,Rt)}function cn(C,G,K){G.isScene!==!0&&(G=At);let V=Ut.get(C),j=g.state.lights,Rt=g.state.shadowsArray,Wt=j.state.version,Zt=$t.getParameters(C,j.state,Rt,G,K),Xt=$t.getProgramCacheKey(Zt),oe=V.programs;V.environment=C.isMeshStandardMaterial?G.environment:null,V.fog=G.fog,V.envMap=(C.isMeshStandardMaterial?Me:Oe).get(C.envMap||V.environment),oe===void 0&&(C.addEventListener("dispose",_e),oe=new Map,V.programs=oe);let jt=oe.get(Xt);if(jt!==void 0){if(V.currentProgram===jt&&V.lightsStateVersion===Wt)return Or(C,Zt),jt}else Zt.uniforms=$t.getUniforms(C),C.onBuild(K,Zt,v),C.onBeforeCompile(Zt,v),jt=$t.acquireProgram(Zt,Xt),oe.set(Xt,jt),V.uniforms=Zt.uniforms;let ne=V.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(ne.clippingPlanes=A.uniform),Or(C,Zt),V.needsLights=ko(C),V.lightsStateVersion=Wt,V.needsLights&&(ne.ambientLightColor.value=j.state.ambient,ne.lightProbe.value=j.state.probe,ne.directionalLights.value=j.state.directional,ne.directionalLightShadows.value=j.state.directionalShadow,ne.spotLights.value=j.state.spot,ne.spotLightShadows.value=j.state.spotShadow,ne.rectAreaLights.value=j.state.rectArea,ne.ltc_1.value=j.state.rectAreaLTC1,ne.ltc_2.value=j.state.rectAreaLTC2,ne.pointLights.value=j.state.point,ne.pointLightShadows.value=j.state.pointShadow,ne.hemisphereLights.value=j.state.hemi,ne.directionalShadowMap.value=j.state.directionalShadowMap,ne.directionalShadowMatrix.value=j.state.directionalShadowMatrix,ne.spotShadowMap.value=j.state.spotShadowMap,ne.spotLightMatrix.value=j.state.spotLightMatrix,ne.spotLightMap.value=j.state.spotLightMap,ne.pointShadowMap.value=j.state.pointShadowMap,ne.pointShadowMatrix.value=j.state.pointShadowMatrix);let me=jt.getUniforms(),di=gs.seqWithValue(me.seq,ne);return V.currentProgram=jt,V.uniformsList=di,jt}function Or(C,G){let K=Ut.get(C);K.outputEncoding=G.outputEncoding,K.instancing=G.instancing,K.skinning=G.skinning,K.morphTargets=G.morphTargets,K.morphNormals=G.morphNormals,K.morphColors=G.morphColors,K.morphTargetsCount=G.morphTargetsCount,K.numClippingPlanes=G.numClippingPlanes,K.numIntersection=G.numClipIntersection,K.vertexAlphas=G.vertexAlphas,K.vertexTangents=G.vertexTangents,K.toneMapping=G.toneMapping}function Uo(C,G,K,V,j){G.isScene!==!0&&(G=At),Lt.resetTextureUnits();let Rt=G.fog,Wt=V.isMeshStandardMaterial?G.environment:null,Zt=P===null?v.outputEncoding:P.isXRRenderTarget===!0?P.texture.encoding:Er,Xt=(V.isMeshStandardMaterial?Me:Oe).get(V.envMap||Wt),oe=V.vertexColors===!0&&!!K.attributes.color&&K.attributes.color.itemSize===4,jt=!!V.normalMap&&!!K.attributes.tangent,ne=!!K.morphAttributes.position,me=!!K.morphAttributes.normal,di=!!K.morphAttributes.color,qn=V.toneMapped?v.toneMapping:Ri,Ni=K.morphAttributes.position||K.morphAttributes.normal||K.morphAttributes.color,In=Ni!==void 0?Ni.length:0,le=Ut.get(V),pi=g.state.lights;if(it===!0&&(k===!0||C!==I)){let Ke=C===I&&V.id===E;A.setState(V,C,Ke)}let Ae=!1;V.version===le.__version?(le.needsLights&&le.lightsStateVersion!==pi.state.version||le.outputEncoding!==Zt||j.isInstancedMesh&&le.instancing===!1||!j.isInstancedMesh&&le.instancing===!0||j.isSkinnedMesh&&le.skinning===!1||!j.isSkinnedMesh&&le.skinning===!0||le.envMap!==Xt||V.fog===!0&&le.fog!==Rt||le.numClippingPlanes!==void 0&&(le.numClippingPlanes!==A.numPlanes||le.numIntersection!==A.numIntersection)||le.vertexAlphas!==oe||le.vertexTangents!==jt||le.morphTargets!==ne||le.morphNormals!==me||le.morphColors!==di||le.toneMapping!==qn||Bt.isWebGL2===!0&&le.morphTargetsCount!==In)&&(Ae=!0):(Ae=!0,le.__version=V.version);let nn=le.currentProgram;Ae===!0&&(nn=cn(V,G,j));let ri=!1,sr=!1,Ps=!1,Je=nn.getUniforms(),si=le.uniforms;if(St.useProgram(nn.program)&&(ri=!0,sr=!0,Ps=!0),V.id!==E&&(E=V.id,sr=!0),ri||I!==C){if(Je.setValue(rt,"projectionMatrix",C.projectionMatrix),Bt.logarithmicDepthBuffer&&Je.setValue(rt,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),I!==C&&(I=C,sr=!0,Ps=!0),V.isShaderMaterial||V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshStandardMaterial||V.envMap){let Ke=Je.map.cameraPosition;Ke!==void 0&&Ke.setValue(rt,mt.setFromMatrixPosition(C.matrixWorld))}(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial)&&Je.setValue(rt,"isOrthographic",C.isOrthographicCamera===!0),(V.isMeshPhongMaterial||V.isMeshToonMaterial||V.isMeshLambertMaterial||V.isMeshBasicMaterial||V.isMeshStandardMaterial||V.isShaderMaterial||V.isShadowMaterial||j.isSkinnedMesh)&&Je.setValue(rt,"viewMatrix",C.matrixWorldInverse)}if(j.isSkinnedMesh){Je.setOptional(rt,j,"bindMatrix"),Je.setOptional(rt,j,"bindMatrixInverse");let Ke=j.skeleton;Ke&&(Bt.floatVertexTextures?(Ke.boneTexture===null&&Ke.computeBoneTexture(),Je.setValue(rt,"boneTexture",Ke.boneTexture,Lt),Je.setValue(rt,"boneTextureSize",Ke.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}let Nr=K.morphAttributes;if((Nr.position!==void 0||Nr.normal!==void 0||Nr.color!==void 0&&Bt.isWebGL2===!0)&&dt.update(j,K,V,nn),(sr||le.receiveShadow!==j.receiveShadow)&&(le.receiveShadow=j.receiveShadow,Je.setValue(rt,"receiveShadow",j.receiveShadow)),V.isMeshGouraudMaterial&&V.envMap!==null&&(si.envMap.value=Xt,si.flipEnvMap.value=Xt.isCubeTexture&&Xt.isRenderTargetTexture===!1?-1:1),sr&&(Je.setValue(rt,"toneMappingExposure",v.toneMappingExposure),le.needsLights&&Bo(si,Ps),Rt&&V.fog===!0&&en.refreshFogUniforms(si,Rt),en.refreshMaterialUniforms(si,V,ft,q,Y),gs.upload(rt,le.uniformsList,si,Lt)),V.isShaderMaterial&&V.uniformsNeedUpdate===!0&&(gs.upload(rt,le.uniformsList,si,Lt),V.uniformsNeedUpdate=!1),V.isSpriteMaterial&&Je.setValue(rt,"center",j.center),Je.setValue(rt,"modelViewMatrix",j.modelViewMatrix),Je.setValue(rt,"normalMatrix",j.normalMatrix),Je.setValue(rt,"modelMatrix",j.matrixWorld),V.isShaderMaterial||V.isRawShaderMaterial){let Ke=V.uniformsGroups;for(let ar=0,Vo=Ke.length;ar<Vo;ar++)if(Bt.isWebGL2){let Ls=Ke[ar];It.update(Ls,nn),It.bind(Ls,nn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return nn}function Bo(C,G){C.ambientLightColor.needsUpdate=G,C.lightProbe.needsUpdate=G,C.directionalLights.needsUpdate=G,C.directionalLightShadows.needsUpdate=G,C.pointLights.needsUpdate=G,C.pointLightShadows.needsUpdate=G,C.spotLights.needsUpdate=G,C.spotLightShadows.needsUpdate=G,C.rectAreaLights.needsUpdate=G,C.hemisphereLights.needsUpdate=G}function ko(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return D},this.getRenderTarget=function(){return P},this.setRenderTargetTextures=function(C,G,K){Ut.get(C.texture).__webglTexture=G,Ut.get(C.depthTexture).__webglTexture=K;let V=Ut.get(C);V.__hasExternalTextures=!0,V.__hasExternalTextures&&(V.__autoAllocateDepthBuffer=K===void 0,V.__autoAllocateDepthBuffer||Vt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),V.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,G){let K=Ut.get(C);K.__webglFramebuffer=G,K.__useDefaultFramebuffer=G===void 0},this.setRenderTarget=function(C,G=0,K=0){P=C,S=G,D=K;let V=!0,j=null,Rt=!1,Wt=!1;if(C){let Xt=Ut.get(C);Xt.__useDefaultFramebuffer!==void 0?(St.bindFramebuffer(36160,null),V=!1):Xt.__webglFramebuffer===void 0?Lt.setupRenderTarget(C):Xt.__hasExternalTextures&&Lt.rebindTextures(C,Ut.get(C.texture).__webglTexture,Ut.get(C.depthTexture).__webglTexture);let oe=C.texture;(oe.isData3DTexture||oe.isDataArrayTexture||oe.isCompressedArrayTexture)&&(Wt=!0);let jt=Ut.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(j=jt[G],Rt=!0):Bt.isWebGL2&&C.samples>0&&Lt.useMultisampledRTT(C)===!1?j=Ut.get(C).__webglMultisampledFramebuffer:j=jt,N.copy(C.viewport),H.copy(C.scissor),T=C.scissorTest}else N.copy(X).multiplyScalar(ft).floor(),H.copy(nt).multiplyScalar(ft).floor(),T=lt;if(St.bindFramebuffer(36160,j)&&Bt.drawBuffers&&V&&St.drawBuffers(C,j),St.viewport(N),St.scissor(H),St.setScissorTest(T),Rt){let Xt=Ut.get(C.texture);rt.framebufferTexture2D(36160,36064,34069+G,Xt.__webglTexture,K)}else if(Wt){let Xt=Ut.get(C.texture),oe=G||0;rt.framebufferTextureLayer(36160,36064,Xt.__webglTexture,K||0,oe)}E=-1},this.readRenderTargetPixels=function(C,G,K,V,j,Rt,Wt){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Zt=Ut.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&Wt!==void 0&&(Zt=Zt[Wt]),Zt){St.bindFramebuffer(36160,Zt);try{let Xt=C.texture,oe=Xt.format,jt=Xt.type;if(oe!==ei&&bt.convert(oe)!==rt.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}let ne=jt===ta&&(Vt.has("EXT_color_buffer_half_float")||Bt.isWebGL2&&Vt.has("EXT_color_buffer_float"));if(jt!==Tr&&bt.convert(jt)!==rt.getParameter(35738)&&!(jt===Mr&&(Bt.isWebGL2||Vt.has("OES_texture_float")||Vt.has("WEBGL_color_buffer_float")))&&!ne){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}G>=0&&G<=C.width-V&&K>=0&&K<=C.height-j&&rt.readPixels(G,K,V,j,bt.convert(oe),bt.convert(jt),Rt)}finally{let Xt=P!==null?Ut.get(P).__webglFramebuffer:null;St.bindFramebuffer(36160,Xt)}}},this.copyFramebufferToTexture=function(C,G,K=0){let V=Math.pow(2,-K),j=Math.floor(G.image.width*V),Rt=Math.floor(G.image.height*V);Lt.setTexture2D(G,0),rt.copyTexSubImage2D(3553,K,0,0,C.x,C.y,j,Rt),St.unbindTexture()},this.copyTextureToTexture=function(C,G,K,V=0){let j=G.image.width,Rt=G.image.height,Wt=bt.convert(K.format),Zt=bt.convert(K.type);Lt.setTexture2D(K,0),rt.pixelStorei(37440,K.flipY),rt.pixelStorei(37441,K.premultiplyAlpha),rt.pixelStorei(3317,K.unpackAlignment),G.isDataTexture?rt.texSubImage2D(3553,V,C.x,C.y,j,Rt,Wt,Zt,G.image.data):G.isCompressedTexture?rt.compressedTexSubImage2D(3553,V,C.x,C.y,G.mipmaps[0].width,G.mipmaps[0].height,Wt,G.mipmaps[0].data):rt.texSubImage2D(3553,V,C.x,C.y,Wt,Zt,G.image),V===0&&K.generateMipmaps&&rt.generateMipmap(3553),St.unbindTexture()},this.copyTextureToTexture3D=function(C,G,K,V,j=0){if(v.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}let Rt=C.max.x-C.min.x+1,Wt=C.max.y-C.min.y+1,Zt=C.max.z-C.min.z+1,Xt=bt.convert(V.format),oe=bt.convert(V.type),jt;if(V.isData3DTexture)Lt.setTexture3D(V,0),jt=32879;else if(V.isDataArrayTexture)Lt.setTexture2DArray(V,0),jt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}rt.pixelStorei(37440,V.flipY),rt.pixelStorei(37441,V.premultiplyAlpha),rt.pixelStorei(3317,V.unpackAlignment);let ne=rt.getParameter(3314),me=rt.getParameter(32878),di=rt.getParameter(3316),qn=rt.getParameter(3315),Ni=rt.getParameter(32877),In=K.isCompressedTexture?K.mipmaps[0]:K.image;rt.pixelStorei(3314,In.width),rt.pixelStorei(32878,In.height),rt.pixelStorei(3316,C.min.x),rt.pixelStorei(3315,C.min.y),rt.pixelStorei(32877,C.min.z),K.isDataTexture||K.isData3DTexture?rt.texSubImage3D(jt,j,G.x,G.y,G.z,Rt,Wt,Zt,Xt,oe,In.data):K.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),rt.compressedTexSubImage3D(jt,j,G.x,G.y,G.z,Rt,Wt,Zt,Xt,In.data)):rt.texSubImage3D(jt,j,G.x,G.y,G.z,Rt,Wt,Zt,Xt,oe,In),rt.pixelStorei(3314,ne),rt.pixelStorei(32878,me),rt.pixelStorei(3316,di),rt.pixelStorei(3315,qn),rt.pixelStorei(32877,Ni),j===0&&V.generateMipmaps&&rt.generateMipmap(jt),St.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?Lt.setTextureCube(C,0):C.isData3DTexture?Lt.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?Lt.setTexture2DArray(C,0):Lt.setTexture2D(C,0),St.unbindTexture()},this.resetState=function(){S=0,D=0,P=null,St.reset(),st.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}var jc=class extends qA{};jc.prototype.isWebGL1Renderer=!0;function tr(s,t,e){return up(s)?new s.constructor(s.subarray(t,e!==void 0?e:s.length)):s.slice(t,e)}function fo(s,t,e){return!s||!e&&s.constructor===t?s:typeof t.BYTES_PER_ELEMENT=="number"?new t(s):Array.prototype.slice.call(s)}function up(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}var ws=class{constructor(t,e,i,a){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=a!==void 0?a:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){let e=this.parameterPositions,i=this._cachedIndex,a=e[i],o=e[i-1];t:{e:{let u;n:{i:if(!(t<a)){for(let c=i+2;;){if(a===void 0){if(t<o)break i;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===c)break;if(o=a,a=e[++i],t<a)break e}u=e.length;break n}if(!(t>=o)){let c=e[1];t<c&&(i=2,o=c);for(let d=i-2;;){if(o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===d)break;if(a=o,o=e[--i-1],t>=o)break e}u=i,i=0;break n}break t}for(;i<u;){let c=i+u>>>1;t<e[c]?u=c:i=c+1}if(a=e[i],o=e[i-1],o===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(a===void 0)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,o,a)}return this.interpolate_(i,o,t,a)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){let e=this.resultBuffer,i=this.sampleValues,a=this.valueSize,o=t*a;for(let u=0;u!==a;++u)e[u]=i[o+u];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}},tu=class extends ws{constructor(t,e,i,a){super(t,e,i,a),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:dd,endingEnd:dd}}intervalChanged_(t,e,i){let a=this.parameterPositions,o=t-2,u=t+1,c=a[o],d=a[u];if(c===void 0)switch(this.getSettings_().endingStart){case pd:o=t,c=2*e-i;break;case md:o=a.length-2,c=e+a[o]-a[o+1];break;default:o=t,c=i}if(d===void 0)switch(this.getSettings_().endingEnd){case pd:u=t,d=2*i-e;break;case md:u=1,d=i+a[1]-a[0];break;default:u=t-1,d=e}let f=(i-e)*.5,p=this.valueSize;this._weightPrev=f/(e-c),this._weightNext=f/(d-i),this._offsetPrev=o*p,this._offsetNext=u*p}interpolate_(t,e,i,a){let o=this.resultBuffer,u=this.sampleValues,c=this.valueSize,d=t*c,f=d-c,p=this._offsetPrev,m=this._offsetNext,g=this._weightPrev,y=this._weightNext,M=(i-e)/(a-e),v=M*M,_=v*M,S=-g*_+2*g*v-g*M,D=(1+g)*_+(-1.5-2*g)*v+(-.5+g)*M+1,P=(-1-y)*_+(1.5+y)*v+.5*M,E=y*_-y*v;for(let I=0;I!==c;++I)o[I]=S*u[p+I]+D*u[f+I]+P*u[d+I]+E*u[m+I];return o}},eu=class extends ws{constructor(t,e,i,a){super(t,e,i,a)}interpolate_(t,e,i,a){let o=this.resultBuffer,u=this.sampleValues,c=this.valueSize,d=t*c,f=d-c,p=(i-e)/(a-e),m=1-p;for(let g=0;g!==c;++g)o[g]=u[f+g]*m+u[d+g]*p;return o}},nu=class extends ws{constructor(t,e,i,a){super(t,e,i,a)}interpolate_(t){return this.copySampleValue_(t-1)}},ii=class{constructor(t,e,i,a){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=fo(e,this.TimeBufferType),this.values=fo(i,this.ValueBufferType),this.setInterpolation(a||this.DefaultInterpolation)}static toJSON(t){let e=t.constructor,i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:fo(t.times,Array),values:fo(t.values,Array)};let a=t.getInterpolation();a!==t.DefaultInterpolation&&(i.interpolation=a)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new nu(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new eu(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new tu(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case mo:e=this.InterpolantFactoryMethodDiscrete;break;case go:e=this.InterpolantFactoryMethodLinear;break;case nc:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){let i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return mo;case this.InterpolantFactoryMethodLinear:return go;case this.InterpolantFactoryMethodSmooth:return nc}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){let e=this.times;for(let i=0,a=e.length;i!==a;++i)e[i]+=t}return this}scale(t){if(t!==1){let e=this.times;for(let i=0,a=e.length;i!==a;++i)e[i]*=t}return this}trim(t,e){let i=this.times,a=i.length,o=0,u=a-1;for(;o!==a&&i[o]<t;)++o;for(;u!==-1&&i[u]>e;)--u;if(++u,o!==0||u!==a){o>=u&&(u=Math.max(u,1),o=u-1);let c=this.getValueSize();this.times=tr(i,o,u),this.values=tr(this.values,o*c,u*c)}return this}validate(){let t=!0,e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);let i=this.times,a=this.values,o=i.length;o===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let u=null;for(let c=0;c!==o;c++){let d=i[c];if(typeof d=="number"&&isNaN(d)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,d),t=!1;break}if(u!==null&&u>d){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,d,u),t=!1;break}u=d}if(a!==void 0&&up(a))for(let c=0,d=a.length;c!==d;++c){let f=a[c];if(isNaN(f)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,f),t=!1;break}}return t}optimize(){let t=tr(this.times),e=tr(this.values),i=this.getValueSize(),a=this.getInterpolation()===nc,o=t.length-1,u=1;for(let c=1;c<o;++c){let d=!1,f=t[c],p=t[c+1];if(f!==p&&(c!==1||f!==t[0]))if(a)d=!0;else{let m=c*i,g=m-i,y=m+i;for(let M=0;M!==i;++M){let v=e[m+M];if(v!==e[g+M]||v!==e[y+M]){d=!0;break}}}if(d){if(c!==u){t[u]=t[c];let m=c*i,g=u*i;for(let y=0;y!==i;++y)e[g+y]=e[m+y]}++u}}if(o>0){t[u]=t[o];for(let c=o*i,d=u*i,f=0;f!==i;++f)e[d+f]=e[c+f];++u}return u!==t.length?(this.times=tr(t,0,u),this.values=tr(e,0,u*i)):(this.times=t,this.values=e),this}clone(){let t=tr(this.times,0),e=tr(this.values,0),i=this.constructor,a=new i(this.name,t,e);return a.createInterpolant=this.createInterpolant,a}};ii.prototype.TimeBufferType=Float32Array;ii.prototype.ValueBufferType=Float32Array;ii.prototype.DefaultInterpolation=go;var Rr=class extends ii{};Rr.prototype.ValueTypeName="bool";Rr.prototype.ValueBufferType=Array;Rr.prototype.DefaultInterpolation=mo;Rr.prototype.InterpolantFactoryMethodLinear=void 0;Rr.prototype.InterpolantFactoryMethodSmooth=void 0;var iu=class extends ii{};iu.prototype.ValueTypeName="color";var ru=class extends ii{};ru.prototype.ValueTypeName="number";var su=class extends ws{constructor(t,e,i,a){super(t,e,i,a)}interpolate_(t,e,i,a){let o=this.resultBuffer,u=this.sampleValues,c=this.valueSize,d=(i-e)/(a-e),f=t*c;for(let p=f+c;f!==p;f+=4)hi.slerpFlat(o,0,u,f-c,u,f,d);return o}},ia=class extends ii{InterpolantFactoryMethodLinear(t){return new su(this.times,this.values,this.getValueSize(),t)}};ia.prototype.ValueTypeName="quaternion";ia.prototype.DefaultInterpolation=go;ia.prototype.InterpolantFactoryMethodSmooth=void 0;var Ir=class extends ii{};Ir.prototype.ValueTypeName="string";Ir.prototype.ValueBufferType=Array;Ir.prototype.DefaultInterpolation=mo;Ir.prototype.InterpolantFactoryMethodLinear=void 0;Ir.prototype.InterpolantFactoryMethodSmooth=void 0;var au=class extends ii{};au.prototype.ValueTypeName="vector";var uu="\\[\\]\\.:\\/",XA=new RegExp("["+uu+"]","g"),hu="[^"+uu+"]",YA="[^"+uu.replace("\\.","")+"]",ZA=/((?:WC+[\/:])*)/.source.replace("WC",hu),JA=/(WCOD+)?/.source.replace("WCOD",YA),$A=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hu),KA=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hu),QA=new RegExp("^"+ZA+JA+$A+KA+"$"),jA=["material","materials","bones","map"],ou=class{constructor(t,e,i){let a=i||he.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,a)}getValue(t,e){this.bind();let i=this._targetGroup.nCachedObjects_,a=this._bindings[i];a!==void 0&&a.getValue(t,e)}setValue(t,e){let i=this._bindings;for(let a=this._targetGroup.nCachedObjects_,o=i.length;a!==o;++a)i[a].setValue(t,e)}bind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){let t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}},he=class{constructor(t,e,i){this.path=e,this.parsedPath=i||he.parseTrackName(e),this.node=he.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new he.Composite(t,e,i):new he(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(XA,"")}static parseTrackName(t){let e=QA.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);let i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},a=i.nodeName&&i.nodeName.lastIndexOf(".");if(a!==void 0&&a!==-1){let o=i.nodeName.substring(a+1);jA.indexOf(o)!==-1&&(i.nodeName=i.nodeName.substring(0,a),i.objectName=o)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){let i=t.skeleton.getBoneByName(e);if(i!==void 0)return i}if(t.children){let i=function(o){for(let u=0;u<o.length;u++){let c=o[u];if(c.name===e||c.uuid===e)return c;let d=i(c.children);if(d)return d}return null},a=i(t.children);if(a)return a}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){let i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)t[e++]=i[a]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){let i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[e++]}_setValue_array_setNeedsUpdate(t,e){let i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){let i=this.resolvedProperty;for(let a=0,o=i.length;a!==o;++a)i[a]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node,e=this.parsedPath,i=e.objectName,a=e.propertyName,o=e.propertyIndex;if(t||(t=he.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(i){let f=e.objectIndex;switch(i){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let p=0;p<t.length;p++)if(t[p].name===f){f=p;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[i]}if(f!==void 0){if(t[f]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[f]}}let u=t[a];if(u===void 0){let f=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+f+"."+a+" but it wasn't found.",t);return}let c=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let d=this.BindingType.Direct;if(o!==void 0){if(a==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[o]!==void 0&&(o=t.morphTargetDictionary[o])}d=this.BindingType.ArrayElement,this.resolvedProperty=u,this.propertyIndex=o}else u.fromArray!==void 0&&u.toArray!==void 0?(d=this.BindingType.HasFromToArray,this.resolvedProperty=u):Array.isArray(u)?(d=this.BindingType.EntireArray,this.resolvedProperty=u):this.propertyName=a;this.getValue=this.GetterByBindingType[d],this.setValue=this.SetterByBindingTypeAndVersioning[d][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};he.Composite=ou;he.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};he.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};he.prototype.GetterByBindingType=[he.prototype._getValue_direct,he.prototype._getValue_array,he.prototype._getValue_arrayElement,he.prototype._getValue_toArray];he.prototype.SetterByBindingTypeAndVersioning=[[he.prototype._setValue_direct,he.prototype._setValue_direct_setNeedsUpdate,he.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[he.prototype._setValue_array,he.prototype._setValue_array_setNeedsUpdate,he.prototype._setValue_array_setMatrixWorldNeedsUpdate],[he.prototype._setValue_arrayElement,he.prototype._setValue_arrayElement_setNeedsUpdate,he.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[he.prototype._setValue_fromArray,he.prototype._setValue_fromArray_setNeedsUpdate,he.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];var uE=new Float32Array(1);typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:lu}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=lu);var Dr=(i=>(i[i.x=0]="x",i[i.y=0]="y",i[i.z=0]="z",i))(Dr||{});var gp=Kl(mp()),rr=class{constructor(t){this.debug=(0,gp.default)(t)}log(t,...e){this.debug(t,...e)}};var fT=function(){this.onInit=function(){this.THREE=this.context.three,this.curVector=new this.THREE.Vector3(0,0,0),this.destVector=new this.THREE.Vector3(0,0,0),this.curQuaternion=new this.THREE.Quaternion(0,0,0,0),this.destQuaternion=new this.THREE.Quaternion(0,0,0,0),this.vectorToSet=null,this.quatToSet=null,this.vectorCounter=0,this.quatCounter=0,this.speed=1.25},this.onTick=function(s){if(this.vectorToSet){if(this.vectorToSet.equals(this.destVector)&&this.vectorCounter>120)return;this.vectorCounter++,this.curVector.lerp(this.destVector,s/1e3*this.speed),this.vectorToSet.set(this.curVector.x,this.curVector.y,this.curVector.z)}if(this.quatToSet){if(this.quatToSet.equals(this.destQuaternion)&&this.quatCounter>120)return;this.quatCounter++,this.curQuaternion.slerp(this.destQuaternion,s/1e3*this.speed),this.quatToSet.set(this.curQuaternion.x,this.curQuaternion.y,this.curQuaternion.z,this.curQuaternion.w)}},this.animateVector=function(s,t){this.vectorCounter=0,this.destVector=t,this.vectorToSet=s},this.animateQuaternion=function(s,t){this.quatCounter=0,this.destQuaternion=t,this.quatToSet=s},this.onEvent=function(){},this.onInputsUpdated=function(){},this.onDestroy=function(){}},_p=()=>new fT;var Cs=(s=>(s[s["#31E0B0"]=0]="#31E0B0",s[s["#FF5E10"]=1]="#FF5E10",s[s["#00ABF7"]=2]="#00ABF7",s[s["#FF00BB"]=3]="#FF00BB",s[s["#9C29FF"]=4]="#9C29FF",s[s["#6FDD00"]=5]="#6FDD00",s[s["#E30000"]=6]="#E30000",s[s["#304AFF"]=7]="#304AFF",s[s["#FF89C4"]=8]="#FF89C4",s[s["#D597FF"]=9]="#D597FF",s[s["#C6EC5C"]=10]="#C6EC5C",s[s["#FFA115"]=11]="#FFA115",s[s["#75DEFE"]=12]="#75DEFE",s[s["#FAA291"]=13]="#FAA291",s[s["#BB813F"]=14]="#BB813F",s[s["#F4CE00"]=15]="#F4CE00",s[s["#878291"]=16]="#878291",s))(Cs||{}),vp=["#000000","#FFFFFF","#000000","#FFFFFF","#FFFFFF","#000000","#FFFFFF","#FFFFFF","#000000","#000000","#000000","#000000","#000000","#000000","#FFFFFF","#000000","#FFFFFF"];var dT=function(){this.onInit=function(){this.THREE=this.context.three},this.onTick=function(s){},this.onEvent=function(){},this.onInputsUpdated=function(){},this.onDestroy=function(){},this.createName=(s,t,e,i)=>Ie(this,null,function*(){let a=s,o=i,u=Cs[e],c=vp[e],d=new FontFace("OpenSans-SemiBold","url(https://superviz2homologmediaserver.s3.amazonaws.com/static/fonts/OpenSans-SemiBold.woff)");yield d.load(),document.fonts.add(d);let f=this.createText(t,c,u);f.position.set(0,o,0),a.add(f)}),this.createText=(s,t,e)=>{let i=document.createElement("canvas"),a=i.getContext("2d"),o=100,u=10*o,c=.03,f=a.measureText(s).width*o*1.12;i.width=f,i.height=u,a.font=`${u}px OpenSans-SemiBold`,a.textBaseline="middle",a.fillStyle=t,a.fillText(s,0,u/2);let p=new this.THREE.Texture(i);p.needsUpdate=!0;let m=new this.THREE.SpriteMaterial({map:p,useScreenCoordinates:!1,opacity:1,alphaTest:.5,depthTest:!0,transparent:!0}),g=new this.THREE.Sprite(m);g.raycast=()=>null;let y=new this.THREE.Object3D;y.textHeight=c,y.textWidth=f/u*y.textHeight,g.scale.set(f/u*c,c,1);let M=document.createElement("canvas");M.width=f+10,M.height=u+10;let v=M.getContext("2d"),_=this.addAlpha(e.split("#")[1],.99);v.fillStyle=`#${_}`,v.beginPath(),v.roundRect(-15,0,M.width,M.height*.9,M.width),v.fill();let S=new this.THREE.Texture(M);S.needsUpdate=!0;let D=new this.THREE.SpriteMaterial({opacity:.99,transparent:!1,useScreenCoordinates:!1,alphaTest:.1,color:new this.THREE.Color(e),map:S}),P=new this.THREE.Sprite(D);return P.scale.set(1.18,1.25,1.1),g.add(P),y.add(g),y},this.addAlpha=(s,t)=>{let e=Math.round(Math.min(Math.max(t||1,0),1)*255);return s+e.toString(16).toUpperCase()}},xp=()=>new dT;var pT=function(){this.inputs={origin:{x:0,y:0,z:0}},this.onInit=function(){this.THREE=this.context.three,this.destPos=new this.THREE.Vector3(0,0,0),this.curPos=new this.THREE.Vector3(0,0,0),this.startPos=new this.THREE.Vector3(0,0,0),this.counter=0,this.index=-1,this.lastIndex=-1,this.lastDestPos=new this.THREE.Vector3(1e3,1e3,1e3),this.lastStartPos=new this.THREE.Vector3(1e3,1e3,1e3),this.speed=.95,this.tempStartPos=new this.THREE.Vector3(0,0,0),this.quat=new this.THREE.Quaternion(0,0,0,0)},this.onTick=function(s){if(!!this.createdMaterial&&!(this.counter>60&&this.lastDestPos.equals(this.destPos)&&this.lastStartPos.distanceTo(this.startPos)<.2)){if(this.counter++,this.lastIndex!==this.index){let t=Cs[this.index];this.material&&(this.material.color.set(t),this.lastIndex=this.index)}this.curPos.lerp(this.destPos,s/1e3*this.speed),this.lastDestPos.x=this.destPos.x,this.lastDestPos.y=this.destPos.y,this.lastDestPos.z=this.destPos.z,this.lastStartPos.x=this.startPos.x,this.lastStartPos.y=this.startPos.y,this.lastStartPos.z=this.startPos.z,this._updateMesh(this.startPos,this.curPos),this.outputs.objectRoot.visible=this.isOn&&this.shouldRenderAvatars}},this.onDestroy=function(){this.material&&this.material.dispose()},this.createMaterial=s=>{this.createdMaterial=!0;let t=this.createTextureCanvas(),e=new this.THREE.Texture(t);e.needsUpdate=!0;let i=0;s!==-1&&(i=s);let a=Cs[i];this.material=new this.THREE.MeshBasicMaterial({map:e,blending:this.THREE.AdditiveBlending,color:a,side:this.THREE.DoubleSide,depthWrite:!0,transparent:!0})},this._updateMesh=(s,t)=>{this.tempStartPos.copy(this.inputs.origin),this.tempStartPos.applyQuaternion(this.quat),this.tempStartPos.add(s);let e=new this.THREE.LineCurve3(this.tempStartPos,t);this.outputs.objectRoot&&this.outputs.objectRoot.geometry&&this.outputs.objectRoot.geometry.dispose();let i=new this.THREE.TubeGeometry(e,1,.003,4,!1);this.material&&(this.outputs.objectRoot=new this.THREE.Mesh(i,this.material))},this._doUpdateGeometry=(s,t,e,i,a={x:0,y:0,z:0},o={x:0,y:0,z:0})=>{this.index=e,this.createdMaterial||this.createMaterial(e),this.destPos.x=o.x,this.destPos.y=o.y,this.destPos.z=o.z,this.startPos.x=a.x,this.startPos.y=a.y,this.startPos.z=a.z,this.quat.set(i.x,i.y,i.z,i.w),this.counter=0,this.isOn=s,this.shouldRenderAvatars=t},this.updateGeometry=(s,t,e,i,a,o)=>{this._doUpdateGeometry(e,i,a,o,s,t)},this.createTextureCanvas=()=>{let s=document.createElement("canvas"),t=s.getContext("2d");s.width=1,s.height=64;let e=t.createLinearGradient(0,0,s.width,s.height);return e.addColorStop(0,"rgba(  0,  0,  0,0.1)"),e.addColorStop(.1,"rgba(160,160,160,0.3)"),e.addColorStop(.5,"rgba(255,255,255,0.5)"),e.addColorStop(.9,"rgba(160,160,160,0.3)"),e.addColorStop(1,"rgba(  0,  0,  0,0.1)"),t.fillStyle=e,t.fillRect(0,0,s.width,s.height),s},this.onEvent=function(s,t){},this.onInputsUpdated=function(s){}},yp=()=>new pT;var mT=500,gT={model3DUrl:"https://production.storage.superviz.com/readyplayerme/1.glb",imageUrl:"https://production.cdn.superviz.com/static/default-avatars/1.png"},Fo=class{constructor(t,e){this.participants=[];this.isAttached=!1;this.localSlot=-1;this.currentCirclePosition=Dr;this.currentLocalPosition=Dr;this.currentLocalRotation=Dr;this.currentLocalLaserDest=Dr;this.circlePositions=[];this.avatars={};this.lasers={};this.laserUpdateIntervals={};this.positionInfos={};this.tempQuaternion=new hi(0,0,0,0);this.isSweeping=!1;this.unsubscribeFrom=[];this.attach=t=>{if(Object.values(t).includes(null)||Object.values(t).includes(void 0)){let u=`${this.name} @ attach - params are required`;throw this.logger.log(u),new Error(u)}let{realtime:e,eventBus:i,useStore:a}=t,{localParticipant:o}=a.call(this,"global-store");o.subscribe(),this.realtime=e,this.isAttached=!0,this.eventBus=i,this.logger.log("attached"),this.start()};this.detach=()=>{if(!this.isAttached){this.logger.log(`${this.name} @ detach - component is not attached}`);return}this.logger.log("detached"),this.destroy(),this.unsubscribeFrom.forEach(t=>t(this)),this.realtime=void 0,this.localParticipant=void 0,this.isAttached=!1};this.destroy=()=>{this.unsubscribeToRealtimeEvents(),this.unsubscribeToEventBusEvents(),this.realtime.leavePresence3DChannel(),this.isAttached=!1,this.ambientLight.stop(),this.directionalLight.stop(),this.participants.forEach(t=>{this.removeParticipant(t,!0)}),Object.keys(this.laserUpdateIntervals).forEach(t=>{clearInterval(this.laserUpdateIntervals[t])}),this.participants=[],this.laserUpdateIntervals={},this.avatars={},this.lasers={},this.realtime=void 0};this.start=t=>{if(t||this.realtime.enterPresence3DChannel(this.localParticipant),!this.realtime.isJoinedRoom||!this.realtime.isJoinedPresence3D){this.logger.log("matterport component @ start - not joined yet"),setTimeout(()=>{this.logger.log("matterport component @ start - retrying"),this.start(!0)},1e3);return}this.subscribeToRealtimeEvents(),this.subscribeToEventBusEvents(),this.createParticipantList()};this.subscribeToRealtimeEvents=()=>{this.logger.log("matterport component @ subscribeToRealtimeEvents"),this.realtime.presence3dObserver.subscribe(this.onParticipantsUpdated),this.realtime.presence3dJoinedObserver.subscribe(this.onParticipantJoined),this.realtime.presence3dLeaveObserver.subscribe(this.onParticipantLeave),this.realtime.roomInfoUpdatedObserver.subscribe(this.onRoomInfoUpdate)};this.unsubscribeToRealtimeEvents=()=>{this.logger.log("matterport component @ unsubscribeToRealtimeEvents"),this.realtime.presence3dJoinedObserver.unsubscribe(this.onParticipantJoined),this.realtime.presence3dLeaveObserver.unsubscribe(this.onParticipantLeave),this.realtime.presence3dObserver.unsubscribe(this.onParticipantsUpdated),this.realtime.roomInfoUpdatedObserver.unsubscribe(this.onRoomInfoUpdate)};this.subscribeToEventBusEvents=()=>{this.logger.log("matterport component @ subscribeToEventBusEvents"),this.eventBus.subscribe("realtime.go-to-participant",this.goTo),this.eventBus.subscribe("realtime.local-follow-participant",this.localFollow),this.eventBus.subscribe("realtime.follow-participant",this.follow),this.eventBus.subscribe("realtime.private-mode",this.setPrivate)};this.unsubscribeToEventBusEvents=()=>{this.logger.log("matterport component @ unsubscribeToEventBusEvents"),this.eventBus.unsubscribe("realtime.go-to-participant",this.goTo),this.eventBus.unsubscribe("realtime.local-follow-participant",this.localFollow),this.eventBus.unsubscribe("realtime.private-mode",this.setPrivate),this.eventBus.unsubscribe("realtime.follow-participant",this.follow)};this.onParticipantJoined=t=>{if(!t.data)return;this.logger.log("matterport component @ onParticipantJoined",t);let{id:e,name:i,avatar:a,avatarConfig:o,type:u}=t.data;if(e===this.localParticipantId){this.onLocalParticipantJoined(t.data);return}this.addParticipant({id:e,name:i,avatar:a,avatarConfig:o,type:u})};this.onLocalParticipantJoined=t=>{var e,i,a,o;this.config.avatarConfig&&this.realtime.setParticipantData({avatarConfig:this.config.avatarConfig}),(e=t.avatar)!=null&&e.model3DUrl&&this.realtime.setParticipantData({avatar:{model3DUrl:t.avatar.model3DUrl,imageUrl:(i=t.avatar)==null?void 0:i.imageUrl}}),(a=t.avatar)!=null&&a.model3DUrl||this.realtime.setParticipantData({avatar:{model3DUrl:gT.model3DUrl,imageUrl:(o=t.avatar)==null?void 0:o.imageUrl}})};this.onParticipantLeave=t=>{this.logger.log("matterport component @ onParticipantLeave",t);let e=this.participants.find(i=>i.id===t.clientId);!e||this.removeParticipant(e,!0)};this.onParticipantUpdated=t=>{var f,p;this.logger.log("matterport component @ onParticipantUpdated",t);let{id:e,name:i,avatar:a,avatarConfig:o,position:u,rotation:c,type:d}=(f=t.data)!=null?f:t;this.updateParticipant({position:u,rotation:c,id:e,name:i,avatar:a,avatarConfig:o,type:d}),(this.localFollowParticipantId||this.followParticipantId)&&this.moveToAnotherParticipant((p=this.localFollowParticipantId)!=null?p:this.followParticipantId)};this.updateParticipant=t=>Ie(this,null,function*(){var i,a;if(!this.participants||this.participants.length===0||!t||!t.id||t.id===this.localParticipantId)return;let e=this.participants.find(o=>o.id===t.id);if(!e){this.addParticipant(t);return}if(((i=e.avatar)==null?void 0:i.model3DUrl)!==((a=t.avatar)==null?void 0:a.model3DUrl)||!(0,bp.isEqual)(e.avatarConfig,t.avatarConfig)||e.name!==t.name){this.removeParticipant(t,!1);let o=this.createParticipantOn3D(t);this.participants.push(o),this.config.isAvatarsEnabled&&(yield this.createAvatar(o)),this.config.isLaserEnabled&&this.createLaser(o),this.config.isNameEnabled&&this.createName(o,this.avatars[t.id])}else{let o=this.participants.findIndex(u=>u.id===t.id);o!==-1&&(this.participants[o]=t)}this.logger.log("matterport component @ updateParticipant",{participant:t,participants:this.participants})});this.onRoomInfoUpdate=t=>{this.logger.log("matterport component @ onRoomInfoUpdate",t);let{gather:e,hostClientId:i,followParticipantId:a}=t;this.followParticipantId=a,e&&this.moveToAnotherParticipant(i),this.realtime.hostClientId===this.localParticipant.id&&e&&this.realtime.setGather(!1)};this.createParticipantList=()=>{let t=this.realtime.getParticipants;Object.values(t).forEach(e=>{let{data:i}=e;this.addParticipant(i)}),this.logger.log("matterport component @ createParticipantList",this.participants)};this.createParticipantOn3D=({id:t,name:e,avatar:i,avatarConfig:a,type:o})=>{let u={id:t,name:e,avatar:i,isAudience:o==="audience",avatarConfig:t===this.localParticipantId?this.config.avatarConfig:a,position:{x:0,y:0,z:0},rotation:{x:0,y:0}};return this.logger.log("matterport component @ createParticipantOn3D",u),u};this.removeParticipant=(t,e)=>{this.logger.log("matterport component @ removeParticipant",{participant:t,unsubscribe:e}),this.participants=this.participants.filter(i=>i.id!==t.id),this.destroyAvatar(t),this.destroyLaser(t),e&&this.realtime.unsubscribeFromParticipant3DUpdate(t.id,this.onParticipantUpdated)};this.addParticipant=t=>Ie(this,null,function*(){if(!t||!t.id||t.type==="audience")return;let e=this.createParticipantOn3D(t);if(this.participants.find(i=>i.id===e.id)){this.logger.log("matterport component @ addParticipant - participant already exists"),this.onParticipantUpdated(t);return}this.participants.push(e),this.logger.log("matterport component @ addParticipant",{participant:t,participantOn3D:e,participants:this.participants}),this.realtime.subscribeToParticipant3DUpdate(e.id,this.onParticipantUpdated),this.localParticipantId!==e.id&&(this.config.isAvatarsEnabled&&(yield this.createAvatar(e)),this.config.isLaserEnabled&&this.createLaser(e),this.config.isNameEnabled&&this.createName(e,this.avatars[t.id]))});this.goTo=t=>{this.logger.log("matterport component @ goTo",t),this.moveToAnotherParticipant(t)};this.gather=()=>{this.logger.log("matterport component @ gather"),this.realtime.setGather(!0)};this.setPrivate=t=>{this.logger.log("matterport component @ private mode",t),this.realtime.updatePresence3D({id:this.localParticipantId,isPrivate:t})};this.localFollow=t=>{this.localFollowParticipantId=t};this.moveToAnotherParticipant=t=>{if(!this.positionInfos[t]||!this.isAttached||t===this.localParticipantId)return;let{mode:e}=this.positionInfos[t];if(e==="mode.inside"){let{sweep:i}=this.positionInfos[t];if(i){let a=this.positionInfos[t].rotation||{x:0,y:0};this.moveToSweep(i,a)}}if(e==="mode.dollhouse"||e==="mode.floorplan"){let i=this.matterportSdk.Mode.TransitionType.FLY,{position:a,rotation:o,floor:u}=this.positionInfos[t];this.matterportSdk.Mode.moveTo(e,{position:a,rotation:o,transition:i,zoom:25}).then(c=>{this.currentLocalMode=c}),e==="mode.floorplan"&&this.currentLocalFloorId!==u&&(u===-1?this.matterportSdk.Floor.showAll():this.matterportSdk.Floor.moveTo(u).then(()=>{this.currentLocalFloorId=u}))}};this._onLocalSweepChangeObserver=t=>{!this.realtime||(this.currentSweepId=t.id,this.realtime.updatePresence3D({id:this.localParticipantId,sweep:this.currentSweepId}))};this._onLocalFloorChangeObserver=t=>{!this.realtime||(t.id!==""&&(this.currentLocalFloorId=parseFloat(t.id)),t.name==="all"&&(this.currentLocalFloorId=-1),this.realtime.updatePresence3D({id:this.localParticipantId,floor:this.currentLocalFloorId}))};this._onLocalModeChangeObserver=t=>{!this.realtime||(this.currentLocalMode=t,this.realtime.updatePresence3D({id:this.localParticipantId,mode:this.currentLocalMode}))};this._onLocalCameraMoveObserver=({position:t,rotation:e,sweep:i})=>{!this.realtime||(this.currentLocalPosition=this.adjustMyPositionToCircle(t),this.currentLocalRotation=e,this.currentSweepId=i,this.realtime&&this.realtime.updatePresence3D({id:this.localParticipantId,position:this.currentLocalPosition,rotation:this.currentLocalRotation,laser:this.currentLocalLaserDest,sweep:this.currentSweepId,mode:this.currentLocalMode,floor:this.currentLocalFloorId}))};this._onLocalMouseMoveObserver=t=>{!this.realtime||(this.currentLocalLaserDest=t.position,this.realtime.updatePresence3D({id:this.localParticipantId,position:this.currentLocalPosition,rotation:this.currentLocalRotation,laser:this.currentLocalLaserDest,mode:this.currentLocalMode,sweep:this.currentSweepId}))};this.addInputComponent=()=>Ie(this,null,function*(){let[t]=yield this.matterportSdk.Scene.createObjects(1),e=t.addNode();this.mpInputComponent=e.addComponent("mp.input",{eventsEnabled:!1,userNavigationEnabled:!0}),e.start()});this.addSceneLight=()=>Ie(this,null,function*(){this.directionalLight=yield this.createDirectionLight(),this.ambientLight=yield this.createAmbientLight()});this.createDirectionLight=()=>Ie(this,null,function*(){let[t]=yield this.matterportSdk.Scene.createObjects(1),e=t.addNode(),i={enabled:!0,color:{r:1,g:1,b:1},intensity:1,position:{x:.2,y:1,z:0},target:{x:.5,y:0,z:0},debug:!1},a=e.addComponent("mp.directionalLight",i);return this.THREE=a.context.three,e.start(),e});this.createAmbientLight=()=>Ie(this,null,function*(){let[t]=yield this.matterportSdk.Scene.createObjects(1),e=t.addNode(),i={enabled:!0,color:{r:1,g:1,b:1},intensity:1};return e.addComponent("mp.ambientLight",i),e.start(),e});this.adjustMyPositionToCircle=t=>{var i;if(!this.realtime||(this.localSlot=this.realtime.getParticipantSlot(this.localParticipantId),!this.THREE||this.localSlot===-1))return t;let e=new this.THREE.Vector3(t==null?void 0:t.x,t==null?void 0:t.y,t==null?void 0:t.z);return this.circlePositions[this.localSlot]?((i=this.currentCirclePosition)!=null&&i.isVector3||(this.currentCirclePosition=new this.THREE.Vector3(this.circlePositions[this.localSlot].x,t.y,this.circlePositions[this.localSlot].z)),this.currentCirclePosition.set(this.circlePositions[this.localSlot].x,t.y,this.circlePositions[this.localSlot].z),e.add(this.currentCirclePosition.multiplyScalar(.13)),{x:e.x,y:t.y,z:e.z}):t};this.onParticipantsUpdated=t=>{!this.isAttached||(this.logger.log("matterport component @ onParticipantsUpdated",t),Object.values(t).forEach(e=>{if(e.clientId===this.localParticipantId)return;let i=e.clientId,{position:a,rotation:o,sweep:u,floor:c,mode:d,isPrivate:f}=e.data;if(this.positionInfos[i]={position:a,rotation:o,mode:d,sweep:u,floor:c},f&&this.avatars[i]&&this.removeParticipant(e.data,!0),!f&&!this.avatars[i]&&this.addParticipant(e.data),this.avatars[i]){let p=this.avatars[i],m=this.lasers[i],g=e.data.laser;a&&o&&this.updateAvatar(p,a,o),m&&(this.laserUpdateIntervals[i]&&clearInterval(this.laserUpdateIntervals[i]),this.laserUpdateIntervals[i]=setInterval(()=>{this.updateLaser(i,p,m,g)},30))}}))};var i,a,o,u,c,d,f;this.name="presence3dMatterport",this.logger=new rr("@superviz/sdk/matterport-component"),this.logger.log("matterport component @ constructor",{matterportSdk:t,options:e}),this.config={isAvatarsEnabled:(i=e==null?void 0:e.isAvatarsEnabled)!=null?i:!0,isLaserEnabled:(a=e==null?void 0:e.isLaserEnabled)!=null?a:!0,isNameEnabled:(o=e==null?void 0:e.isNameEnabled)!=null?o:!0,avatarConfig:{height:((u=e==null?void 0:e.avatarConfig)==null?void 0:u.height)||.25,scale:((c=e==null?void 0:e.avatarConfig)==null?void 0:c.scale)||.55,laserOrigin:(f=(d=e==null?void 0:e.avatarConfig)==null?void 0:d.laserOrigin)!=null?f:{x:0,y:-.2,z:.07}}},this.logger.log("matterport component @ constructor - config",this.config),this.matterportSdk=t,this.matterportSdk.Scene.register("lerper",_p),this.matterportSdk.Scene.register("name",xp),this.matterportSdk.Scene.register("laser",yp),this.addInputComponent(),this.addSceneLight(),this.createCircleOfPositions(),this.subscribeToMatterportEvents()}get localParticipantId(){var t;return(t=this.localParticipant)==null?void 0:t.id}follow(t){this.logger.log("matterport component @ follow"),this.realtime.setFollowParticipant(t)}destroyAvatar(t){return Ie(this,null,function*(){this.logger.log("matterport component @ destroyAvatar",t),this.avatars[t.id]&&(this.avatars[t.id].stop(),delete this.avatars[t.id])})}destroyLaser(t){return Ie(this,null,function*(){this.logger.log("matterport component @ destroyLaser",t),this.lasers[t.id]&&(this.lasers[t.id].stop(),delete this.lasers[t.id])})}createAvatar(t){return Ie(this,null,function*(){var f,p,m,g;if(this.logger.log("matterport component @ createAvatar",t),!this.isAttached)return;let e=((f=t==null?void 0:t.avatarConfig)==null?void 0:f.scale)||.55,i=((p=t==null?void 0:t.avatarConfig)==null?void 0:p.height)||.25,[a]=yield this.matterportSdk.Scene.createObjects(1),o=a.addNode(),u=Dr;o.obj3D.rotation.set(u.x,u.y,u.z),o.obj3D.name="avatar",o.obj3D.userData={uuid:t.id,name:t.name,height:i};let c=(g=(m=t.avatar)==null?void 0:m.model3DUrl)!=null?g:"https://production.storage.superviz.com/readyplayerme/1.glb",d={x:e,y:e,z:e};return o.lerper=o.addComponent("lerper"),o.avatarName=o.addComponent("name"),this.avatars[t.id]=o,new Promise(y=>{o.addComponent("mp.gltfLoader",{url:c,localScale:d,onLoaded:()=>{this.matterportSdk.Camera.getPose().then(M=>{this._onLocalCameraMoveObserver({position:M.position,rotation:M.rotation,sweep:M.sweep}),y(o)})}}),o.start()})})}createName(t,e){return Ie(this,null,function*(){var m,g;if(this.logger.log("createName",t,e),!e)return;let i=Number(this.THREE.REVISION),a=(g=(m=t.avatar)==null?void 0:m.model3DUrl)!=null?g:"https://production.storage.superviz.com/readyplayerme/1.glb",o=a==null?void 0:a.includes("readyplayerme"),u=e.avatarName,c=this.realtime.getParticipantSlot(t.id),d=new this.THREE.Box3().setFromObject(e.obj3D),f=new W(0,0,0);d.getSize(f);let p;i<=146?p=d.min.y-e.position.y+f.y*1.1:(p=f.y*1.2,o&&(p=f.y*4.1)),u.createName(e.obj3D,t.name,c,p)})}createLaser(t){return Ie(this,null,function*(){var o;if(this.logger.log("matterport component @ createLaser",t),!this.isAttached)return;let e=new W(0,-.2,.07);(o=t.avatarConfig)!=null&&o.laserOrigin&&(e=new W(t.avatarConfig.laserOrigin.x,t.avatarConfig.laserOrigin.y,t.avatarConfig.laserOrigin.z));let[i]=yield this.matterportSdk.Scene.createObjects(1),a=i.addNode();a.laserPointer=a.addComponent("laser",{origin:e}),a.start(),a.obj3D.userData={uuid:t.id},this.lasers[t.id]=a})}subscribeToMatterportEvents(){this.matterportSdk.Camera.pose.subscribe(this._onLocalCameraMoveObserver),this.matterportSdk.Pointer.intersection.subscribe(this._onLocalMouseMoveObserver),this.matterportSdk.Floor.current.subscribe(this._onLocalFloorChangeObserver),this.matterportSdk.Mode.current.subscribe(this._onLocalModeChangeObserver),this.matterportSdk.Sweep.current.subscribe(this._onLocalSweepChangeObserver)}createCircleOfPositions(){let e=4.8,i=0;e<2&&(e=2);for(let a=0;a<16;a++){i=a*(360/16);let o=i*(Math.PI/180),u=e*Math.cos(o),c=0,d=e*Math.sin(o);if(a!==0){let f={x:u,y:c,z:d};a%2===0?this.circlePositions.push(f):this.circlePositions.unshift(f)}}}moveToSweep(t,e){this.isSweeping||!this.isAttached||(this.mpInputComponent&&(this.mpInputComponent.inputs.userNavigationEnabled=!1),this.isSweeping=!0,this.matterportSdk.Sweep.moveTo(t,{transitionTime:mT,transition:this.matterportSdk.Sweep.Transition.FLY,rotation:e||this.currentLocalRotation}).finally(()=>{this.isSweeping=!1,this.mpInputComponent&&(this.mpInputComponent.inputs.userNavigationEnabled=!0)}))}updateAvatar(t,e,i){var M,v,_;if(!this.isAttached)return;let a=new this.THREE.Vector3(1,0,0),o=new this.THREE.Vector3(0,1,0),u=new this.THREE.Quaternion().setFromAxisAngle(a,this.THREE.MathUtils.degToRad(-i.x)),c=new this.THREE.Quaternion().setFromAxisAngle(o,this.THREE.MathUtils.degToRad(i==null?void 0:i.y)+Math.PI),{lerper:d}=t;d.animateQuaternion(t.obj3D.quaternion,c.multiply(u));let p=parseFloat((_=(v=(M=t==null?void 0:t.obj3D)==null?void 0:M.userData)==null?void 0:v.height)!=null?_:0)-.62,m=new this.THREE.Vector3(this.currentCirclePosition.x,0,this.currentCirclePosition.z),y=new this.THREE.Vector3(e==null?void 0:e.x,0,e==null?void 0:e.z).sub(m);y.y=e.y+p,d.animateVector(t.obj3D.position,y)}updateLaser(t,e,i,a){if(!e||!i||!a||!this.isAttached)return;let o=i.laserPointer,{x:u,y:c,z:d}=e.obj3D.position,f={x:u,y:c+.35,z:d};if(e.obj3D.getWorldQuaternion(this.tempQuaternion),o){let p=this.realtime.getParticipantSlot(t);o.updateGeometry(f,a,!0,!0,p,this.tempQuaternion)}}};var nm=Kl(em());var No=class{constructor(t={}){this.subscribe=t=>{this.callbacks.push(t)};this.unsubscribe=t=>{this.callbacks=this.callbacks.filter(e=>e!==t)};this.publish=(...t)=>{!this.callbacks||this.callbacks.forEach(e=>{this.callListener(e,t).catch(i=>{this.logger.log("superviz-sdk:observer-helper:publish:error",`
            Failed to execute callback on publish value.
            Callback: ${e}
            Event: ${JSON.stringify(t)}
            Error: ${i}
          `)})})};this.reset=()=>{this.callbacks=[]};this.destroy=()=>{delete this.logger,delete this.callbacks};this.callListener=(t,e)=>new Promise((i,a)=>{try{let o=t(...e);i(o)}catch(o){a(o)}});let{logger:e,throttleTime:i}=t;this.logger=e!=null?e:new rr("@superviz/sdk/observer-helper"),this.throttle=i,this.callbacks=[],this.throttle&&(this.publish=(0,nm.default)(this.publish,this.throttle))}};var im,mu=class{constructor(){this.eventType="INTERACTION.CLICK"}onEvent(){im.onClick()}},zo=class{constructor(t,e){this.isPinsVisible=!0;this.divWrapperReplacementInterval=null;this.isSweeping=!1;this.commentsSide="left";this.selectedPin=null;this.setCommentsMetadata=t=>{this.commentsSide=t};this.hideTemporaryPin=t=>{var i;let e=t.target;this.showcaseDiv.contains(e)||((i=this.pins.get("temporary-pin"))==null?void 0:i.contains(e))||this.removeAnnotationPin("temporary-pin")};this.resetPins=t=>{t&&(t==null?void 0:t.key)!=="Escape"||(this.resetSelectedPin(),this.removeAnnotationPin("temporary-pin"),this.temporaryPinCoordinates=null)};this.annotationSelected=({detail:t})=>{var d,f;let{uuid:e,haltGoToPin:i,newPin:a}=t;if(!e)return;a&&this.pins.get(e).setAttribute("newPin","");let o=JSON.parse((f=(d=this.selectedPin)==null?void 0:d.getAttribute("annotation"))!=null?f:"{}");if(this.resetPins(),(o==null?void 0:o.uuid)===e)return;document.body.dispatchEvent(new CustomEvent("close-temporary-annotation"));let u=this.pins.get(e);if(!u)return;u.setAttribute("active",""),this.selectedPin=u;let c=this.annotations.find(p=>p.uuid===e);if(c){let p=JSON.parse(c.position);if(p&&!i){let m=p.camera;this.moveToSweep(m.sweep,m.rotation)}}};this.onClick=()=>{if(!this.isActive)return;let t={x:this.intersection.position.x,y:this.intersection.position.y,z:this.intersection.position.z,type:"matterport"},e={position:t,camera:this.cameraPose};this.resetSelectedPin(),this.onPinFixedObserver.publish(e),this.createTemporaryPin(t)};this.onToggleAnnotationSidebar=({detail:t})=>{let{open:e}=t;e||(this.pins.forEach(i=>{i.removeAttribute("active")}),this.pins.has("temporary-pin")&&this.removeAnnotationPin("temporary-pin"))};im=this,this.showcaseDiv=e,this.matterportSdk=t,this.logger=new rr("@superviz/sdk/comments-component/matterport-adapter"),this.isActive=!1,this.pins=new Map,this.divWrapper=this.createDivWrapper(),this.matterportSdk.Asset.registerTexture("pointer","https://production.cdn.superviz.com/static/pin-add.png"),this.createInputListener(),document.body.addEventListener("select-annotation",this.annotationSelected),document.body.addEventListener("toggle-annotation-sidebar",this.onToggleAnnotationSidebar),document.body.style.position="relative",this.onPinFixedObserver=new No,this.annotations=[],this.renderAnnotationsPins(),this.matterportSdk.Camera.pose.subscribe(i=>{this.cameraPose=i,(this.isActive||this.isPinsVisible)&&this.renderAnnotationsPins()}),this.showcaseSides=this.showcaseDiv.getBoundingClientRect()}destroy(){this.removeAnnotationsPins(),this.removeListeners()}setActive(t){if(this.isActive=t,this.isActive){this.addListeners(),this.matterportSdk.Pointer.editTexture("pointer");return}this.matterportSdk.Pointer.resetTexture()}setPinsVisibility(t){if(this.isPinsVisible=t,this.isPinsVisible){this.renderAnnotationsPins();return}this.removeAnnotationsPins()}updateAnnotations(t){this.logger.log("updateAnnotations",t),this.annotations=t,!(!this.isActive&&!this.isPinsVisible)&&this.renderAnnotationsPins()}removeAnnotationPin(t){let e=this.pins.get(t);!e||(e.remove(),this.pins.delete(t),this.annotations=this.annotations.filter(i=>i.uuid!==t))}createTemporaryPin(t){let e=document.getElementById("superviz-temporary-pin");this.temporaryPinCoordinates=t,e||(e=document.createElement("superviz-comments-annotation-pin"),e.id="superviz-temporary-pin",e.setAttribute("type","add"),e.setAttribute("showInput",""),e.setAttribute("containerSides",JSON.stringify(this.showcaseSides)),e.setAttribute("commentsSide",this.commentsSide),e.setAttribute("participantsList",JSON.stringify(this.participants)),e.setAttribute("position",JSON.stringify(this.temporaryPinCoordinates)),e.setAttribute("annotation",JSON.stringify({})),e.setAttributeNode(document.createAttribute("active")));let i=this.showcaseDiv,{width:a,height:o}=i.getBoundingClientRect(),u=this.position3DToScreen(t,a,o,0,-32),c={x:u.left,y:u.top,type:t.type};e.setAttribute("position",JSON.stringify(c)),this.divWrapper.appendChild(e),this.pins.set("temporary-pin",e)}addListeners(){this.intersectionObserver=this.matterportSdk.Pointer.intersection.subscribe(t=>{this.intersection=t}),this.inputComponent.inputs.eventsEnabled=!0,this.inputComponent.inputs.userNavigationEnabled=!1,document.body.addEventListener("keyup",this.resetPins),document.body.addEventListener("click",this.hideTemporaryPin)}removeListeners(){var t;document.body.removeEventListener("select-annotation",this.annotationSelected),document.body.removeEventListener("toggle-annotation-sidebar",this.onToggleAnnotationSidebar),(t=this.intersectionObserver)==null||t.cancel(),this.inputComponent.inputs.eventsEnabled=!1,this.inputComponent.inputs.userNavigationEnabled=!0,document.body.removeEventListener("keyup",this.resetPins),document.body.removeEventListener("click",this.hideTemporaryPin)}renderAnnotationsPins(){return Ie(this,null,function*(){this.annotations.forEach(e=>Ie(this,null,function*(){let a=JSON.parse(e.position).position;if((a==null?void 0:a.type)!=="matterport"||e.resolved)return;this.pins.has(e.uuid)||this.createPin(e,a);let{width:o,height:u}=this.showcaseDiv.getBoundingClientRect(),c=this.position3DToScreen(a,o,u,0,-32),d=yield this.checkIsVisible(c,a),f=this.pins.get(e.uuid);d?(f.setAttribute("style","opacity: 1"),this.pins.get(e.uuid).setAttribute("position",JSON.stringify({x:c.left,y:c.top}))):f.setAttribute("style","opacity: 0")}));let t=this.pins.get("temporary-pin");if(t){let{width:e,height:i}=this.showcaseDiv.getBoundingClientRect(),a=this.position3DToScreen(this.temporaryPinCoordinates,e,i,0,-32);(yield this.checkIsVisible(a,this.temporaryPinCoordinates))?(t.setAttribute("style","opacity: 1"),t.setAttribute("position",JSON.stringify({x:a.left,y:a.top}))):t.setAttribute("style","opacity: 0")}})}createPin(t,e){let{width:i,height:a}=this.showcaseDiv.getBoundingClientRect(),o=this.position3DToScreen(e,i,a,0,-32),u=document.createElement("superviz-comments-annotation-pin");this.divWrapper.appendChild(u),u.setAttribute("type","show"),u.setAttribute("annotation",JSON.stringify(t)),u.setAttribute("position",JSON.stringify({x:o.left,y:o.top})),u.setAttribute("participantsList",JSON.stringify(this.participants)),this.pins.set(t.uuid,u)}removeAnnotationsPins(){this.pins.forEach(t=>{t.remove()}),this.pins.clear()}set participantsList(t){this.participants=t}resetSelectedPin(){!this.selectedPin||(this.selectedPin.removeAttribute("active"),this.selectedPin=null)}moveToSweep(t,e){this.isSweeping||(this.isSweeping=!0,this.matterportSdk.Sweep.moveTo(t,{transitionTime:500,transition:this.matterportSdk.Sweep.Transition.FLY,rotation:e}).finally(()=>{this.isSweeping=!1}))}createDivWrapper(){let t=this.showcaseDiv.getBoundingClientRect(),e=document.createElement("div");return this.showcaseDiv.parentElement.style.position="relative",e.style.position="fixed",e.style.top=`${t.top}px`,e.style.left=`${t.left}px`,e.style.width=`${t.width}px`,e.style.height=`${t.height}px`,e.style.pointerEvents="none",e.style.overflow="hidden",this.divWrapperReplacementInterval||(this.divWrapperReplacementInterval=setInterval(()=>{let i=this.showcaseDiv.getBoundingClientRect();e.style.top=`${i.top}px`,e.style.left=`${i.left}px`,e.style.width=`${i.width}px`,e.style.height=`${i.height}px`},1)),this.showcaseDiv.parentElement.appendChild(e),e}createInputListener(){return Ie(this,null,function*(){let[t]=yield this.matterportSdk.Scene.createObjects(1),e=t.addNode();this.inputComponent=e.addComponent("mp.input",{eventsEnabled:!1,userNavigationEnabled:!0}),e.start(),this.inputComponent.spyOnEvent(new mu)})}position3DToScreen(t,e,i,a,o){let u={w:e,h:i},c=this.matterportSdk.Conversion.worldToScreen(t,this.cameraPose,u);return{top:Math.abs(c.y)+o,left:Math.abs(c.x)+a}}checkIsVisible(t,e){return Ie(this,null,function*(){let i=new W(e.x,e.y,e.z),a=yield this.matterportSdk.Renderer.getWorldPositionData({x:t.left,y:t.top});return!a||!a.position?!1:new W(a.position.x,a.position.y,a.position.z).distanceTo(i)<3})}};window.Presence3D=Fo;window.MatterportPin=zo;export{zo as MatterportPin,Fo as Presence3D};
/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
