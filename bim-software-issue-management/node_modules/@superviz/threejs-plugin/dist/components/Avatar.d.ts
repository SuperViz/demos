import { AnimationMixer, Object3D, Quaternion, Vector3, AnimationAction } from 'three';
export declare class Avatar {
    constructor(url: string, scale: number, height: number, isOwnAvatar: boolean);
    private clock;
    url: string;
    scale: number;
    height: number;
    mixer: AnimationMixer;
    animations: {
        [k: string]: AnimationAction;
    };
    private lerpAnimationFrame;
    private position;
    private lastPosition;
    private quaternion;
    private isOwnAvatar;
    root: Object3D;
    model: Object3D;
    private currentAnimation;
    isMoving: boolean;
    private isMovingCounter;
    private lastWorldModelPos;
    private worldPosition;
    load: () => Promise<Object3D>;
    setPosition(position: Vector3): void;
    setQuaternion(quaternion: Quaternion): void;
    destroy(): void;
    private animate;
    playAnimation(name: string): void;
    stopAnimation(name: string): void;
    stopAllAnimations(): void;
}
