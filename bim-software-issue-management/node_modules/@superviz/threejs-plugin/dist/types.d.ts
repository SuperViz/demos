import type { Quaternion, Vector3 } from 'three';
export interface ThreeJsComponentOptions {
    isAvatarsEnabled?: boolean;
    isLaserEnabled?: boolean;
    isNameEnabled?: boolean;
    isMouseEnabled?: boolean;
    renderLocalAvatar?: boolean;
    avatarConfig?: AvatarConfig;
}
export interface PositionInfo {
    position: Vector3;
    pointer: Vector3;
    quaternion: Quaternion;
}
export interface AvatarConfig {
    height: number;
    scale: number;
    laserOrigin: Position;
}
export interface Avatar {
    model3DUrl: string;
    imageUrl: string;
}
export interface ParticipantTo3D {
    id: string;
    name: string;
    avatar?: Avatar;
    avatarConfig?: AvatarConfig;
    isAudience?: boolean;
}
export interface ParticipantOn3D extends ParticipantTo3D {
    position: Position;
    rotation: Rotation;
}
export type Position = {
    x: number;
    y: number;
    z: number;
};
export type Rotation = {
    x: number;
    y: number;
};
