{"version":3,"file":"three-spritetext.js","sources":["../src/index.js"],"sourcesContent":["import {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  SRGBColorSpace,\n  Texture\n} from 'three';\n\nconst three = typeof window !== 'undefined' && window.THREE\n  ? window.THREE // Prefer consumption from global THREE, if exists\n  : {\n  LinearFilter,\n  Sprite,\n  SpriteMaterial,\n  SRGBColorSpace,\n  Texture\n};\n\nexport default class extends three.Sprite {\n  constructor(text = '', textHeight = 10, color = 'rgba(255, 255, 255, 1)') {\n    super(new three.SpriteMaterial());\n\n    this._text = `${text}`;\n    this._textHeight = textHeight;\n    this._color = color;\n    this._backgroundColor = false; // no background color\n\n    this._padding = 0;\n    this._borderWidth = 0;\n    this._borderRadius = 0;\n    this._borderColor = 'white';\n\n    this._strokeWidth = 0;\n    this._strokeColor = 'white';\n\n    this._fontFace = 'system-ui';\n    this._fontSize = 90; // defines text resolution\n    this._fontWeight = 'normal';\n\n    this._canvas = document.createElement('canvas');\n\n    this._genCanvas();\n  }\n\n  get text() { return this._text; }\n  set text(text) { this._text = text; this._genCanvas(); }\n  get textHeight() { return this._textHeight; }\n  set textHeight(textHeight) { this._textHeight = textHeight; this._genCanvas(); }\n  get color() { return this._color; }\n  set color(color) { this._color = color; this._genCanvas(); }\n  get backgroundColor() { return this._backgroundColor; }\n  set backgroundColor(color) { this._backgroundColor = color; this._genCanvas(); }\n  get padding() { return this._padding; }\n  set padding(padding) { this._padding = padding; this._genCanvas(); }\n  get borderWidth() { return this._borderWidth; }\n  set borderWidth(borderWidth) { this._borderWidth = borderWidth; this._genCanvas(); }\n  get borderRadius() { return this._borderRadius; }\n  set borderRadius(borderRadius) { this._borderRadius = borderRadius; this._genCanvas(); }\n  get borderColor() { return this._borderColor; }\n  set borderColor(borderColor) { this._borderColor = borderColor; this._genCanvas(); }\n  get fontFace() { return this._fontFace; }\n  set fontFace(fontFace) { this._fontFace = fontFace; this._genCanvas(); }\n  get fontSize() { return this._fontSize; }\n  set fontSize(fontSize) { this._fontSize = fontSize; this._genCanvas(); }\n  get fontWeight() { return this._fontWeight; }\n  set fontWeight(fontWeight) { this._fontWeight = fontWeight; this._genCanvas(); }\n  get strokeWidth() { return this._strokeWidth; }\n  set strokeWidth(strokeWidth) { this._strokeWidth = strokeWidth; this._genCanvas(); }\n  get strokeColor() { return this._strokeColor; }\n  set strokeColor(strokeColor) { this._strokeColor = strokeColor; this._genCanvas(); }\n\n  _genCanvas() {\n    const canvas = this._canvas;\n    const ctx = canvas.getContext('2d');\n\n    const border = Array.isArray(this.borderWidth) ? this.borderWidth : [this.borderWidth, this.borderWidth]; // x,y border\n    const relBorder = border.map(b => b * this.fontSize * 0.1); // border in canvas units\n\n    const borderRadius = Array.isArray(this.borderRadius) ? this.borderRadius : [this.borderRadius, this.borderRadius, this.borderRadius, this.borderRadius]; // tl tr br bl corners\n    const relBorderRadius = borderRadius.map(b => b * this.fontSize * 0.1); // border radius in canvas units\n\n    const padding = Array.isArray(this.padding) ? this.padding : [this.padding, this.padding]; // x,y padding\n    const relPadding = padding.map(p => p * this.fontSize * 0.1); // padding in canvas units\n\n    const lines = this.text.split('\\n');\n    const font = `${this.fontWeight} ${this.fontSize}px ${this.fontFace}`;\n\n    ctx.font = font; // measure canvas with appropriate font\n    const innerWidth = Math.max(...lines.map(line => ctx.measureText(line).width));\n    const innerHeight = this.fontSize * lines.length;\n    canvas.width = innerWidth + relBorder[0] * 2 + relPadding[0] * 2;\n    canvas.height = innerHeight + relBorder[1] * 2 + relPadding[1] * 2;\n\n    // paint border\n    if (this.borderWidth) {\n      ctx.strokeStyle = this.borderColor;\n\n      if (relBorder[0]) { // left + right borders\n        const hb = relBorder[0] / 2;\n        ctx.lineWidth = relBorder[0];\n        ctx.beginPath();\n        ctx.moveTo(hb, relBorderRadius[0]);\n        ctx.lineTo(hb, canvas.height - relBorderRadius[3]);\n        ctx.moveTo(canvas.width - hb, relBorderRadius[1]);\n        ctx.lineTo(canvas.width - hb, canvas.height - relBorderRadius[2]);\n        ctx.stroke();\n      }\n\n      if (relBorder[1]) { // top + bottom borders\n        const hb = relBorder[1] / 2;\n        ctx.lineWidth = relBorder[1];\n        ctx.beginPath();\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[0]), hb);\n        ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[1]), hb);\n        ctx.moveTo(Math.max(relBorder[0], relBorderRadius[3]), canvas.height - hb);\n        ctx.lineTo(canvas.width - Math.max(relBorder[0], relBorderRadius[2]), canvas.height - hb);\n        ctx.stroke();\n      }\n\n      if (this.borderRadius) { // strike rounded corners\n        const cornerWidth = Math.max(...relBorder);\n        const hb = cornerWidth / 2;\n        ctx.lineWidth = cornerWidth;\n        ctx.beginPath();\n        [\n          !!relBorderRadius[0] && [relBorderRadius[0], hb, hb, relBorderRadius[0]],\n          !!relBorderRadius[1] && [canvas.width - relBorderRadius[1], canvas.width - hb, hb, relBorderRadius[1]],\n          !!relBorderRadius[2] && [canvas.width - relBorderRadius[2], canvas.width - hb, canvas.height - hb, canvas.height - relBorderRadius[2]],\n          !!relBorderRadius[3] && [relBorderRadius[3], hb, canvas.height - hb, canvas.height - relBorderRadius[3]]\n        ].filter(d => d).forEach(([x0, x1, y0, y1]) => {\n          ctx.moveTo(x0, y0);\n          ctx.quadraticCurveTo(x1, y0, x1, y1);\n        });\n        ctx.stroke();\n      }\n    }\n\n    // paint background\n    if (this.backgroundColor) {\n      ctx.fillStyle = this.backgroundColor;\n      if (!this.borderRadius) {\n        ctx.fillRect(relBorder[0], relBorder[1], canvas.width - relBorder[0] * 2, canvas.height - relBorder[1] * 2);\n      } else { // fill with rounded corners\n        ctx.beginPath();\n        ctx.moveTo(relBorder[0], relBorderRadius[0]);\n        [\n          [relBorder[0], relBorderRadius[0], canvas.width - relBorderRadius[1], relBorder[1], relBorder[1], relBorder[1]], // t\n          [canvas.width - relBorder[0], canvas.width - relBorder[0], canvas.width - relBorder[0], relBorder[1], relBorderRadius[1], canvas.height - relBorderRadius[2]], // r\n          [canvas.width - relBorder[0], canvas.width - relBorderRadius[2], relBorderRadius[3], canvas.height - relBorder[1], canvas.height - relBorder[1], canvas.height - relBorder[1]], // b\n          [relBorder[0], relBorder[0], relBorder[0], canvas.height - relBorder[1], canvas.height - relBorderRadius[3], relBorderRadius[0]], // t\n        ].forEach(([x0, x1, x2, y0, y1, y2]) => {\n          ctx.quadraticCurveTo(x0, y0, x1, y1);\n          ctx.lineTo(x2, y2);\n        });\n        ctx.closePath();\n        ctx.fill();\n      }\n    }\n\n    ctx.translate(...relBorder);\n    ctx.translate(...relPadding);\n\n    // paint text\n    ctx.font = font; // Set font again after canvas is resized, as context properties are reset\n    ctx.fillStyle = this.color;\n    ctx.textBaseline = 'bottom';\n\n    const drawTextStroke = this.strokeWidth > 0;\n    if (drawTextStroke) {\n      ctx.lineWidth = this.strokeWidth * this.fontSize / 10;\n      ctx.strokeStyle = this.strokeColor;\n    }\n\n    lines.forEach((line, index) => {\n      const lineX = (innerWidth - ctx.measureText(line).width) / 2;\n      const lineY = (index + 1) * this.fontSize;\n\n      drawTextStroke && ctx.strokeText(line, lineX, lineY);\n      ctx.fillText(line, lineX, lineY);\n    });\n\n    // Inject canvas into sprite\n    if (this.material.map) this.material.map.dispose(); // gc previous texture\n    const texture = this.material.map = new three.Texture(canvas);\n    texture.minFilter = three.LinearFilter;\n    texture.colorSpace = three.SRGBColorSpace;\n    texture.needsUpdate = true;\n\n    const yScale = this.textHeight * lines.length + border[1] * 2 + padding[1] * 2;\n    this.scale.set(yScale * canvas.width / canvas.height, yScale, 0);\n  }\n\n  clone() {\n    return new this.constructor(this.text, this.textHeight, this.color).copy(this);\n  }\n\n  copy(source) {\n    three.Sprite.prototype.copy.call(this, source);\n\n    this.color = source.color;\n    this.backgroundColor = source.backgroundColor;\n    this.padding = source.padding;\n    this.borderWidth = source.borderWidth;\n    this.borderColor = source.borderColor;\n    this.fontFace = source.fontFace;\n    this.fontSize = source.fontSize;\n    this.fontWeight = source.fontWeight;\n    this.strokeWidth = source.strokeWidth;\n    this.strokeColor = source.strokeColor;\n\n    return this;\n  }\n}\n"],"names":["three","window","THREE","LinearFilter","Sprite","SpriteMaterial","SRGBColorSpace","Texture","_default","_three$Sprite","_inherits","_this","text","arguments","length","undefined","textHeight","color","_classCallCheck","_callSuper","_text","concat","_textHeight","_color","_backgroundColor","_padding","_borderWidth","_borderRadius","_borderColor","_strokeWidth","_strokeColor","_fontFace","_fontSize","_fontWeight","_canvas","document","createElement","_genCanvas","_createClass","key","get","set","padding","borderWidth","borderRadius","borderColor","fontFace","fontSize","fontWeight","strokeWidth","strokeColor","value","_this2","canvas","ctx","getContext","border","Array","isArray","relBorder","map","b","relBorderRadius","relPadding","p","lines","split","font","innerWidth","Math","max","apply","_toConsumableArray","line","measureText","width","innerHeight","height","strokeStyle","hb","lineWidth","beginPath","moveTo","lineTo","stroke","cornerWidth","filter","d","forEach","_ref","_ref2","_slicedToArray","x0","x1","y0","y1","quadraticCurveTo","backgroundColor","fillStyle","fillRect","_ref3","_ref4","x2","y2","closePath","fill","translate","textBaseline","drawTextStroke","index","lineX","lineY","strokeText","fillText","material","dispose","texture","minFilter","colorSpace","needsUpdate","yScale","scale","clone","constructor","copy","source","prototype","call"],"mappings":"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"}